{
  "dic": {},
  "ItemHolstered": {},
  "Wrapper`1": {
    "Items": {
      "Item1": "T",
      "Item2": true,
      "Item3": ""
    }
  },
  "__c": {
    "__9": {
      "Item1": "__c",
      "Item2": false,
      "Item3": ""
    },
    "__9__11_2": {
      "Item1": "Action",
      "Item2": false,
      "Item3": ""
    },
    "__9__13_2": {
      "Item1": "Action",
      "Item2": false,
      "Item3": ""
    },
    "__9__14_2": {
      "Item1": "Action",
      "Item2": false,
      "Item3": ""
    },
    "__9__16_0": {
      "Item1": "Renderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__16_1": {
      "Item1": "Renderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__16_2": {
      "Item1": "Renderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__16_3": {
      "Item1": "Renderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__16_4": {
      "Item1": "Renderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__16_5": {
      "Item1": "Renderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__16_6": {
      "Item1": "Renderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__16_7": {
      "Item1": "Renderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__16_8": {
      "Item1": "SkinnedMeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__17_0": {
      "Item1": "MeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__17_1": {
      "Item1": "MeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__17_2": {
      "Item1": "SkinnedMeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__17_3": {
      "Item1": "SkinnedMeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__18_0": {
      "Item1": "SkinnedMeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__18_1": {
      "Item1": "SkinnedMeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "__9__19_0": {
      "Item1": "SkinnedMeshRenderer",
      "Item2": true,
      "Item3": ""
    }
  },
  "HumanDebug": {},
  "ShoeType": {},
  "MovementSpeed": {},
  "Gender": {},
  "BloodType": {},
  "Trait": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "traitID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "trait": {
      "Item1": "CharacterTrait",
      "Item2": false,
      "Item3": ""
    },
    "reason": {
      "Item1": "Trait",
      "Item2": false,
      "Item3": ""
    },
    "date": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "Sighting": {
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "mov": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dest": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "run": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "exp": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "drunk": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "phone": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "poi": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sound": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ConversationInstance": {
    "active": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "True if active"
    },
    "room": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "tree": {
      "Item1": "DDSTreeSave",
      "Item2": false,
      "Item3": ""
    },
    "participantA": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "participantB": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "participantC": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "participantD": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "previouslyTalking": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "currentlyTalking": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "currentlyTalkingTo": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "speechTriggered": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "currentMessage": {
      "Item1": "DDSMessageSettings",
      "Item2": false,
      "Item3": ""
    },
    "currentLink": {
      "Item1": "DDSMessageLink",
      "Item2": false,
      "Item3": ""
    },
    "linkDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "timeUntilNextSpeech": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "currentlyTalkingSpeechQueue": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "treeName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "DisposalType": {},
  "Wound": {
    "humanID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "anchor": {
      "Item1": "CharacterAnchor",
      "Item2": false,
      "Item3": ""
    },
    "timestamp": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "bloodPoolID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "bloodPoolAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "human": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "bloodPool": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    }
  },
  "Death": {
    "isDead": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "location": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "timeOfDeathRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "weapon": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "murder": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "victim": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "killer": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "discoveredBy": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "discoveredAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "reported": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "reportType": {
      "Item1": "ReportType",
      "Item2": false,
      "Item3": ""
    },
    "smell": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "ReportType": {},
  "WalletItem": {
    "itemType": {
      "Item1": "WalletItemType",
      "Item2": false,
      "Item3": ""
    },
    "meta": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "money": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "WalletItemType": {},
  "NoteObject": {},
  "NewAIAction": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "goal": {
      "Item1": "NewAIGoal",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "AIActionPreset",
      "Item2": false,
      "Item3": ""
    },
    "isActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this action currently active?"
    },
    "completed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "repeat": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "checkedForInsertions": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "insertedAction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "insertedActionPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "usagePoint": {
      "Item1": "UsagePoint",
      "Item2": false,
      "Item3": ""
    },
    "isAtLocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is the citizen at the correct location?"
    },
    "path": {
      "Item1": "PathData",
      "Item2": false,
      "Item3": ""
    },
    "passedInteractable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "passedRoom": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "forcedNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "passedGroup": {
      "Item1": "SocialGroup",
      "Item2": false,
      "Item3": ""
    },
    "forceRun": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "estimatedArrival": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "arrivedAtDestination": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "actionCheckRecursion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "bestPlacement": {
      "Item1": "ObjectPlacement",
      "Item2": false,
      "Item3": ""
    },
    "passedAcquireItems": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    },
    "vantagePoint": {
      "Item1": "NewWall",
      "Item2": false,
      "Item3": ""
    },
    "audioLoop": {
      "Item1": "LoopingSoundInfo",
      "Item2": false,
      "Item3": ""
    },
    "lastRecordedTickWhileAtDesitnation": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "timeThisWillTake": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "progress": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "dontUpdateGoalPriorityForExtraTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "createdAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "debug": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "debugPassedInteractable": {
      "Item1": "InteractableController",
      "Item2": false,
      "Item3": ""
    },
    "debugPassedRoom": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "debugForcedNode": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "debugForcedNodeWorldPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "debugPickupInteractable": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    },
    "debugInteractableController": {
      "Item1": "InteractableController",
      "Item2": false,
      "Item3": ""
    },
    "debugInteractionUsagePosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    }
  },
  "TrackingTarget": {
    "actor": {
      "Item1": "Actor",
      "Item2": false,
      "Item3": ""
    },
    "lastValidSighting": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "priorityTarget": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "attractionRank": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "distance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "distanceRank": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fovRank": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "itemRank": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "lookAtRank": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "active": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "spookedByItem": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "spookTimer": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ChaseLogic": {
    "ai": {
      "Item1": "NewAIController",
      "Item2": false,
      "Item3": ""
    },
    "lastSeenPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "lastSeenNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "lastSeenDirection": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "projectedNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "projectedPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    }
  },
  "InvestigationUrgency": {},
  "ReactionState": {},
  "AITickRate": {},
  "NewAIGoal": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "aiController": {
      "Item1": "NewAIController",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "AIGoalPreset",
      "Item2": false,
      "Item3": ""
    },
    "basePriority": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "traitMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this goal currently active?"
    },
    "triggerTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The time this should happen at (ideally)"
    },
    "duration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "debugWorkStartHour": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "debugWorkEndHour": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "lastEstimatedTravelTime": {
      "Item1": "NewGameLocation",
      "Item2": false,
      "Item3": ""
    },
    "travelTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "activeTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The amount of time this has been active"
    },
    "lastUpdatedAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "jobID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "timingWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How important is this action compared to others"
    },
    "nourishmentWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "hydrationWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "altertnessWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "tirednessWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "energyWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "excitementWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "choresWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "hygeieneWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "bladderWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "heatWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "drunkWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "breathWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "poisonedWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "blindedWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "priority": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "actions": {
      "Item1": "NewAIAction",
      "Item2": true,
      "Item3": ""
    },
    "nextPotterAction": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "doorCheckCycle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "workCleanUpStarted": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "chosenInteractablesThisGoal": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    },
    "gameLocation": {
      "Item1": "NewGameLocation",
      "Item2": false,
      "Item3": ""
    },
    "roomLocation": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "passedNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "passedInteractable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "passedGameLocation": {
      "Item1": "NewGameLocation",
      "Item2": false,
      "Item3": ""
    },
    "passedVar": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "passedGroup": {
      "Item1": "SocialGroup",
      "Item2": false,
      "Item3": ""
    },
    "searchProgress": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "searchedNodes": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "murderRef": {
      "Item1": "Murder",
      "Item2": false,
      "Item3": ""
    },
    "lastCheckedForWorkingDay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "lastCheckedForGroupDay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "startGameWorkCheck": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "startGameGroupCheck": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "arrivedRoom": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    }
  },
  "DoorActionCheckResult": {},
  "DoorSide": {},
  "Smokestack": {
    "building": {
      "Item1": "NewBuilding",
      "Item2": false,
      "Item3": ""
    },
    "timer": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "LoadState": {},
  "CollectedLoadTimeInfo": {
    "build": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "citySize": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "generateNew": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "loadTimes": {
      "Item1": "LoadState",
      "Item2": true,
      "Item3": ""
    },
    "decorTimes": {
      "Item1": "NewRoom",
      "Item2": true,
      "Item3": ""
    }
  },
  "DecorClusterGenerationTimeInfo": {
    "cluster": {
      "Item1": "FurnitureCluster",
      "Item2": false,
      "Item3": ""
    },
    "found": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "DecorTotalTime": {
    "room": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "totalTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "BlockingDirection": {},
  "ConnectionType": {},
  "Descriptors": {
    "citizen": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "visualDistinctiveness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "build": {
      "Item1": "BuildType",
      "Item2": false,
      "Item3": ""
    },
    "height": {
      "Item1": "Height",
      "Item2": false,
      "Item3": ""
    },
    "heightCM": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "weightKG": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "shoeSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "footwear": {
      "Item1": "ShoeType",
      "Item2": false,
      "Item3": ""
    },
    "ethnicities": {
      "Item1": "EthnicitySetting",
      "Item2": true,
      "Item3": ""
    },
    "skinColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "hairColourCategory": {
      "Item1": "HairColour",
      "Item2": false,
      "Item3": ""
    },
    "hairColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "hairType": {
      "Item1": "HairStyle",
      "Item2": false,
      "Item3": ""
    },
    "eyeColour": {
      "Item1": "EyeColour",
      "Item2": false,
      "Item3": ""
    },
    "facialFeatures": {
      "Item1": "FacialFeaturesSetting",
      "Item2": true,
      "Item3": ""
    }
  },
  "Age": {},
  "BuildType": {},
  "Height": {},
  "EthnicGroup": {},
  "EthnicitySetting": {
    "group": {
      "Item1": "EthnicGroup",
      "Item2": false,
      "Item3": ""
    },
    "ratio": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "stats": {
      "Item1": "EthnicityStats",
      "Item2": false,
      "Item3": ""
    }
  },
  "HairColour": {},
  "HairStyle": {},
  "EyeColour": {},
  "FacialFeaturesSetting": {},
  "FacialFeature": {},
  "UnemployedType": {},
  "AirVent": {},
  "AirDuctSection": {
    "level": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "index": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "duct": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "previous": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "next": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "ext": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "peekSection": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "additionalRot": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "group": {
      "Item1": "AirDuctGroup",
      "Item2": false,
      "Item3": ""
    },
    "mapButton": {
      "Item1": "MapDuctsButtonController",
      "Item2": false,
      "Item3": ""
    },
    "discovered": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ArmsBoolSate": {},
  "IdleAnimationState": {},
  "CitizenPhysics": {
    "anchorConfig": {
      "Item1": "AnchorConfig",
      "Item2": false,
      "Item3": ""
    },
    "coll": {
      "Item1": "Collider",
      "Item2": false,
      "Item3": ""
    },
    "rb": {
      "Item1": "Rigidbody",
      "Item2": false,
      "Item3": ""
    }
  },
  "RagdollSnapshot": {
    "anchorConfig": {
      "Item1": "AnchorConfig",
      "Item2": false,
      "Item3": ""
    },
    "localPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "localRot": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    }
  },
  "RagdollSnapshotWorld": {
    "anchorConfig": {
      "Item1": "AnchorConfig",
      "Item2": false,
      "Item3": ""
    },
    "worldPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "worldRot": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    }
  },
  "SalesRecord": {
    "companyID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "punterID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "items": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "cost": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "difficulty": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fact": {
      "Item1": "Fact",
      "Item2": false,
      "Item3": ""
    }
  },
  "ForceSuccess": {},
  "MurderMethod": {
    "type": {
      "Item1": "WeaponType",
      "Item2": false,
      "Item3": ""
    },
    "blockDDS": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "MurderState": {},
  "KidnapRansomPhase": {},
  "MurderPick": {
    "person": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "mo": {
      "Item1": "MurderMO",
      "Item2": false,
      "Item3": ""
    },
    "score": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "Murder": {
    "presetStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "moStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "creationTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "murderID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "murdererID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "victimID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "streetID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "state": {
      "Item1": "MurderState",
      "Item2": false,
      "Item3": ""
    },
    "addressID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "waitingTimestamp": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "monkierPre": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "monkierPost": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "victimSiteID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "victimSiteIsStreet": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "kidnapKillPhase": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sniperKillShotNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "ransomSiteID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ransomAmount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fakeNumber": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fakeNumberStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ransomPhase": {
      "Item1": "KidnapRansomPhase",
      "Item2": false,
      "Item3": ""
    },
    "killTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "meetRestaurantID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "boothSeat1ID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "boothSeat2ID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "meetTimeTotal": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "meetTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "weaponStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ammoStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "weaponID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ammoID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "weaponSourceID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "acquiredEquipment": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dropChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "callingCardStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "callingCardOrigin": {
      "Item1": "CallingCardOrigin",
      "Item2": false,
      "Item3": ""
    },
    "callingCardID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "graffitiIDs": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "graffitiMsg": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "cullingActiveRooms": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "preset": {
      "Item1": "MurderPreset",
      "Item2": false,
      "Item3": ""
    },
    "mo": {
      "Item1": "MurderMO",
      "Item2": false,
      "Item3": ""
    },
    "murderer": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "victim": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "murderGoal": {
      "Item1": "NewAIGoal",
      "Item2": false,
      "Item3": ""
    },
    "location": {
      "Item1": "NewGameLocation",
      "Item2": false,
      "Item3": ""
    },
    "death": {
      "Item1": "Death",
      "Item2": false,
      "Item3": ""
    },
    "activeMurderItems": {
      "Item1": "JobTag",
      "Item2": true,
      "Item3": ""
    },
    "weaponPreset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "ammoPreset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "weapon": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "ammo": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "callingCardPreset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "callingCard": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "weaponSource": {
      "Item1": "Company",
      "Item2": false,
      "Item3": ""
    },
    "graffiti": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    },
    "sniperVictimSite": {
      "Item1": "NewGameLocation",
      "Item2": false,
      "Item3": ""
    },
    "ransomSite": {
      "Item1": "NewBuilding",
      "Item2": false,
      "Item3": ""
    },
    "meetRestaurant": {
      "Item1": "NewAddress",
      "Item2": false,
      "Item3": ""
    },
    "boothSeat1": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "boothSeat2": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "meetGoal1": {
      "Item1": "NewAIGoal",
      "Item2": false,
      "Item3": ""
    },
    "meetGoal2": {
      "Item1": "NewAIGoal",
      "Item2": false,
      "Item3": ""
    },
    "OnStateChanged": {
      "Item1": "OnMurderStateChange",
      "Item2": false,
      "Item3": ""
    }
  },
  "TrespassEscalation": {
    "actor": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isPlayer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "lastEscalationCheck": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "timeEscalation": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "StreetTile": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "worldPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "section": {
      "Item1": "StreetSection",
      "Item2": false,
      "Item3": ""
    },
    "angle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CallState": {},
  "CallType": {},
  "CallSource": {
    "callType": {
      "Item1": "CallType",
      "Item2": false,
      "Item3": ""
    },
    "dds": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "audio": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "dialog": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "job": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "convoType": {
      "Item1": "ConversationType",
      "Item2": false,
      "Item3": ""
    },
    "audioEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "dialogGreeting": {
      "Item1": "DialogPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "PhoneCall": {
    "from": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "to": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "duration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "caller": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "receiver": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "intendedReceiver": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "source": {
      "Item1": "CallSource",
      "Item2": false,
      "Item3": ""
    },
    "previousSate": {
      "Item1": "CallState",
      "Item2": false,
      "Item3": ""
    },
    "state": {
      "Item1": "CallState",
      "Item2": false,
      "Item3": ""
    },
    "ringTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "specRecevier": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dialingTimer": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "ringDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fromNS": {
      "Item1": "Telephone",
      "Item2": false,
      "Item3": ""
    },
    "toNS": {
      "Item1": "Telephone",
      "Item2": false,
      "Item3": ""
    },
    "callerNS": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "recevierNS": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "intendedReceiverNS": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "lineRingingLoop": {
      "Item1": "LoopingSoundInfo",
      "Item2": false,
      "Item3": ""
    },
    "lineActiveLoopCaller": {
      "Item1": "LoopingSoundInfo",
      "Item2": false,
      "Item3": ""
    },
    "lineActiveLoopReceiver": {
      "Item1": "LoopingSoundInfo",
      "Item2": false,
      "Item3": ""
    },
    "callAudioInstance": {
      "Item1": "EventInstance",
      "Item2": false,
      "Item3": ""
    },
    "connecting": {
      "Item1": "EventInstance",
      "Item2": false,
      "Item3": ""
    },
    "hangUpCaller": {
      "Item1": "EventInstance",
      "Item2": false,
      "Item3": ""
    },
    "hangUpReciever": {
      "Item1": "EventInstance",
      "Item2": false,
      "Item3": ""
    }
  },
  "NodeRaycastHit": {
    "coord": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "conditionalDoors": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "TimeSpeed": {},
  "TimeOfDay": {},
  "WeekDay": {},
  "Month": {},
  "WetMaterial": {
    "mat": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "instancedMat": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "affectedRenderers": {
      "Item1": "MeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "affectRain": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "rainMinMax": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "rainMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "affectCityWetness": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "cityWetnessMinMax": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "cityWetnessMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "cityWetnessLogScale": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "affectCitySnow": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "citySnowMinMax": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "citySnowMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "affectCoatMask": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "coatMaskMinMax": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "coatMaskMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "affectWind": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "windMinMax": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "windMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "SceneProfile": {},
  "SkyboxGradient": {
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "skyColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "fogAlbedo": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "ambientLightTop": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "ambientLightMiddle": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "ambientLightBottom": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "ambientLightingColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "fogColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "seaEmission": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "smokeEmission": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    }
  },
  "PhysicsSyncType": {},
  "CityEditorMode": {},
  "CityEditorSubMode": {},
  "DDSBundle": {
    "displayName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "description": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "languageCode": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "path": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "TreeTriggers": {},
  "RepeatSetting": {},
  "TriggerPoint": {},
  "TraitConditionType": {},
  "DDSComponent": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "DDSBlockSave": {
    "replacements": {
      "Item1": "DDSReplacement",
      "Item2": true,
      "Item3": ""
    }
  },
  "DDSReplacement": {
    "replaceWithID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "useConnection": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "connection": {
      "Item1": "ConnectionType",
      "Item2": false,
      "Item3": ""
    },
    "useDislikeLike": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "strangerKnown": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "dislikeLike": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "traitCondition": {
      "Item1": "TraitConditionType",
      "Item2": false,
      "Item3": ""
    },
    "traits": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    }
  },
  "DDSMessageSave": {
    "blocks": {
      "Item1": "DDSBlockCondition",
      "Item2": true,
      "Item3": ""
    }
  },
  "DDSBlockCondition": {
    "blockID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "instanceID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "alwaysDisplay": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "group": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "traitConditions": {
      "Item1": "TraitConditionType",
      "Item2": false,
      "Item3": ""
    },
    "traits": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    }
  },
  "TreeType": {},
  "DDSTreeSave": {
    "participantA": {
      "Item1": "DDSParticipant",
      "Item2": false,
      "Item3": ""
    },
    "participantB": {
      "Item1": "DDSParticipant",
      "Item2": false,
      "Item3": ""
    },
    "participantC": {
      "Item1": "DDSParticipant",
      "Item2": false,
      "Item3": ""
    },
    "participantD": {
      "Item1": "DDSParticipant",
      "Item2": false,
      "Item3": ""
    },
    "repeat": {
      "Item1": "RepeatSetting",
      "Item2": false,
      "Item3": ""
    },
    "triggerPoint": {
      "Item1": "TriggerPoint",
      "Item2": false,
      "Item3": ""
    },
    "messages": {
      "Item1": "DDSMessageSettings",
      "Item2": true,
      "Item3": ""
    },
    "stopMovement": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ignoreGlobalRepeat": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "treeType": {
      "Item1": "TreeType",
      "Item2": false,
      "Item3": ""
    },
    "document": {
      "Item1": "DDSDocument",
      "Item2": false,
      "Item3": ""
    },
    "startingMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "treeChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "priority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "newspaperCategory": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "newspaperContext": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "messageRef": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    }
  },
  "DDSDocument": {
    "background": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "fill": {
      "Item1": "Type",
      "Item2": false,
      "Item3": ""
    },
    "size": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "colour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    }
  },
  "ElementType": {},
  "DDSMessageSettings": {
    "msgID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "elementName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "instanceID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "saidBy": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "saidTo": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "pos": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "size": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "rot": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "font": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "col": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "fontSize": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "charSpace": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wordSpace": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "lineSpace": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "paraSpace": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "alignH": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "alignV": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fontStyle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "order": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "usePages": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isHandwriting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "links": {
      "Item1": "DDSMessageLink",
      "Item2": true,
      "Item3": ""
    }
  },
  "DDSMessageLink": {
    "from": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "to": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "delayInterval": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "useWeights": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "choiceWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useKnowLike": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "know": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "like": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "traits": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "traitConditions": {
      "Item1": "TraitConditionType",
      "Item2": false,
      "Item3": ""
    }
  },
  "DDSParticipant": {
    "required": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "connection": {
      "Item1": "ConnectionType",
      "Item2": false,
      "Item3": ""
    },
    "useJobs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disableInbox": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "jobs": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "useTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "traits": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "traitConditions": {
      "Item1": "TraitConditionType",
      "Item2": false,
      "Item3": ""
    },
    "triggers": {
      "Item1": "TreeTriggers",
      "Item2": true,
      "Item3": ""
    }
  },
  "CullDebugType": {},
  "DebugLocationLink": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "access": {
      "Item1": "NodeAccess",
      "Item2": false,
      "Item3": ""
    }
  },
  "DebugFurnitureAnglePlacement": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "angle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isValid": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "coversNodes": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "log": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "pathingLog": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    }
  },
  "TileSetup": {
    "offset": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "trans": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    }
  },
  "EditorDisplayMode": {},
  "EditorSelectionMode": {},
  "FloorEditTool": {},
  "FloorSaveData": {
    "floorName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "size": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "defaultFloorHeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "defaultCeilingHeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "a_d": {
      "Item1": "AddressSaveData",
      "Item2": true,
      "Item3": ""
    },
    "t_d": {
      "Item1": "TileSaveData",
      "Item2": true,
      "Item3": ""
    }
  },
  "AddressSaveData": {
    "p_n": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "e_c": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "vs": {
      "Item1": "AddressLayoutVariation",
      "Item2": true,
      "Item3": ""
    }
  },
  "AddressLayoutVariation": {
    "r_d": {
      "Item1": "RoomSaveData",
      "Item2": true,
      "Item3": ""
    }
  },
  "RoomSaveData": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "n_d": {
      "Item1": "NodeSaveData",
      "Item2": true,
      "Item3": ""
    },
    "l": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "TileSaveData": {
    "f_c": {
      "Item1": "Vector2Int",
      "Item2": false,
      "Item3": ""
    },
    "i_e": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "m_e": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "s_t": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "s_r": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "e_l": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "e_r": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "NodeSaveData": {
    "f_c": {
      "Item1": "Vector2Int",
      "Item2": false,
      "Item3": ""
    },
    "f_h": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "f_t": {
      "Item1": "FloorTileType",
      "Item2": false,
      "Item3": ""
    },
    "f_r": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "w_d": {
      "Item1": "WallSaveData",
      "Item2": true,
      "Item3": ""
    }
  },
  "WallSaveData": {
    "w_o": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "p_n": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "SpecialCase": {},
  "AnimationReference": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "isArms": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "idle": {
      "Item1": "IdleAnimationState",
      "Item2": false,
      "Item3": ""
    },
    "arms": {
      "Item1": "ArmsBoolSate",
      "Item2": false,
      "Item3": ""
    },
    "anim": {
      "Item1": "AnimationAnchorRef",
      "Item2": true,
      "Item3": ""
    }
  },
  "AnimationAnchorRef": {
    "anchor": {
      "Item1": "CharacterAnchor",
      "Item2": false,
      "Item3": ""
    },
    "localPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "localRot": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    }
  },
  "AmbientZoneInstance": {
    "preset": {
      "Item1": "AmbientZone",
      "Item2": false,
      "Item3": ""
    },
    "playerDistance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "penetrationCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "audibleRoom": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "isActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "desiredVolume": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "actualVolume": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "desiredWalla": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "actualWalla": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "eventData": {
      "Item1": "LoopingSoundInfo",
      "Item2": false,
      "Item3": ""
    },
    "rooms": {
      "Item1": "NewRoom",
      "Item2": true,
      "Item3": ""
    }
  },
  "LoopingSoundInfo": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "init": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "audioEvent": {
      "Item1": "EventInstance",
      "Item2": false,
      "Item3": ""
    },
    "isValid": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "description": {
      "Item1": "EventDescription",
      "Item2": false,
      "Item3": ""
    },
    "volumeOverride": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "eventPreset": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "sourceLocation": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "who": {
      "Item1": "Actor",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "forceSuspicious": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "parameters": {
      "Item1": "FMODParam",
      "Item2": true,
      "Item3": ""
    },
    "lastUpdated": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "currentOcclusion": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "pauseWhenGamePaused": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "worldPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "state": {
      "Item1": "PLAYBACK_STATE",
      "Item2": false,
      "Item3": ""
    },
    "paused": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "audibleRooms": {
      "Item1": "NewRoom",
      "Item2": true,
      "Item3": ""
    },
    "isBroadcast": {
      "Item1": "TelevisionChannel",
      "Item2": false,
      "Item3": ""
    },
    "occlusionVolume": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fadeToVolume": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "vol": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "debugStoppedReason": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "interactableLoopInfo": {
      "Item1": "IfSwitchStateSFX",
      "Item2": false,
      "Item3": ""
    },
    "clipIsValid": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "clipPaused": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "clipState": {
      "Item1": "PLAYBACK_STATE",
      "Item2": false,
      "Item3": ""
    },
    "clipAudioEvent": {
      "Item1": "EventInstance",
      "Item2": false,
      "Item3": ""
    }
  },
  "DelayedSoundInfo": {
    "delay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "eventPreset": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "who": {
      "Item1": "Actor",
      "Item2": false,
      "Item3": ""
    },
    "location": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "worldPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "parameters": {
      "Item1": "FMODParam",
      "Item2": true,
      "Item3": ""
    },
    "volumeOverride": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "additionalSources": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "forceIgnoreOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "is2D": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "SoundMaterialOverride": {
    "concrete": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wood": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "carpet": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "tile": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "plaster": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fabric": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "metal": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "glass": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "CitizenReaction": {},
  "SurfaceType": {},
  "StopType": {},
  "Case": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignCaseID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "caseType": {
      "Item1": "CaseType",
      "Item2": false,
      "Item3": ""
    },
    "caseStatus": {
      "Item1": "CaseStatus",
      "Item2": false,
      "Item3": ""
    },
    "jobReference": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "mainStoryChapter": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "caseElements": {
      "Item1": "CaseElement",
      "Item2": true,
      "Item3": ""
    },
    "stringColours": {
      "Item1": "StringColours",
      "Item2": true,
      "Item3": ""
    },
    "hiddenConnections": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "isActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "handInValid": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isSolved": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "questionsRank": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "victimsRank": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "rank": {
      "Item1": "CaseRank",
      "Item2": false,
      "Item3": ""
    },
    "currentActiveObjectives": {
      "Item1": "Objective",
      "Item2": true,
      "Item3": ""
    },
    "inactiveCurrentObjectives": {
      "Item1": "Objective",
      "Item2": true,
      "Item3": ""
    },
    "endedObjectives": {
      "Item1": "Objective",
      "Item2": true,
      "Item3": ""
    },
    "resolveQuestions": {
      "Item1": "ResolveQuestion",
      "Item2": true,
      "Item3": ""
    },
    "suspectsDetained": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "handIn": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "waitForObjectives": {
      "Item1": "Objective",
      "Item2": true,
      "Item3": ""
    },
    "job": {
      "Item1": "SideJob",
      "Item2": false,
      "Item3": ""
    }
  },
  "CaseStatus": {},
  "CaseType": {},
  "CaseRank": {},
  "CaseElement": {
    "caseID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "n": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "dk": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "v": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "sdk": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "ap": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "w": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "resPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "resPiv": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "co": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "m": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "color": {
      "Item1": "EvidenceColours",
      "Item2": false,
      "Item3": ""
    },
    "pinnedController": {
      "Item1": "PinnedItemController",
      "Item2": false,
      "Item3": ""
    }
  },
  "StringColours": {
    "fromEv": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "toEv": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "fromDK": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "toDK": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "colIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ResolveQuestion": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "displayObjective": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "displayOnlyAtPhase": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "displayAtPhase": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "objectiveDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "onlyCompatibleWithIntros": {
      "Item1": "SideMissionIntroPreset",
      "Item2": true,
      "Item3": ""
    },
    "onlyCompatibleWithHandIns": {
      "Item1": "SideMissionHandInPreset",
      "Item2": true,
      "Item3": ""
    },
    "inputType": {
      "Item1": "InputType",
      "Item2": false,
      "Item3": ""
    },
    "automaticAnswers": {
      "Item1": "AutoCorrectAnswer",
      "Item2": true,
      "Item3": "A list of automatically set answers"
    },
    "tag": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": ""
    },
    "icon": {
      "Item1": "Icon",
      "Item2": false,
      "Item3": ""
    },
    "rewardRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "penaltyRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "isOptional": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useAlternateName": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useName": {
      "Item1": "RevengeObjectiveName",
      "Item2": false,
      "Item3": ""
    },
    "target": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "location": {
      "Item1": "JobSpawnWhere",
      "Item2": false,
      "Item3": ""
    },
    "revengeObjective": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "revengeObjTarget": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "revengeObjLoc": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "revengeObjPassed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "completedRevenge": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "input": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "inputtedEvidence": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "correctAnswers": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "progress": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "reward": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "penalty": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isValid": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isCorrect": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "inputField": {
      "Item1": "InputFieldController",
      "Item2": false,
      "Item3": ""
    },
    "OnProgressChange": {
      "Item1": "ProgressChange",
      "Item2": false,
      "Item3": ""
    }
  },
  "RevengeObjectiveName": {},
  "AutoCorrectAnswer": {},
  "InputType": {},
  "Objective": {
    "queueElement": {
      "Item1": "QueueElement",
      "Item2": false,
      "Item3": ""
    },
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "progress": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isComplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isCancelled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dispPhase": {
      "Item1": "DisplayPhase",
      "Item2": false,
      "Item3": ""
    },
    "fadeInProgress": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "displayProgress": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "displayTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "crouchPromtTimer": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "thisCase": {
      "Item1": "Case",
      "Item2": false,
      "Item3": ""
    },
    "objectiveListItem": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "objectiveListRect": {
      "Item1": "RectTransform",
      "Item2": false,
      "Item3": ""
    },
    "objectiveList": {
      "Item1": "ChecklistButtonController",
      "Item2": false,
      "Item3": ""
    },
    "displayPointer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pointerUIObject": {
      "Item1": "RectTransform",
      "Item2": false,
      "Item3": ""
    },
    "awarenessIcon": {
      "Item1": "AwarenessIcon",
      "Item2": false,
      "Item3": ""
    },
    "pointer": {
      "Item1": "UIPointerController",
      "Item2": false,
      "Item3": ""
    },
    "sprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "isSetup": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "appliedProgress": {
      "Item1": "ObjectiveTrigger",
      "Item2": true,
      "Item3": ""
    },
    "clearedForAnimation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "objectiveAddOn": {
      "Item1": "ObjectiveTrigger",
      "Item2": false,
      "Item3": ""
    },
    "progressAdd": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "OnProgressChange": {
      "Item1": "ProgressChange",
      "Item2": false,
      "Item3": ""
    },
    "OnComplete": {
      "Item1": "Completed",
      "Item2": false,
      "Item3": ""
    }
  },
  "DisplayPhase": {},
  "OnCompleteAction": {},
  "ObjectiveTrigger": {
    "triggerType": {
      "Item1": "ObjectiveTriggerType",
      "Item2": false,
      "Item3": ""
    },
    "forceProgressAmount": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "progressAdd": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "triggered": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "hightlightAction": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "orTrigger": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "roomID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "interactableID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "evidenceID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "nodeCoord": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "doorID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "addressID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "streetID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "jobID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "position": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "room": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "evidence": {
      "Item1": "Evidence",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "door": {
      "Item1": "NewDoor",
      "Item2": false,
      "Item3": ""
    },
    "gameLocation": {
      "Item1": "NewGameLocation",
      "Item2": false,
      "Item3": ""
    },
    "job": {
      "Item1": "SideJob",
      "Item2": false,
      "Item3": ""
    },
    "addedToObjectives": {
      "Item1": "Objective",
      "Item2": true,
      "Item3": ""
    }
  },
  "ObjectiveTriggerType": {},
  "CharacterAnchor": {},
  "AnchorConfig": {
    "anchor": {
      "Item1": "CharacterAnchor",
      "Item2": false,
      "Item3": ""
    },
    "trans": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "outline": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "captureInSurveillance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "weight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "Outfit": {
    "category": {
      "Item1": "OutfitCategory",
      "Item2": false,
      "Item3": ""
    },
    "clothes": {
      "Item1": "OutfitClothes",
      "Item2": true,
      "Item3": ""
    }
  },
  "OutfitClothes": {
    "clothes": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "tags": {
      "Item1": "ClothesTags",
      "Item2": true,
      "Item3": ""
    },
    "baseColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "color1": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "color2": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "color3": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "borrowed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "spawned": {
      "Item1": "CharacterAnchor",
      "Item2": true,
      "Item3": ""
    },
    "rank": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "incomplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "loadedThisCycle": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ClothingCreatorDirectory": {},
  "Expression": {},
  "ExpressionSetup": {
    "expression": {
      "Item1": "Expression",
      "Item2": false,
      "Item3": ""
    },
    "eyebrowsEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "eyebrowsRaise": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "eyeHeightMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "allowBlinking": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "DebugInteractable": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "count": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "savablePercent": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "trashPercent": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "savableDetails": {
      "Item1": "SaveableBecause",
      "Item2": true,
      "Item3": ""
    },
    "contents": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    }
  },
  "SaveableBecause": {
    "reason": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "count": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "OSMultiOption": {
    "text": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "human": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "msgThread": {
      "Item1": "MessageThreadSave",
      "Item2": false,
      "Item3": ""
    },
    "msgIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "salesRecord": {
      "Item1": "SalesRecord",
      "Item2": false,
      "Item3": ""
    },
    "iconSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    }
  },
  "CitizenPool": {},
  "DLSSQuality": {},
  "StackType": {},
  "InventorySlot": {
    "index": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "interactableID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "debugName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "hotkey": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "isStatic": {
      "Item1": "StaticSlot",
      "Item2": false,
      "Item3": ""
    },
    "spawnedSegment": {
      "Item1": "InventorySquareController",
      "Item2": false,
      "Item3": ""
    }
  },
  "StaticSlot": {},
  "BuildConfig": {},
  "DebugCitizenWeapons": {
    "weapon": {
      "Item1": "MurderWeaponPreset",
      "Item2": false,
      "Item3": ""
    },
    "count": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "percentage": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "SocialGroup": {
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "decimalStartTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "weekDays": {
      "Item1": "WeekDay",
      "Item2": true,
      "Item3": ""
    },
    "members": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "meetingPlace": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "reserved": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    }
  },
  "ControlPositioning": {},
  "HEXACO": {
    "outputMin": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "outputMax": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "enableFeminineMasculine": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "feminineMasculine": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "enableHumility": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "humility": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "enableEmotionality": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "emotionality": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "enableExtraversion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "extraversion": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "enableAgreeableness": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "agreeableness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "enableConscientiousness": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "conscientiousness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "enableCreativity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "creativity": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ControllerVibration": {
    "motorIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fullMotorSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "matchSoundDuration": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "duration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "ConversationType": {},
  "SideJob": {
    "presetStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "motiveStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "jobID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignJobID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "state": {
      "Item1": "JobState",
      "Item2": false,
      "Item3": ""
    },
    "postImmediately": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "startingScenario": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "intro": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "handIn": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "accepted": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "caseID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "phase": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "postID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "gooseChasePhone": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "gooseChaseFromPhone": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "knowHandInLocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "gooseChaseCallTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "gooseChaseCallTriggered": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "meetingPoint": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "meetingConsumableIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "secretLocationFurniture": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "secretLocationNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "failed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "resolveQuestions": {
      "Item1": "ResolveQuestion",
      "Item2": true,
      "Item3": ""
    },
    "posterID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "purpID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "reward": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "rewardSyncDisk": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "fakeNumber": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fakeNumberStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "jobInfoDialogMsg": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "appliedBasicLeads": {
      "Item1": "BasicLeadPool",
      "Item2": true,
      "Item3": ""
    },
    "leadKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "confine": {
      "Item1": "ConfineLocation",
      "Item2": true,
      "Item3": ""
    },
    "dialog": {
      "Item1": "AddedDialog",
      "Item2": true,
      "Item3": ""
    },
    "phaseChange": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "JobPreset",
      "Item2": false,
      "Item3": ""
    },
    "motive": {
      "Item1": "MotivePreset",
      "Item2": false,
      "Item3": ""
    },
    "chosenIntro": {
      "Item1": "IntroConfig",
      "Item2": false,
      "Item3": ""
    },
    "chosenHandIn": {
      "Item1": "HandInConfig",
      "Item2": false,
      "Item3": ""
    },
    "poster": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "purp": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "post": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "activeJobItems": {
      "Item1": "JobTag",
      "Item2": true,
      "Item3": ""
    },
    "thisCase": {
      "Item1": "Case",
      "Item2": false,
      "Item3": ""
    },
    "objectiveReference": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "hiddenItemPhoto": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "chosenGooseChasePhone": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "chosenMeetingPoint": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "gooseChaseCall": {
      "Item1": "PhoneCall",
      "Item2": false,
      "Item3": ""
    },
    "currentBlock": {
      "Item1": "SideMissionObjectiveBlock",
      "Item2": false,
      "Item3": ""
    },
    "triggerHandIn": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "OnObjectivesChanged": {
      "Item1": "ObjectivesChange",
      "Item2": false,
      "Item3": ""
    },
    "AcquireInfo": {
      "Item1": "AcquireJobInfo",
      "Item2": false,
      "Item3": ""
    }
  },
  "JobState": {},
  "AddedDialog": {
    "humanID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "dialogRef": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "roomID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "key": {
      "Item1": "DataKey",
      "Item2": false,
      "Item3": ""
    },
    "option": {
      "Item1": "DialogOption",
      "Item2": false,
      "Item3": ""
    }
  },
  "ConfineLocation": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "address": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "SideJobAffair": {},
  "JobTracking": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "JobPreset",
      "Item2": false,
      "Item3": ""
    },
    "activeJobs": {
      "Item1": "SideJob",
      "Item2": true,
      "Item3": ""
    },
    "endedJobs": {
      "Item1": "SideJob",
      "Item2": true,
      "Item3": ""
    },
    "desiredActiveInstances": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "JobPickData": {
    "motive": {
      "Item1": "MotivePreset",
      "Item2": false,
      "Item3": ""
    },
    "poster": {
      "Item1": "Citizen",
      "Item2": false,
      "Item3": ""
    },
    "purp": {
      "Item1": "Citizen",
      "Item2": false,
      "Item3": ""
    },
    "score": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "SideJobMissingPerson": {
    "readyToPost": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "exitBuilding": {
      "Item1": "NewAIGoal",
      "Item2": false,
      "Item3": ""
    }
  },
  "SideJobRevenge": {},
  "SideJobSabotage": {
    "chosenAddress": {
      "Item1": "NewAddress",
      "Item2": false,
      "Item3": ""
    },
    "callTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "callTriggered": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "call": {
      "Item1": "PhoneCall",
      "Item2": false,
      "Item3": ""
    },
    "getToPhone": {
      "Item1": "ObjectiveTrigger",
      "Item2": false,
      "Item3": ""
    }
  },
  "SideJobStealBriefcase": {
    "carrier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "meetNodeLocation": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "triggeredSwitch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "triggeredMeet": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "meetTimer": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "caseCarrier": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "destination": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "gwTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "waitObjective": {
      "Item1": "Objective",
      "Item2": false,
      "Item3": ""
    }
  },
  "SideJobStolenItem": {
    "theftTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "theftTimeFrom": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "theftTimeTo": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "stolenItemRoom": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "LocInput": {
    "languageCode": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "displayName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "documentColumn": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "systemLanguage": {
      "Item1": "SystemLanguage",
      "Item2": false,
      "Item3": ""
    },
    "swapCitizenTitleOrder": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Display 'Mr' etc after the name"
    },
    "staticKillerMoniker": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "startText": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "path": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "modOverrideFiles": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "debugOverrideFiles": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    }
  },
  "RayType": {},
  "MaterialDebug": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "key": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "mat": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    }
  },
  "FootprintMaterialKey": {},
  "ModIconSetup": {
    "state": {
      "Item1": "SubscribedModStatus",
      "Item2": false,
      "Item3": ""
    },
    "spriteEnabled": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "spriteDisabled": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    }
  },
  "ModSettingsData": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "loadOrderValue": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "modData": {
      "Item1": "UserInstalledMod",
      "Item2": false,
      "Item3": ""
    }
  },
  "Vandalism": {
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fine": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "obj": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "win": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    }
  },
  "AlarmTargetMode": {},
  "SideSign": {
    "anchorPointIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "signPrefabIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "Direction": {},
  "DoorSetting": {},
  "LockSetting": {},
  "CitizenPassResult": {},
  "FloorTileType": {},
  "NodeSpaceOccupancy": {},
  "NodeAccess": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignId": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "weight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "door": {
      "Item1": "NewDoor",
      "Item2": false,
      "Item3": ""
    },
    "wall": {
      "Item1": "NewWall",
      "Item2": false,
      "Item3": ""
    },
    "accessType": {
      "Item1": "AccessType",
      "Item2": false,
      "Item3": ""
    },
    "fromNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "toNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "walkingAccess": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "employeeDoor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "worldAccessPoint": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "oppositeAccess": {
      "Item1": "NodeAccess",
      "Item2": false,
      "Item3": ""
    },
    "entranceWeights": {
      "Item1": "NodeAccess",
      "Item2": true,
      "Item3": ""
    },
    "hasHash": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "hash": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "AccessType": {},
  "RoomDivider": {
    "fromRoom": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "toRoom": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "dividerWalls": {
      "Item1": "NewWall",
      "Item2": true,
      "Item3": ""
    }
  },
  "LightZoneData": {
    "room": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "nodeList": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "centreWorldPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "lightSpawnPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "worldSize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "centreNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "spawnedAreaLight": {
      "Item1": "Light",
      "Item2": false,
      "Item3": ""
    },
    "aAdditional": {
      "Item1": "HDAdditionalLightData",
      "Item2": false,
      "Item3": ""
    },
    "allowLight": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "bestPosFound": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "debug": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "areaLightColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "areaLightBrightness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "CullTreeEntry": {
    "requiredOpenDoors": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "NewTile": {
    "tileID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "position": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "parent": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "building": {
      "Item1": "NewBuilding",
      "Item2": false,
      "Item3": ""
    },
    "floor": {
      "Item1": "NewFloor",
      "Item2": false,
      "Item3": ""
    },
    "cityTile": {
      "Item1": "CityTile",
      "Item2": false,
      "Item3": ""
    },
    "floorCoord": {
      "Item1": "Vector2Int",
      "Item2": false,
      "Item3": ""
    },
    "globalTileCoord": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "streetChunk": {
      "Item1": "StreetChunk",
      "Item2": false,
      "Item3": ""
    },
    "nodes": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "anchorNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "isSetup": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isLoaded": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isOutside": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isObstacle": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isMapCorner": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isEdge": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "rotation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isMainEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "entrancePair": {
      "Item1": "NewTile",
      "Item2": false,
      "Item3": ""
    },
    "isStairwell": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "stairwellRotation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isInvertedStairwell": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "elevatorRotation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isTop": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isBottom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "streetController": {
      "Item1": "StreetController",
      "Item2": false,
      "Item3": ""
    },
    "useOptimizedFloor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useOptimizedCeiling": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "entranceArrow": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "stairwell": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "elevator": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "stairwellAssign": {
      "Item1": "Elevator",
      "Item2": false,
      "Item3": ""
    }
  },
  "FrontageSetting": {
    "preset": {
      "Item1": "WallFrontagePreset",
      "Item2": false,
      "Item3": ""
    },
    "matKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "colors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "offset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "createdInteractables": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    },
    "mainTransform": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    }
  },
  "Telephone": {
    "number": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "numberString": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "activeCall": {
      "Item1": "PhoneCall",
      "Item2": true,
      "Item3": ""
    },
    "setup": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "location": {
      "Item1": "NewGameLocation",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "speechController": {
      "Item1": "SpeechController",
      "Item2": false,
      "Item3": ""
    },
    "activeReceiver": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "dialTone": {
      "Item1": "LoopingSoundInfo",
      "Item2": false,
      "Item3": ""
    },
    "engaged": {
      "Item1": "EventInstance",
      "Item2": false,
      "Item3": ""
    },
    "locationEntry": {
      "Item1": "EvidenceLocation",
      "Item2": false,
      "Item3": ""
    },
    "telephoneEntry": {
      "Item1": "EvidenceTelephone",
      "Item2": false,
      "Item3": ""
    }
  },
  "NewspaperState": {
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "seed": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "murderID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "mainArticle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mainContext": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "article2": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "art2Context": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "article3": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "art3Context": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ad1": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ad1Context": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ad2": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ad2Context": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ad3": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ad3Context": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ad4": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ad4Context": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ElevatorFloor": {
    "floor": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "elevatorTile": {
      "Item1": "NewTile",
      "Item2": false,
      "Item3": ""
    },
    "elevatorRoom": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "spawned": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "upButton": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "downButton": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "door": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    }
  },
  "ElevatorCall": {
    "floor": {
      "Item1": "ElevatorFloor",
      "Item2": false,
      "Item3": ""
    },
    "callUp": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "registered": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "CrushType": {},
  "Print": {
    "worldPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "normal": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "type": {
      "Item1": "PrintType",
      "Item2": false,
      "Item3": ""
    },
    "source": {
      "Item1": "PrintsSource",
      "Item2": false,
      "Item3": ""
    },
    "parentTranform": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "room": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "furniture": {
      "Item1": "FurnitureLocation",
      "Item2": false,
      "Item3": ""
    },
    "dynamicOwner": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    }
  },
  "PrintType": {},
  "FurnitureClusterLocation": {
    "clusterObjectMap": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "clusterList": {
      "Item1": "FurnitureLocation",
      "Item2": true,
      "Item3": ""
    },
    "cluster": {
      "Item1": "FurnitureCluster",
      "Item2": false,
      "Item3": ""
    },
    "anchorNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "angle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ranking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "loadedGeometry": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "RemoveInteractablesOption": {},
  "FurnitureLocation": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "furnitureClasses": {
      "Item1": "FurnitureClass",
      "Item2": true,
      "Item3": ""
    },
    "angle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "offset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "anchorNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "coversNodes": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "cluster": {
      "Item1": "FurnitureClusterLocation",
      "Item2": false,
      "Item3": ""
    },
    "useFOVBLock": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fovDirection": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "fovMaxDistance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "scaleMultiplier": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "usage": {
      "Item1": "UsagePoint",
      "Item2": true,
      "Item3": ""
    },
    "sublocations": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "furniture": {
      "Item1": "FurniturePreset",
      "Item2": false,
      "Item3": ""
    },
    "spawnedObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "meshes": {
      "Item1": "MeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "pickedMaterials": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "createdInteractables": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pickedOwners": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pickedArt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "userPlaced": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "diagonalAngle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "matKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "integratedInteractables": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    },
    "integratedIDAssign": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "spawnedInteractables": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    },
    "art": {
      "Item1": "ArtPreset",
      "Item2": false,
      "Item3": ""
    },
    "artMatKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "loadOwners": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "ownerMap": {
      "Item1": "OwnerKey",
      "Item2": true,
      "Item3": ""
    },
    "debugOwners": {
      "Item1": "MonoBehaviour",
      "Item2": true,
      "Item3": ""
    }
  },
  "PossibleRoomLocation": {
    "nodes": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "randomRanking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "exteriorWindowRanking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "exteriorWallsRanking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "floorSpaceRanking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "entrancesRanking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "overrideRankingData": {
      "Item1": "OverrideData",
      "Item2": true,
      "Item3": ""
    },
    "ranking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "requiredAdjoiningOptions": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "requiredHallway": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "debugScript": {
      "Item1": "GenerationDebugController",
      "Item2": false,
      "Item3": ""
    }
  },
  "OverrideData": {
    "room": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "floorSpacePenalty": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "exteriorWindowPenalty": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "exteriorWallPenalty": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "overridingPenalty": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "PossibleDoorwayLocation": {
    "wall": {
      "Item1": "NewWall",
      "Item2": false,
      "Item3": ""
    },
    "ranking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "requireFlatDoorway": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "roomDivider": {
      "Item1": "NewWall",
      "Item2": true,
      "Item3": ""
    }
  },
  "PossibleNullExpansion": {
    "nodesToExpand": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "addToRoom": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "ranking": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "Interactable": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "worldAssignID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "wPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "wEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "lPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "lEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "spWPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "spWEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "p": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "pv": {
      "Item1": "Passed",
      "Item2": true,
      "Item3": ""
    },
    "fp": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fsoi": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "dp": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "mk": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "lcd": {
      "Item1": "LightConfiguration",
      "Item2": false,
      "Item3": ""
    },
    "lp": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "dds": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "w": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "r": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "b": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "inv": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "val": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "cs": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wo": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "bo": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "sd": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "sw0": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sw1": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sw2": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sw3": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "locked": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "lzs": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ml": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ssp": {
      "Item1": "SubSpawnSlot",
      "Item2": true,
      "Item3": ""
    },
    "mtr": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "cr": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "rem": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "rPl": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "spCh": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "force": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "df": {
      "Item1": "DynamicFingerprint",
      "Item2": true,
      "Item3": ""
    },
    "print": {
      "Item1": "SavedPrint",
      "Item2": true,
      "Item3": ""
    },
    "cap": {
      "Item1": "SceneCapture",
      "Item2": true,
      "Item3": ""
    },
    "sCap": {
      "Item1": "SceneCapture",
      "Item2": true,
      "Item3": ""
    },
    "nEvKey": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ft": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "passcode": {
      "Item1": "Passcode",
      "Item2": false,
      "Item3": ""
    },
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "spNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "pt": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "mov": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "phy": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "audioLoopStarted": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "t": {
      "Item1": "Telephone",
      "Item2": false,
      "Item3": ""
    },
    "seed": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "save": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isTampered": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "distanceFromSpawn": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "originalPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "cvp": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "cve": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "evidence": {
      "Item1": "Evidence",
      "Item2": false,
      "Item3": ""
    },
    "sceneRecorder": {
      "Item1": "SceneRecorder",
      "Item2": false,
      "Item3": ""
    },
    "spawnParent": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "parentTransform": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inInventory": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "furnitureParent": {
      "Item1": "FurnitureLocation",
      "Item2": false,
      "Item3": ""
    },
    "subObject": {
      "Item1": "SubObject",
      "Item2": false,
      "Item3": ""
    },
    "jobParent": {
      "Item1": "SideJob",
      "Item2": false,
      "Item3": ""
    },
    "murderParent": {
      "Item1": "Murder",
      "Item2": false,
      "Item3": ""
    },
    "speechController": {
      "Item1": "SpeechController",
      "Item2": false,
      "Item3": ""
    },
    "controller": {
      "Item1": "InteractableController",
      "Item2": false,
      "Item3": ""
    },
    "lightController": {
      "Item1": "LightController",
      "Item2": false,
      "Item3": ""
    },
    "lockInteractable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "thisDoor": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "passwordSource": {
      "Item1": "Object",
      "Item2": false,
      "Item3": ""
    },
    "spawnedObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "spawnNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "worldObjectRoomParent": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "usagePoint": {
      "Item1": "UsagePoint",
      "Item2": false,
      "Item3": ""
    },
    "nextAIInteraction": {
      "Item1": "NewAIAction",
      "Item2": false,
      "Item3": ""
    },
    "isLight": {
      "Item1": "LightingPreset",
      "Item2": false,
      "Item3": ""
    },
    "objectRef": {
      "Item1": "Object",
      "Item2": false,
      "Item3": ""
    },
    "writer": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "reciever": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "belongsTo": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "isActor": {
      "Item1": "Actor",
      "Item2": false,
      "Item3": ""
    },
    "book": {
      "Item1": "BookPreset",
      "Item2": false,
      "Item3": ""
    },
    "syncDisk": {
      "Item1": "SyncDiskPreset",
      "Item2": false,
      "Item3": ""
    },
    "group": {
      "Item1": "SocialGroup",
      "Item2": false,
      "Item3": ""
    },
    "recentCallCheck": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "ceilingFan": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "forSale": {
      "Item1": "NewAddress",
      "Item2": false,
      "Item3": ""
    },
    "proxy": {
      "Item1": "Human",
      "Item2": true,
      "Item3": ""
    },
    "spawnedDecals": {
      "Item1": "DecalSpawnData",
      "Item2": true,
      "Item3": ""
    },
    "actionLoop": {
      "Item1": "LoopingSoundInfo",
      "Item2": false,
      "Item3": ""
    },
    "loadedGeometry": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "currentActions": {
      "Item1": "InteractionKey",
      "Item2": true,
      "Item3": ""
    },
    "highlightActions": {
      "Item1": "InteractionAction",
      "Item2": true,
      "Item3": ""
    },
    "disabledActions": {
      "Item1": "InteractionAction",
      "Item2": true,
      "Item3": ""
    },
    "aiActionReference": {
      "Item1": "AIActionPreset",
      "Item2": true,
      "Item3": ""
    },
    "readingDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "actionAudioEventOverrides": {
      "Item1": "AIActionPreset",
      "Item2": true,
      "Item3": ""
    },
    "loopingAudio": {
      "Item1": "LoopingSoundInfo",
      "Item2": true,
      "Item3": ""
    },
    "isSetup": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "wasLoadedFromSave": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "mainSetupRun": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "printDebug": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "OnSwitchChange": {
      "Item1": "SwitchChange",
      "Item2": false,
      "Item3": ""
    },
    "OnState1Change": {
      "Item1": "State1Change",
      "Item2": false,
      "Item3": ""
    },
    "OnDelete": {
      "Item1": "Deleted",
      "Item2": false,
      "Item3": ""
    },
    "OnRemovedFromWorld": {
      "Item1": "RemovedFromWorld",
      "Item2": false,
      "Item3": ""
    }
  },
  "LightConfiguration": {
    "colour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "intensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "flickerColourMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "pulseSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "intervalTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "flicker": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "range": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "SavedPrint": {
    "worldPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "interactableID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "DynamicFingerprint": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "created": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "seed": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "life": {
      "Item1": "PrintLife",
      "Item2": false,
      "Item3": ""
    }
  },
  "PrintLife": {},
  "UsagePoint": {
    "useSetting": {
      "Item1": "AIUseSetting",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "users": {
      "Item1": "UsePointSlot",
      "Item2": true,
      "Item3": ""
    },
    "reserved": {
      "Item1": "SocialGroup",
      "Item2": false,
      "Item3": ""
    },
    "useageWorldPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "worldLookAtPoint": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "debugDefaultSlot": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "debugSlot1": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "debugSlot2": {
      "Item1": "Human",
      "Item2": false,
      "Item3": ""
    },
    "slotLog": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    }
  },
  "UsePointSlot": {},
  "PassedVarType": {},
  "Passed": {
    "varType": {
      "Item1": "PassedVarType",
      "Item2": false,
      "Item3": ""
    },
    "value": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "str": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "InteractableID": {},
  "RoomMeshCache": {
    "floorMesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": ""
    },
    "wallMesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": ""
    },
    "additionalWallMesh": {
      "Item1": "NewBuilding",
      "Item2": true,
      "Item3": ""
    },
    "ceilingMesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": ""
    },
    "lastAccessed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "MetaObject": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "owner": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "writer": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "reciever": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "dds": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "passed": {
      "Item1": "Passed",
      "Item2": true,
      "Item3": ""
    },
    "n": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "cd": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ObjectLoadRange": {},
  "ObjectLoadRangeConfig": {
    "range": {
      "Item1": "ObjectLoadRange",
      "Item2": false,
      "Item3": ""
    },
    "loadDistance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "SceneCapture": {
    "recorder": {
      "Item1": "SceneRecorder",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "drp": {
      "Item1": "DynamicRecordPosition",
      "Item2": true,
      "Item3": ""
    },
    "t": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "k": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "l": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "a": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "rCap": {
      "Item1": "RoomCapture",
      "Item2": true,
      "Item3": ""
    },
    "dCap": {
      "Item1": "DoorCapture",
      "Item2": true,
      "Item3": ""
    },
    "aCap": {
      "Item1": "ActorCapture",
      "Item2": true,
      "Item3": ""
    },
    "oCap": {
      "Item1": "InteractableCapture",
      "Item2": true,
      "Item3": ""
    },
    "oSCap": {
      "Item1": "InteractableStateCapture",
      "Item2": true,
      "Item3": ""
    }
  },
  "DynamicRecordPosition": {
    "pos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "rot": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    }
  },
  "RoomCapture": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "light": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "TransformCapture": {
    "wP": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "wR": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    }
  },
  "DoorCapture": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "a": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "InteractableCapture": {
    "p": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "d": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "poser": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    }
  },
  "InteractableStateCapture": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "sw": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ActorCapture": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "o": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "pos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "rot": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "main": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "arms": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "sp": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "limb": {
      "Item1": "LimbCapture",
      "Item2": true,
      "Item3": ""
    },
    "lH": {
      "Item1": "HandItemCapture",
      "Item2": false,
      "Item3": ""
    },
    "rH": {
      "Item1": "HandItemCapture",
      "Item2": false,
      "Item3": ""
    },
    "poser": {
      "Item1": "ScenePoserController",
      "Item2": false,
      "Item3": ""
    }
  },
  "LimbCapture": {
    "a": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "HandItemCapture": {
    "i": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "SecuritySystemType": {},
  "QueueElement": {
    "dictRef": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "entryRef": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "useParsing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "delay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "delayActivated": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shouting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "interupt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "forceColour": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "speakingAbout": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "jobRef": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "endsDialog": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "jobHandIn": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "speakingToRef": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "dialog": {
      "Item1": "AISpeechPreset",
      "Item2": false,
      "Item3": ""
    },
    "dialogPreset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "isObjective": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "usePointer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pointerPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "triggers": {
      "Item1": "ObjectiveTrigger",
      "Item2": true,
      "Item3": ""
    },
    "onComplete": {
      "Item1": "OnCompleteAction",
      "Item2": false,
      "Item3": ""
    },
    "removePreviousObjectives": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "chapterString": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "isSilent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowCrouchPrompt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "icon": {
      "Item1": "Icon",
      "Item2": false,
      "Item3": ""
    },
    "caseID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "forceBottom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "Bark": {},
  "BasicBehaviour": {},
  "PipeSetup": {
    "type": {
      "Item1": "PipeType",
      "Item2": false,
      "Item3": ""
    },
    "material": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "models": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    }
  },
  "PipeType": {},
  "PipeGroup": {
    "type": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "routes": {
      "Item1": "PipeRoute",
      "Item2": true,
      "Item3": ""
    },
    "rooms": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "spawned": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "isVisible": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "PipeRoute": {
    "w": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "s": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "PlayerFurniture": {
    "matKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "presetStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "FurniturePreset",
      "Item2": false,
      "Item3": ""
    },
    "placement": {
      "Item1": "FurnitureLocation",
      "Item2": false,
      "Item3": ""
    }
  },
  "FurniturePlacement": {
    "preset": {
      "Item1": "FurniturePreset",
      "Item2": false,
      "Item3": ""
    },
    "existing": {
      "Item1": "FurnitureLocation",
      "Item2": false,
      "Item3": ""
    },
    "materialKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "art": {
      "Item1": "ArtPreset",
      "Item2": false,
      "Item3": ""
    },
    "anchorNode": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "coversNodes": {
      "Item1": "NewNode",
      "Item2": true,
      "Item3": ""
    },
    "angle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "offset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    }
  },
  "GameSetting": {
    "identifier": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "intDefault": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "intValue": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "strDefault": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "strValue": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "toggle": {
      "Item1": "ToggleController",
      "Item2": false,
      "Item3": ""
    },
    "slider": {
      "Item1": "SliderController",
      "Item2": false,
      "Item3": ""
    },
    "dropdown": {
      "Item1": "DropdownController",
      "Item2": false,
      "Item3": ""
    },
    "secondaryDropdown": {
      "Item1": "DropdownController",
      "Item2": false,
      "Item3": ""
    },
    "multiselect": {
      "Item1": "MultiSelectController",
      "Item2": false,
      "Item3": ""
    },
    "valueDisplayText": {
      "Item1": "TextMeshProUGUI",
      "Item2": false,
      "Item3": ""
    },
    "lateLoad": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useDropdownInt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "platformSpecificDefaults": {
      "Item1": "PlatformSpecificDefault",
      "Item2": true,
      "Item3": ""
    },
    "onlyDisplayInDevMode": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dontDisplayOnPlatforms": {
      "Item1": "BuildConfig",
      "Item2": true,
      "Item3": ""
    }
  },
  "PlatformSpecificDefault": {
    "lowEndHardware": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "platform": {
      "Item1": "BuildConfig",
      "Item2": false,
      "Item3": ""
    },
    "intDefault": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "strDefault": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "CityInfoData": {
    "cityName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "build": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "shareCode": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "citySize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "population": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CitySaveData": {
    "build": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "cityName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "seed": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "citySize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "population": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "playersApartment": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "districts": {
      "Item1": "DistrictCitySave",
      "Item2": true,
      "Item3": ""
    },
    "streets": {
      "Item1": "StreetCitySave",
      "Item2": true,
      "Item3": ""
    },
    "cityTiles": {
      "Item1": "CityTileCitySave",
      "Item2": true,
      "Item3": ""
    },
    "citizens": {
      "Item1": "HumanCitySave",
      "Item2": true,
      "Item3": ""
    },
    "interactables": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    },
    "groups": {
      "Item1": "SocialGroup",
      "Item2": true,
      "Item3": ""
    },
    "pipes": {
      "Item1": "PipeGroup",
      "Item2": true,
      "Item3": ""
    },
    "criminals": {
      "Item1": "OccupationCitySave",
      "Item2": true,
      "Item3": ""
    },
    "multiPage": {
      "Item1": "EvidenceStateSave",
      "Item2": true,
      "Item3": ""
    },
    "metas": {
      "Item1": "MetaObject",
      "Item2": true,
      "Item3": ""
    }
  },
  "DistrictCitySave": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "districtID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "blocks": {
      "Item1": "BlockCitySave",
      "Item2": true,
      "Item3": ""
    },
    "averageLandValue": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "dominantEthnicities": {
      "Item1": "EthnicityFrequency",
      "Item2": true,
      "Item3": ""
    }
  },
  "BlockCitySave": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "blockID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "averageDensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "averageLandValue": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "CityTileCitySave": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "blockID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "districtID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "cityCoord": {
      "Item1": "Vector2Int",
      "Item2": false,
      "Item3": ""
    },
    "building": {
      "Item1": "BuildingCitySave",
      "Item2": false,
      "Item3": ""
    },
    "outsideTiles": {
      "Item1": "TileCitySave",
      "Item2": true,
      "Item3": ""
    },
    "density": {
      "Item1": "Density",
      "Item2": false,
      "Item3": ""
    },
    "landValue": {
      "Item1": "LandValue",
      "Item2": false,
      "Item3": ""
    }
  },
  "BuildingCitySave": {
    "buildingID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "floors": {
      "Item1": "FloorCitySave",
      "Item2": true,
      "Item3": ""
    },
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "facing": {
      "Item1": "Direction",
      "Item2": false,
      "Item3": ""
    },
    "isInaccessible": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sideSigns": {
      "Item1": "SideSign",
      "Item2": true,
      "Item3": ""
    },
    "airDucts": {
      "Item1": "AirDuctGroupCitySave",
      "Item2": true,
      "Item3": ""
    },
    "designStyle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "wood": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "floorMaterial": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "floorMatKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "ceilingMaterial": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ceilingMatKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "defaultWallMaterial": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "defaultWallKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "extWallMaterial": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "extWallKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "colourScheme": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "floorMatOverride": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ceilingMatOverride": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "wallMatOverride": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "floorMatOverrideB": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ceilingMatOverrideB": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "wallMatOverrideB": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "AirDuctGroupCitySave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ext": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "airVents": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "airDucts": {
      "Item1": "AirDuctSegmentCitySave",
      "Item2": true,
      "Item3": ""
    },
    "ventRooms": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "adjoining": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "AirDuctSegmentCitySave": {
    "level": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "index": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "duct": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "previous": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "next": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "peek": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "addRot": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    }
  },
  "AirVentSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ventType": {
      "Item1": "AirVent",
      "Item2": false,
      "Item3": ""
    },
    "wall": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "rNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    }
  },
  "FloorCitySave": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "floorID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "floor": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "addresses": {
      "Item1": "AddressCitySave",
      "Item2": true,
      "Item3": ""
    },
    "tiles": {
      "Item1": "TileCitySave",
      "Item2": true,
      "Item3": ""
    },
    "size": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "defaultFloorHeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "defaultCeilingHeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "layoutIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "echelons": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "breakerSec": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "breakerLights": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "breakerDoors": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "TileCitySave": {
    "tileID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "floorCoord": {
      "Item1": "Vector2Int",
      "Item2": false,
      "Item3": ""
    },
    "globalTileCoord": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "isEdge": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "rotation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isMainEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isStairwell": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "stairwellRotation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isElevator": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "elevatorRotation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isTop": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isBottom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "StreetCitySave": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "access": {
      "Item1": "AccessType",
      "Item2": false,
      "Item3": ""
    },
    "rooms": {
      "Item1": "RoomCitySave",
      "Item2": true,
      "Item3": ""
    },
    "designStyle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "streetID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "district": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "tiles": {
      "Item1": "Vector3Int",
      "Item2": true,
      "Item3": ""
    },
    "streetSuffix": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "isAlley": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isBackstreet": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sharedGround": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "streetTiles": {
      "Item1": "StreetTile",
      "Item2": true,
      "Item3": ""
    }
  },
  "AddressCitySave": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "residenceNumber": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isLobby": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isOutside": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "access": {
      "Item1": "AccessType",
      "Item2": false,
      "Item3": ""
    },
    "rooms": {
      "Item1": "RoomCitySave",
      "Item2": true,
      "Item3": ""
    },
    "designStyle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "neonHor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "neonVer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "neonVerticalIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "neonColour": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "neonFont": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "landValue": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "passcode": {
      "Item1": "Passcode",
      "Item2": false,
      "Item3": ""
    },
    "protectedNodes": {
      "Item1": "Vector3",
      "Item2": true,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "address": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "wood": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "residence": {
      "Item1": "ResidenceCitySave",
      "Item2": false,
      "Item3": ""
    },
    "company": {
      "Item1": "CompanyCitySave",
      "Item2": false,
      "Item3": ""
    },
    "isOutsideAddress": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isLobbyAddress": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "breakerSec": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "breakerLights": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "breakerDoors": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ResidenceCitySave": {
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mail": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CompanyCitySave": {
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "companyRoster": {
      "Item1": "OccupationCitySave",
      "Item2": true,
      "Item3": ""
    },
    "shortName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "nameAltTags": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "passedWorkLocation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "menuItems": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "itemCosts": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "OccupationCitySave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "teamLeader": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "boss": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "paygrade": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "teamID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isOwner": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "work": {
      "Item1": "workType",
      "Item2": false,
      "Item3": ""
    },
    "tags": {
      "Item1": "workTags",
      "Item2": true,
      "Item3": ""
    },
    "shift": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "startTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "endTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "workDaysList": {
      "Item1": "WeekDay",
      "Item2": true,
      "Item3": ""
    },
    "salary": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "salaryString": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "RoomCitySave": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "nodes": {
      "Item1": "NodeCitySave",
      "Item2": true,
      "Item3": ""
    },
    "openPlanElements": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "lightZones": {
      "Item1": "LightZoneSave",
      "Item2": true,
      "Item3": ""
    },
    "commonRooms": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "floorID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "iID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "reachableFromEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isOutsideWindow": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowCoving": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "floorMaterial": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "floorMatKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "ceilingMaterial": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ceilingMatKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "defaultWallMaterial": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "defaultWallKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "miscKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "colourScheme": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mainLightPreset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "isBaseNullRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "middle": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "f": {
      "Item1": "FurnitureClusterCitySave",
      "Item2": true,
      "Item3": ""
    },
    "owners": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "airVents": {
      "Item1": "AirVentSave",
      "Item2": true,
      "Item3": ""
    },
    "password": {
      "Item1": "Passcode",
      "Item2": false,
      "Item3": ""
    },
    "cf": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "cullTree": {
      "Item1": "CullTreeSave",
      "Item2": true,
      "Item3": ""
    },
    "above": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "below": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "adj": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "occ": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "CullTreeSave": {
    "r": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "d": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "LightZoneSave": {
    "n": {
      "Item1": "Vector3Int",
      "Item2": true,
      "Item3": ""
    },
    "areaLightColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "areaLightBright": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "NodeCitySave": {
    "nc": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "w": {
      "Item1": "WallCitySave",
      "Item2": true,
      "Item3": ""
    },
    "ft": {
      "Item1": "FloorTileType",
      "Item2": false,
      "Item3": ""
    },
    "fr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "frr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "WallCitySave": {
    "wo": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "p": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ow": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "pw": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "cw": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "oo": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "oa": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "cl": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "sw": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fr": {
      "Item1": "WallFrontageSave",
      "Item2": true,
      "Item3": ""
    },
    "dm": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dmk": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "ds": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "ls": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "WallFrontageSave": {
    "str": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "matKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "o": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    }
  },
  "FurnitureClusterCitySave": {
    "cluster": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "anchorNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "angle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "objs": {
      "Item1": "FurnitureClusterObjectCitySave",
      "Item2": true,
      "Item3": ""
    }
  },
  "FurnitureClusterObjectCitySave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "furnitureClasses": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "angle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "anchorNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "coversNodes": {
      "Item1": "Vector3Int",
      "Item2": true,
      "Item3": ""
    },
    "offset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "furniture": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "art": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "up": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "scale": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "matKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "artMatKet": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": ""
    },
    "owners": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "HumanCitySave": {
    "humanID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "home": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "speedModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "job": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "birthday": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "societalClass": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "descriptors": {
      "Item1": "Descriptors",
      "Item2": false,
      "Item3": ""
    },
    "blood": {
      "Item1": "BloodType",
      "Item2": false,
      "Item3": ""
    },
    "citizenName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "firstName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "casualName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "surName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "homeless": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "slangUsage": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "genderScale": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "gender": {
      "Item1": "Gender",
      "Item2": false,
      "Item3": ""
    },
    "bGender": {
      "Item1": "Gender",
      "Item2": false,
      "Item3": ""
    },
    "sexuality": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "homosexuality": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "attractedTo": {
      "Item1": "Gender",
      "Item2": true,
      "Item3": ""
    },
    "partner": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "paramour": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "anniversary": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "sleepNeedMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "snoring": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "snoreDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "humility": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "emotionality": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "extraversion": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "agreeableness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "conscientiousness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "creativity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "acquaintances": {
      "Item1": "AcquaintanceCitySave",
      "Item2": true,
      "Item3": ""
    },
    "traits": {
      "Item1": "CharTraitSave",
      "Item2": true,
      "Item3": ""
    },
    "password": {
      "Item1": "Passcode",
      "Item2": false,
      "Item3": ""
    },
    "maxHealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "recoveryRate": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "combatSkill": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "combatHeft": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maxNerve": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "breathRecovery": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "handwriting": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "sightingMemory": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "favItems": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "favItemRanks": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "favCat": {
      "Item1": "CompanyCategory",
      "Item2": true,
      "Item3": ""
    },
    "favAddresses": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "outfits": {
      "Item1": "Outfit",
      "Item2": true,
      "Item3": ""
    },
    "favCol": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CharTraitSave": {
    "traitID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "trait": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "reason": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "date": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "AcquaintanceCitySave": {
    "from": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "with": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "connections": {
      "Item1": "ConnectionType",
      "Item2": true,
      "Item3": ""
    },
    "secret": {
      "Item1": "ConnectionType",
      "Item2": false,
      "Item3": ""
    },
    "compatible": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "known": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "like": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "dataKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    }
  },
  "EvidenceStateSave": {
    "id": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "dds": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "found": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "keyTies": {
      "Item1": "EvidenceDataKeyTie",
      "Item2": true,
      "Item3": ""
    },
    "discovery": {
      "Item1": "Discovery",
      "Item2": true,
      "Item3": ""
    },
    "fs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "n": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "customName": {
      "Item1": "CustomName",
      "Item2": true,
      "Item3": ""
    },
    "mpContent": {
      "Item1": "MultiPageContent",
      "Item2": true,
      "Item3": ""
    }
  },
  "StateSaveData": {
    "build": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "cityShare": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "compositionData": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "dynamicPrintsCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "sceneCaptureCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "sceneCapMax": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "saveTime": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "gameTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "timeLimit": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "leapCycle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fingerprintLoop": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignCaptureID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignMessageThreadID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignGroupID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignStickNote": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignInteractableID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignCaseID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignMurderID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "gameLength": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "currentRain": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "desiredRain": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "currentWind": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "desiredWind": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "currentSnow": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "desiredSnow": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "currentLightning": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "desiredLightning": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "currentFog": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "desiredFog": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "cityWetness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "citySnow": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "weatherChange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "basicJobs": {
      "Item1": "SideJob",
      "Item2": true,
      "Item3": ""
    },
    "affairJobs": {
      "Item1": "SideJobAffair",
      "Item2": true,
      "Item3": ""
    },
    "sabotageJobs": {
      "Item1": "SideJobSabotage",
      "Item2": true,
      "Item3": ""
    },
    "stolenItemJobs": {
      "Item1": "SideJobStolenItem",
      "Item2": true,
      "Item3": ""
    },
    "missingPersonJobs": {
      "Item1": "SideJobMissingPerson",
      "Item2": true,
      "Item3": ""
    },
    "revengeJobs": {
      "Item1": "SideJobRevenge",
      "Item2": true,
      "Item3": ""
    },
    "briefcaseJobs": {
      "Item1": "SideJobStealBriefcase",
      "Item2": true,
      "Item3": ""
    },
    "jobDiffLevel": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "chapter": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "chapterPart": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "chapterSaveState": {
      "Item1": "ChaperStateSave",
      "Item2": false,
      "Item3": ""
    },
    "mapPathActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "mapPathNodeSpecific": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "mapPathNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "activeCases": {
      "Item1": "Case",
      "Item2": true,
      "Item3": ""
    },
    "archivedCases": {
      "Item1": "Case",
      "Item2": true,
      "Item3": ""
    },
    "activeCase": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "footprints": {
      "Item1": "Footprint",
      "Item2": true,
      "Item3": ""
    },
    "history": {
      "Item1": "History",
      "Item2": true,
      "Item3": ""
    },
    "passcodes": {
      "Item1": "Passcode",
      "Item2": true,
      "Item3": ""
    },
    "numbers": {
      "Item1": "PhoneNumber",
      "Item2": true,
      "Item3": ""
    },
    "enforcerCalls": {
      "Item1": "EnforcerCall",
      "Item2": true,
      "Item3": ""
    },
    "crimeSceneCleanup": {
      "Item1": "CrimeSceneCleanup",
      "Item2": true,
      "Item3": ""
    },
    "hotelGuests": {
      "Item1": "HotelGuest",
      "Item2": true,
      "Item3": ""
    },
    "brokenWindows": {
      "Item1": "BrokenWindowSave",
      "Item2": true,
      "Item3": ""
    },
    "newspaperState": {
      "Item1": "NewspaperState",
      "Item2": false,
      "Item3": ""
    },
    "playerFirstName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "playerSurname": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "playerGender": {
      "Item1": "Gender",
      "Item2": false,
      "Item3": ""
    },
    "partnerGender": {
      "Item1": "Gender",
      "Item2": false,
      "Item3": ""
    },
    "playerSkinColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "playerBirthDay": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "playerBirthMonth": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "playerBirthYear": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "residence": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "apartmentsOwned": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "accidentCover": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "foodH": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "sanitary": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "ops": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "knowsPasswords": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "debt": {
      "Item1": "LoanDebt",
      "Item2": true,
      "Item3": ""
    },
    "carried": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "tutorial": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "tutTextTriggered": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "firstPersonItems": {
      "Item1": "InventorySlot",
      "Item2": true,
      "Item3": ""
    },
    "scannedPrints": {
      "Item1": "ScannedObjPrint",
      "Item2": true,
      "Item3": ""
    },
    "playerPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "playerRot": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    },
    "money": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "lockpicks": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "socCredit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "socCreditPerks": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "health": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "nourishment": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "hydration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "alertness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "energy": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "hygiene": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "heat": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "drunk": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "sick": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "headache": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wet": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "brokenLeg": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "bruised": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "blackEye": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "blackedOut": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "numb": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "poisoned": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "bleeding": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wellRested": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "starchAddiction": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "syncDiskInstall": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "blinded": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "crouched": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "upgrades": {
      "Item1": "Upgrades",
      "Item2": true,
      "Item3": ""
    },
    "sabotaged": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "booksRead": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "playerSavedCaptures": {
      "Item1": "SceneCapture",
      "Item2": true,
      "Item3": ""
    },
    "speech": {
      "Item1": "QueueElement",
      "Item2": true,
      "Item3": ""
    },
    "keyring": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "keyringInt": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "fakeTelephone": {
      "Item1": "FakeTelephone",
      "Item2": true,
      "Item3": ""
    },
    "hideInteractable": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "hideRef": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "phoneInteractable": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "computerInteractable": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "duct": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "storedTransPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "buildings": {
      "Item1": "BuildingStateSav",
      "Item2": true,
      "Item3": ""
    },
    "companies": {
      "Item1": "CompanyStateSave",
      "Item2": true,
      "Item3": ""
    },
    "messageThreads": {
      "Item1": "MessageThreadSave",
      "Item2": true,
      "Item3": ""
    },
    "pgLoop": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "currentMurderer": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "currentVictim": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "currentActiveCase": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "murderPreset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "chosenMO": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "previousMurderers": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "pauseBetweenMurders": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "pauseForKidnapperKill": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "murderRoutineActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "maxMurderDiffLevel": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "currentVictimSite": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "victimSiteIsStreet": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "triggerCoverUpCall": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "playerAcceptedCoverUp": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "triggerCoverUpSuccess": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "murders": {
      "Item1": "Murder",
      "Item2": true,
      "Item3": ""
    },
    "iaMurders": {
      "Item1": "Murder",
      "Item2": true,
      "Item3": ""
    },
    "evidence": {
      "Item1": "EvidenceStateSave",
      "Item2": true,
      "Item3": ""
    },
    "timeEvidence": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "dateEvidence": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "customStrings": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "spatter": {
      "Item1": "SpatterSimulation",
      "Item2": true,
      "Item3": ""
    },
    "furnitureStorage": {
      "Item1": "FurnitureClusterObjectCitySave",
      "Item2": true,
      "Item3": ""
    },
    "airDuctExploration": {
      "Item1": "AirDuctExplorationSave",
      "Item2": true,
      "Item3": ""
    },
    "freeHealthCareFlag": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "notTheAnswerFlag": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "privateSlyFlag": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "allConnectedReference": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "pacifistFlag": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "notAScratchFlag": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "spareNoOneReference": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "floors": {
      "Item1": "FloorStateSave",
      "Item2": true,
      "Item3": ""
    },
    "addresses": {
      "Item1": "AddressStateSave",
      "Item2": true,
      "Item3": ""
    },
    "guestPasses": {
      "Item1": "GuestPassStateSave",
      "Item2": true,
      "Item3": ""
    },
    "rooms": {
      "Item1": "RoomStateSave",
      "Item2": true,
      "Item3": ""
    },
    "metas": {
      "Item1": "MetaObject",
      "Item2": true,
      "Item3": ""
    },
    "interactables": {
      "Item1": "Interactable",
      "Item2": true,
      "Item3": ""
    },
    "removedCityData": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "citizens": {
      "Item1": "CitizenStateSave",
      "Item2": true,
      "Item3": ""
    },
    "doors": {
      "Item1": "DoorStateSave",
      "Item2": true,
      "Item3": ""
    }
  },
  "CrimeSceneCleanup": {
    "isStreet": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "BrokenWindowSave": {
    "pos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "brokenAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "ScannedObjPrint": {
    "objID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "prints": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "ChaperStateSave": {
    "data": {
      "Item1": "ChapterSaveData",
      "Item2": true,
      "Item3": ""
    }
  },
  "ChapterSaveData": {
    "reference": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "data": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "EvidenceDataKeyTie": {
    "key": {
      "Item1": "DataKey",
      "Item2": false,
      "Item3": ""
    },
    "tied": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    }
  },
  "FakeTelephone": {
    "number": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "source": {
      "Item1": "CallSource",
      "Item2": false,
      "Item3": ""
    }
  },
  "BuildingStateSav": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "alarmActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "alarmTimer": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "targetMode": {
      "Item1": "AlarmTargetMode",
      "Item2": false,
      "Item3": ""
    },
    "targetModeSetAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "targets": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "wanted": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "elevators": {
      "Item1": "ElevatorStateSave",
      "Item2": true,
      "Item3": ""
    },
    "callLog": {
      "Item1": "PhoneCall",
      "Item2": true,
      "Item3": ""
    },
    "lostAndFound": {
      "Item1": "LostAndFound",
      "Item2": true,
      "Item3": ""
    }
  },
  "ElevatorStateSave": {
    "tileID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "yPos": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "floor": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "FloorStateSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "alarmLockdown": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "AddressStateSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "sale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "vandalism": {
      "Item1": "Vandalism",
      "Item2": true,
      "Item3": ""
    },
    "alarmActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "alarmTimer": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "targetMode": {
      "Item1": "AlarmTargetMode",
      "Item2": false,
      "Item3": ""
    },
    "targetModeSetAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "targets": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "escalation": {
      "Item1": "TrespassEscalation",
      "Item2": true,
      "Item3": ""
    },
    "loiter": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "CompanyStateSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "sales": {
      "Item1": "SalesRecord",
      "Item2": true,
      "Item3": ""
    }
  },
  "GuestPassStateSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "guestPassUntil": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    }
  },
  "RoomStateSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ml": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "gl": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "iID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "decorOverride": {
      "Item1": "RoomCitySave",
      "Item2": true,
      "Item3": ""
    },
    "ls": {
      "Item1": "ChangedLightswitch",
      "Item2": true,
      "Item3": ""
    }
  },
  "CitizenStateSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "pos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "rot": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    },
    "trespassingEscalation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "currentOutfit": {
      "Item1": "OutfitCategory",
      "Item2": false,
      "Item3": ""
    },
    "nourishment": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "hydration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "alertness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "energy": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "excitement": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "chores": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "hygiene": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "bladder": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "heat": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "drunk": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "breath": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "poisoned": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "blinded": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "poisoner": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "den": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "kidnapper": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "remFromWorld": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "currentHealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "currentNerve": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fsDirt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fsBlood": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wounds": {
      "Item1": "Wound",
      "Item2": true,
      "Item3": ""
    },
    "investigateLocation": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "investigatePosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "investigatePositionProjection": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "lastInvestigate": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "persuit": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "seesPlayerOnPersuit": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "persuitChaseLogicUses": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "persuitTarget": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "persuitPlayer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "escalationLevel": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "minimumInvestigationTimeMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "reactionState": {
      "Item1": "ReactionState",
      "Item2": false,
      "Item3": ""
    },
    "atHome": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "convicted": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "unreportable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ko": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "koTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "res": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "resTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "spooked": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "spookCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "death": {
      "Item1": "Death",
      "Item2": false,
      "Item3": ""
    },
    "ragdollSnapshot": {
      "Item1": "RagdollSnapshot",
      "Item2": true,
      "Item3": ""
    },
    "ragdollSnapshotWorld": {
      "Item1": "RagdollSnapshotWorld",
      "Item2": true,
      "Item3": ""
    },
    "wallet": {
      "Item1": "WalletItem",
      "Item2": true,
      "Item3": ""
    },
    "currentGoal": {
      "Item1": "CurrentGoalStateSave",
      "Item2": false,
      "Item3": ""
    },
    "fingerprintLoop": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "currentConsumable": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "trash": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "putDown": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "sightingCit": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "sightings": {
      "Item1": "Sighting",
      "Item2": true,
      "Item3": ""
    },
    "confine": {
      "Item1": "AvoidConfineStateSave",
      "Item2": false,
      "Item3": ""
    },
    "avoid": {
      "Item1": "AvoidConfineStateSave",
      "Item2": true,
      "Item3": ""
    }
  },
  "AvoidConfineStateSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "st": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "CurrentGoalStateSave": {
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "priority": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "trigerTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "duration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "passedNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "passedInteractable": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "gameLocation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "room": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "isAddress": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "passedGroup": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "jobID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "var": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "activeTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "actions": {
      "Item1": "AIActionStateSave",
      "Item2": true,
      "Item3": ""
    }
  },
  "AIActionStateSave": {
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "node": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "passedInteractable": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "passedRoom": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "passedGroup": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "forcedNode": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "repeat": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "inserted": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "iap": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "DoorStateSave": {
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "l": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ds": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "ls": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "ajar": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "cs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "MessageThreadSave": {
    "threadID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "msgType": {
      "Item1": "TreeType",
      "Item2": false,
      "Item3": ""
    },
    "treeID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "participantA": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "participantB": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "participantC": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "participantD": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "cc": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "messages": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "senders": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "recievers": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "timestamps": {
      "Item1": "Single",
      "Item2": true,
      "Item3": ""
    },
    "time": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "ds": {
      "Item1": "CustomDataSource",
      "Item2": false,
      "Item3": ""
    },
    "dsID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CustomDataSource": {},
  "AirDuctExplorationSave": {
    "grpID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "vents": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "ducts": {
      "Item1": "Vector3Int",
      "Item2": true,
      "Item3": ""
    }
  },
  "ChangedLightswitch": {
    "locPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "locEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "added": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "SpatterSimulation": {
    "worldOrigin": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "worldTarget": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "nodeCoord": {
      "Item1": "Vector3Int",
      "Item2": false,
      "Item3": ""
    },
    "presetStr": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "roomID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "eraseMode": {
      "Item1": "EraseMode",
      "Item2": false,
      "Item3": ""
    },
    "force": {
      "Item1": "ForceType",
      "Item2": false,
      "Item3": ""
    },
    "spatterCountMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "createdAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isExecuted": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "executedAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "eraseModeTimeStamp": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "stickToActors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "decalsSpawned": {
      "Item1": "DecalSpawnData",
      "Item2": true,
      "Item3": ""
    },
    "room": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "SpatterPatternPreset",
      "Item2": false,
      "Item3": ""
    },
    "spawnedProjectorsCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "EraseMode": {},
  "ForceType": {},
  "DecalSpawnData": {
    "parentID": {
      "Item1": "ParentID",
      "Item2": false,
      "Item3": ""
    },
    "transformParentID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "subObjectName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "worldPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "worldEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "size": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "materialType": {
      "Item1": "DecalMaterialType",
      "Item2": false,
      "Item3": ""
    },
    "spawnedProjector": {
      "Item1": "DecalProjector",
      "Item2": false,
      "Item3": ""
    },
    "i": {
      "Item1": "Interactable",
      "Item2": false,
      "Item3": ""
    },
    "sim": {
      "Item1": "SpatterSimulation",
      "Item2": false,
      "Item3": ""
    },
    "INITIAL_POOL_SIZE": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "RECYCLED_Y_POSITION": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "decalPool": {
      "Item1": "DecalProjector",
      "Item2": true,
      "Item3": ""
    }
  },
  "DecalMaterialType": {},
  "ParentID": {},
  "TwitchRootObject": {
    "data": {
      "Item1": "TwitchUserData",
      "Item2": true,
      "Item3": ""
    }
  },
  "TwitchUserData": {
    "user_name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "TwitchAudienceData": {
    "user_id": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "login": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_links": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "chatter_count": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "chatters": {
      "Item1": "Chatters",
      "Item2": false,
      "Item3": ""
    },
    "followers": {
      "Item1": "TwitchRootObject",
      "Item2": false,
      "Item3": ""
    },
    "chattersNew": {
      "Item1": "TwitchRootObject",
      "Item2": false,
      "Item3": ""
    },
    "vipsNew": {
      "Item1": "TwitchRootObject",
      "Item2": false,
      "Item3": ""
    },
    "moderatorsNew": {
      "Item1": "TwitchRootObject",
      "Item2": false,
      "Item3": ""
    }
  },
  "Chatters": {
    "broadcaster": {
      "Item1": "Il2CppStringArray",
      "Item2": false,
      "Item3": ""
    },
    "vips": {
      "Item1": "Il2CppStringArray",
      "Item2": false,
      "Item3": ""
    },
    "moderators": {
      "Item1": "Il2CppStringArray",
      "Item2": false,
      "Item3": ""
    },
    "staff": {
      "Item1": "Il2CppStringArray",
      "Item2": false,
      "Item3": ""
    },
    "admins": {
      "Item1": "Il2CppStringArray",
      "Item2": false,
      "Item3": ""
    },
    "global_mods": {
      "Item1": "Il2CppStringArray",
      "Item2": false,
      "Item3": ""
    },
    "viewers": {
      "Item1": "Il2CppStringArray",
      "Item2": false,
      "Item3": ""
    }
  },
  "CitizenReplacement": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "firstName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "surName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "MaterialKey": {
    "baseMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "mainColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "colour1": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "colour2": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "colour3": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "grubiness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "LayerMaskMode": {},
  "WindowBreakSetting": {
    "filter": {
      "Item1": "MeshFilter",
      "Item2": false,
      "Item3": ""
    },
    "renderer": {
      "Item1": "MeshRenderer",
      "Item2": false,
      "Item3": ""
    },
    "defaultMat": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "brokenMat": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "boardedMat": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "defaultMesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": ""
    },
    "brokenMesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": ""
    },
    "boardedMesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": ""
    },
    "collider": {
      "Item1": "Collider",
      "Item2": false,
      "Item3": ""
    },
    "removeColliderWhenBroken": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "removeWhenBoarded": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shatter": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shardSize": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "shardEveryXPixels": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "shatterForceMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "RainSheet": {
    "rainSheetTransform": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "renderer": {
      "Item1": "MeshRenderer",
      "Item2": false,
      "Item3": ""
    }
  },
  "PhotoCache": {
    "img": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "lastUsed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "actorSP": {
      "Item1": "ActorScreenPosition",
      "Item2": true,
      "Item3": ""
    }
  },
  "PostProcessingProfile": {},
  "ControllerSelectMode": {},
  "MenuFlag": {},
  "ContextMenuButtonSetup": {
    "commandString": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "useText": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overrideText": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "useColour": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "colour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "devOnly": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ControlGraphicType": {},
  "AudioIcon": {
    "rect": {
      "Item1": "RectTransform",
      "Item2": false,
      "Item3": ""
    },
    "img": {
      "Item1": "Image",
      "Item2": false,
      "Item3": ""
    },
    "fadeIn": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "remove": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "CreditCategory": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "localize": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "extra": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "localizeExtra": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "credits": {
      "Item1": "CreditEntry",
      "Item2": true,
      "Item3": ""
    }
  },
  "CreditEntry": {
    "title": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "names": {
      "Item1": "CreditName",
      "Item2": true,
      "Item3": ""
    }
  },
  "CreditName": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "additional": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "PingOnComplete": {},
  "GameMessageType": {},
  "AwarenessType": {},
  "AwarenessBehaviour": {},
  "AwarenessIcon": {
    "awarenessType": {
      "Item1": "AwarenessType",
      "Item2": false,
      "Item3": ""
    },
    "awarenessBehaviour": {
      "Item1": "AwarenessBehaviour",
      "Item2": false,
      "Item3": ""
    },
    "actor": {
      "Item1": "Actor",
      "Item2": false,
      "Item3": ""
    },
    "targetTransform": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "targetPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "spawned": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "imageTransform": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "imageMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "arrowTransform": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "arrowMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "overrideTexture": {
      "Item1": "Texture",
      "Item2": false,
      "Item3": ""
    },
    "fadeIn": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "springAction": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "removalProgress": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "removalFlag": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "alpha": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "displayAlpha": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maxDistance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "setup": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "priority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "triggerAlert": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "alertProgress": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "ScreenDisplayType": {},
  "JuiceElement": {
    "transformElement": {
      "Item1": "RectTransform",
      "Item2": false,
      "Item3": ""
    },
    "imageElement": {
      "Item1": "Image",
      "Item2": false,
      "Item3": ""
    },
    "rawImageElement": {
      "Item1": "RawImage",
      "Item2": false,
      "Item3": ""
    },
    "renderer": {
      "Item1": "CanvasRenderer",
      "Item2": false,
      "Item3": ""
    },
    "originalColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "getNormalColourAtStart": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Get the original colours of images and raw images at the start"
    },
    "originalLocalPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "originalLocalRot": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "originalLocalScale": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "getNormalTransformAtStart": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "MenuComponent": {
    "component": {
      "Item1": "Component",
      "Item2": false,
      "Item3": ""
    },
    "rect": {
      "Item1": "RectTransform",
      "Item2": false,
      "Item3": ""
    },
    "xPhase": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "onscreenAnchoredPosition": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "buttons": {
      "Item1": "ButtonController",
      "Item2": true,
      "Item3": ""
    },
    "previouslySelected": {
      "Item1": "ButtonController",
      "Item2": false,
      "Item3": ""
    },
    "skipMotion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "Component": {},
  "LoadingTip": {
    "dictRef": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "image": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    }
  },
  "MultiSelectValue": {
    "button": {
      "Item1": "ButtonController",
      "Item2": false,
      "Item3": ""
    },
    "colourValue": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "evidenceColour": {
      "Item1": "EvidenceColours",
      "Item2": false,
      "Item3": ""
    }
  },
  "SplashImage": {
    "rect": {
      "Item1": "RectTransform",
      "Item2": false,
      "Item3": ""
    },
    "rend": {
      "Item1": "CanvasRenderer",
      "Item2": false,
      "Item3": ""
    },
    "displayTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "NavRectPoint": {},
  "ButtonAudioType": {},
  "RecallAccuracy": {},
  "TimelineEvent": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "detail": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "intialised": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "eventType": {
      "Item1": "EventType",
      "Item2": false,
      "Item3": ""
    },
    "isSelfLocational": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isGlobalEvent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "eventID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "assignEventID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "location": {
      "Item1": "NewNode",
      "Item2": false,
      "Item3": ""
    },
    "happenedAt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "timeAccuracy": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "totalSuspicion": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "calledUpon": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "eventTime": {
      "Item1": "EventTime",
      "Item2": false,
      "Item3": ""
    },
    "childEvents": {
      "Item1": "TimelineEvent",
      "Item2": true,
      "Item3": ""
    },
    "parentEvent": {
      "Item1": "TimelineEvent",
      "Item2": false,
      "Item3": ""
    },
    "discoveredByQuestioned": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "OnNameChanged": {
      "Item1": "OnNameChange",
      "Item2": false,
      "Item3": ""
    },
    "OnRecallAccuracyChange": {
      "Item1": "RecallAccuracyChange",
      "Item2": false,
      "Item3": ""
    },
    "OnCalledUponTimeUpdated": {
      "Item1": "OnCalledUponTimeUpdate",
      "Item2": false,
      "Item3": ""
    },
    "debugLocationID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "debugLocationName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "EventType": {},
  "AffectPauseState": {},
  "FineRecord": {
    "addressID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "objectID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "crime": {
      "Item1": "CrimeType",
      "Item2": false,
      "Item3": ""
    },
    "confirmed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "forcedPenalty": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CrimeType": {},
  "TabState": {},
  "SliderPickerType": {},
  "TextToImageSettings": {
    "textString": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "textSize": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "font": {
      "Item1": "TMP_FontAsset",
      "Item2": false,
      "Item3": ""
    },
    "enableProcessing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "contrast": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "trim": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "trimPadding": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useAlpha": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    }
  },
  "AppliedEffect": {
    "disk": {
      "Item1": "Upgrades",
      "Item2": false,
      "Item3": ""
    },
    "effect": {
      "Item1": "Effect",
      "Item2": false,
      "Item3": ""
    },
    "value": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "SyncDiskState": {},
  "Upgrades": {
    "upgrade": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "state": {
      "Item1": "SyncDiskState",
      "Item2": false,
      "Item3": ""
    },
    "list": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "level": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "objId": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "uninstallCost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "SyncDiskPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "StartingMousePosition": {},
  "ZoomPivot": {},
  "StatementType": {},
  "Discovery": {},
  "DataKey": {},
  "FactLink": {
    "fact": {
      "Item1": "Fact",
      "Item2": false,
      "Item3": ""
    },
    "thisEvidence": {
      "Item1": "Evidence",
      "Item2": false,
      "Item3": ""
    },
    "thisKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "destinationEvidence": {
      "Item1": "Evidence",
      "Item2": true,
      "Item3": ""
    },
    "destinationKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "thisIsTheFromEvidence": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "CustomName": {
    "key": {
      "Item1": "DataKey",
      "Item2": false,
      "Item3": ""
    },
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "MultiPageContent": {
    "page": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "evID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "meta": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "discEvID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "disc": {
      "Item1": "Discovery",
      "Item2": false,
      "Item3": ""
    },
    "seperation": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "str": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "order": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "DialogOption": {
    "preset": {
      "Item1": "DialogPreset",
      "Item2": false,
      "Item3": ""
    },
    "jobRef": {
      "Item1": "SideJob",
      "Item2": false,
      "Item3": ""
    },
    "roomRef": {
      "Item1": "NewRoom",
      "Item2": false,
      "Item3": ""
    }
  },
  "History": {
    "evID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "keys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "lastAccess": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "locationID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "LostAndFound": {
    "preset": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ownerID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "buildingID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "spawnedItem": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "spawnedNote": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "rewardMoney": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "rewardSC": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "Passcode": {
    "digits": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "type": {
      "Item1": "PasscodeType",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "used": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "notes": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "PasscodeType": {},
  "PhoneNumber": {
    "number": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "textOverride": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "loc": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "p": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    }
  },
  "HotelGuest": {
    "addID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "humanID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "roomCost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "bill": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "lastPayment": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "nextPayment": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "EnforcerCall": {
    "isStreet": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "id": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "logTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "state": {
      "Item1": "EnforcerCallState",
      "Item2": false,
      "Item3": ""
    },
    "response": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "arrivalTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isCrimeScene": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "immedaiteTeleport": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "guard": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "delay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "EnforcerCallState": {},
  "Footprint": {
    "hID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "rID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "wP": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "eU": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "str": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "bl": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "t": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "LoanDebt": {
    "companyID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "debt": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "payments": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "missedPayments": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "nextPaymentDueBy": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "dueCheck": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "AddressPreset": {
    "debug": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fitsUnitSizeMin": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Fits in units of this size (in tiles)"
    },
    "fitsUnitSizeMax": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "hardSizeLimits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, units incompatible with size will be completely discounted instead of just ranked lower..."
    },
    "minMaxFloors": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "important": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the game will place at least one of these if at all possible"
    },
    "maxInstances": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Maximum number of instances"
    },
    "baseScore": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "baseScoreFrequencyPenalty": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Minus to base score with every instance"
    },
    "idealFootfall": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "footfallMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How important is the correct footfall?"
    },
    "addressRules": {
      "Item1": "AddressRule",
      "Item2": true,
      "Item3": ""
    },
    "limitToBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    },
    "forcePick": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Always pick this if it is compatible"
    },
    "ethnicityMatters": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does the ethnicity of this address factor in the ownership?"
    },
    "ethnicity": {
      "Item1": "EthnicGroup",
      "Item2": false,
      "Item3": "Ethnicity of this address"
    },
    "compatible": {
      "Item1": "LayoutConfiguration",
      "Item2": true,
      "Item3": ""
    },
    "roomConfig": {
      "Item1": "RoomConfiguration",
      "Item2": true,
      "Item3": ""
    },
    "access": {
      "Item1": "AccessType",
      "Item2": false,
      "Item3": ""
    },
    "canPassThrough": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true an AI can pass through this on the way to another place (origins, destinations unaffected)"
    },
    "openHoursDicatedByAdjoiningCompany": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Are open hours dictated by a company that ajoins this?"
    },
    "needsPassword": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The player needs a password to enter this location"
    },
    "dictionaryPasswordSources": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Sources for a password"
    },
    "company": {
      "Item1": "CompanyPreset",
      "Item2": false,
      "Item3": "If a company operates this address, this is the preset"
    },
    "residence": {
      "Item1": "ResidencePreset",
      "Item2": false,
      "Item3": "If a residence is at this address, this is the preset"
    },
    "playerKnowsPurpose": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Purpose/icon is known to the player at the start"
    },
    "evidenceIconLarge": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "chanceOfNameSignHorizontal": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "horizontalSignOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Make a sign using this character set"
    },
    "signCharacterSet": {
      "Item1": "NeonSignCharacters",
      "Item2": true,
      "Item3": ""
    },
    "chanceOfNameSignVertical": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "possibleSigns": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": "Make a sign using one of these"
    },
    "specialItems": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    },
    "chanceOfExternalSpareKey": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance of a spare key being left in an adjoining lobby (will be hidden under mat, or in a plant or radiator)"
    },
    "airVentRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "useOwnSecuritySystem": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If false, this uses the building's security system"
    },
    "useOwnBreakerBox": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If false, this uses the breaker box contained on the floor"
    },
    "alarmLocksDownFloor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If triggered, does the alarm lock down the building floor?"
    },
    "overrideBuildingEnvironment": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sceneProfile": {
      "Item1": "SceneProfile",
      "Item2": false,
      "Item3": ""
    },
    "entrancesLockedByDefault": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Are entrance doors locked by default?"
    },
    "leaveLightsOn": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "AI leaves lights on, even when empty"
    },
    "disableLockingUp": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If enabled, AI leaves doesn't lock doors out of hours or when empty"
    },
    "disableLocationInformationDisplay": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Stop this from appearing in the bottom left when the player enters"
    },
    "forceCityDirectoryInclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This will be included in the city directory"
    },
    "nameFeaturesBuildingReference": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The name of this also contains the building name"
    },
    "nameFeaturesTypeCount": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overrideBuildingName": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The name of this will become the name of the building"
    },
    "sameBuildingEmployeesAuthority": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Employees in the same building will have this as a location of authority"
    },
    "sameBuildingResidentsAuthority": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Residents in the same building will have this as a location of authority"
    },
    "canFeatureLostAndFound": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This address can feature lost & found notes"
    },
    "minimumLandValue": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The minimum land value for this address type"
    },
    "maximumLandValue": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The maximum land value for this address type"
    },
    "allowSniperVantagePoint": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If a sniper type killer is searching for a vantage point, allow this location"
    },
    "vantagePointBoost": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Add weight to this being chosen as a sniper vantage point"
    },
    "disableSniperTargetSite": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowPublicToiletUse": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disableThis": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this won't be chosen in-game"
    }
  },
  "AddressRule": {
    "districtPreset": {
      "Item1": "DistrictPreset",
      "Item2": false,
      "Item3": ""
    },
    "scoreModifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "AIActionPreset": {
    "defaultKey": {
      "Item1": "InteractionKey",
      "Item2": false,
      "Item3": ""
    },
    "debug": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Debug this input"
    },
    "inputPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Useful when there are multiple active actions, the highest takes priority."
    },
    "unavailableWhenItemSelected": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only available when no first person item selected"
    },
    "unavailableWhenItemsSelected": {
      "Item1": "FirstPersonItem",
      "Item2": true,
      "Item3": "If left blank, this is available when any first person item is selected..."
    },
    "onlyAvailableWhenItemSelected": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only available when this first person item selected"
    },
    "availableWhenItemsSelected": {
      "Item1": "FirstPersonItem",
      "Item2": true,
      "Item3": ""
    },
    "holsterCurrentItemOnAction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disableUIDisplay": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable display on UI"
    },
    "allowInteractionAtRecognitionRange": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "actionLocation": {
      "Item1": "ActionLocation",
      "Item2": false,
      "Item3": ""
    },
    "confirmActionLocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Check this against the room's action reference to continue using the passed reference."
    },
    "useRandomNodeSublocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then AI will pick a random sublocation if no other use position is specified; if false then it will tend to pick the default (centre) or closest sublocation"
    },
    "onUnableToFindLocation": {
      "Item1": "ActionFinding",
      "Item2": false,
      "Item3": "If unable to find a node location for this action, attempt to find one using 'nearest' fuction (can be expensive). If this isn't checked then the goal will be removed."
    },
    "searchSetting": {
      "Item1": "FindSetting",
      "Item2": false,
      "Item3": "Where to search when finding a location..."
    },
    "onUsePointBusy": {
      "Item1": "ActionBusy",
      "Item2": false,
      "Item3": "If the found use point is busy, do this..."
    },
    "usageSlot": {
      "Item1": "UsePointSlot",
      "Item2": false,
      "Item3": ""
    },
    "useCloseEnoughSetting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Consider this at the destination if we're close enough"
    },
    "robberyPriorityMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How much to factor in robbery priority when searching for location..."
    },
    "avoidRepeatingInteractables": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Avoid choosing repeating interactables as long as this goal exists..."
    },
    "filterSearchUsingRoomType": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Aids searching by filtering rooms types that this must be in..."
    },
    "searchRoomType": {
      "Item1": "RoomTypePreset",
      "Item2": true,
      "Item3": "Aids searching by filtering rooms types that this must be in..."
    },
    "limitSearchToGoalLocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Limit search to the goal's game location"
    },
    "findOverrideWithHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "When finding an action; Always use home as an option (even if above is true)"
    },
    "requiresTelephone": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use special availability settings: Address telephone with nobody answering"
    },
    "requiresTelephoneNoCall": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use special availability settings: Address telephone with no calls active"
    },
    "activationRequiresConsumable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Skip activation if there is no consumable to hand"
    },
    "bannedRooms": {
      "Item1": "SourceOfBannedRooms",
      "Item2": false,
      "Item3": "Pull banned rooms from here..."
    },
    "completableAction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this action will execute until it is interupted by something else"
    },
    "minutesTakenRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Time taken in minutes"
    },
    "completeOnSeeIllegal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Complete when AI has seen player do something illegal"
    },
    "repeatOnComplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, once complete, this action will create another instance of itself, effectively repeating"
    },
    "repeatWhileHavingConsumables": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Repeat while the citizen has consumable items..."
    },
    "requiresForcedUpdate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "AI controller will not be diabled on idle while this action is active if true"
    },
    "enableImmediateCompletionWhenFarAway": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dontUpdateGoalPriorityWhileActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Don't update the priority of other goals (apart from investigate) while this is active"
    },
    "dontUpdateGoalPriorityFor": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Don't update the priority of other goals (apart from investigate) for this long after the action has been started (minutes)"
    },
    "limitTickRate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true the tick rate can be no higher than below while performing this action"
    },
    "minimumTickRate": {
      "Item1": "AITickRate",
      "Item2": false,
      "Item3": ""
    },
    "maximumTickRate": {
      "Item1": "AITickRate",
      "Item2": false,
      "Item3": ""
    },
    "dontRemoveOnRefresh": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this action won't be removed upon goal's RefreshActions()"
    },
    "nonRefreshable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this action won't be replaced upon goal's RefreshActions()"
    },
    "useLOSCheck": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Once victim is in LOS, then stop"
    },
    "cancelIfNonValidMugging": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Cancel if target is not a valid mugging"
    },
    "cancelIfPlayerNotLoitering": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Cancel if player is not loitering"
    },
    "skipIfAIIsInState": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Skip creation of this action if the AI is in the following state..."
    },
    "skipIfReaction": {
      "Item1": "ReactionState",
      "Item2": false,
      "Item3": "Skip creation of this action if the AI is in the following state..."
    },
    "skipIfGuestPass": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Skip if the player has a guest pass to here"
    },
    "facing": {
      "Item1": "ActionFacingDirection",
      "Item2": false,
      "Item3": "Which way will this AI face when arrived at this action"
    },
    "lookAround": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the AI will look around randomly if they don't have a specific target"
    },
    "cancelIfPersuitTargetNotInRange": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If the persuit target isn't in range, cancel this action"
    },
    "facePlayerWhileTalkingTo": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Face player when interacting"
    },
    "changeIdleOnActivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "idleAnimationOnActivate": {
      "Item1": "IdleAnimationState",
      "Item2": false,
      "Item3": ""
    },
    "changeIdleOnArrival": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "idleAnimationOnArrival": {
      "Item1": "IdleAnimationState",
      "Item2": false,
      "Item3": ""
    },
    "changeIdleOnDeactivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "idleAnimationOnDeactivate": {
      "Item1": "IdleAnimationState",
      "Item2": false,
      "Item3": ""
    },
    "changeIdleOnComplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "idleAnimationOnComplete": {
      "Item1": "IdleAnimationState",
      "Item2": false,
      "Item3": ""
    },
    "changeArmsOnActivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "armsAnimationOnActivate": {
      "Item1": "ArmsBoolSate",
      "Item2": false,
      "Item3": ""
    },
    "changeArmsOnArrival": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "armsAnimationOnArrival": {
      "Item1": "ArmsBoolSate",
      "Item2": false,
      "Item3": ""
    },
    "changeArmsOnDeactivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "armsAnimationOnDeactivate": {
      "Item1": "ArmsBoolSate",
      "Item2": false,
      "Item3": ""
    },
    "changeArmsOnComplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "armsAnimationOnComplete": {
      "Item1": "ArmsBoolSate",
      "Item2": false,
      "Item3": ""
    },
    "lying": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Once destination is reached, tell the AI to lie down"
    },
    "lyingOnFloor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useCurrentConsumable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pull the below from the currently-held consumable item..."
    },
    "progressNourishment": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressHydration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressAlertness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressEnergy": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressExcitement": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressChores": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressHygeiene": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressBladder": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressHeat": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressDrunk": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressBreath": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "progressPoisoned": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "overtimeNourishment": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeHydration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeAlertness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeEnergy": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeExcitement": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeChores": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeHygiene": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeBladder": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeHeat": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeDrunk": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimeBreath": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "overtimePoison": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied over time"
    },
    "useInvestigationUrgency": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will use rules consistent with AI's investigate urgency state. If false and below is false, it will walk..."
    },
    "forceRun": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will use running only"
    },
    "runIfSeesPlayer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Will run if this citizen can see the player"
    },
    "socialRules": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will encourage using interactable with people I know and discourgage using them with people I don't. If this has a passed human interactable, I will save a space for them."
    },
    "spookAction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the AI will detect the player as suspicious while this is active"
    },
    "disableSightingUpdates": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable sighting updates while this action is active"
    },
    "attackPersuitTargetOnProximity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Attack the persuit target if they are close enough"
    },
    "throwObjectsAtTarget": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Throw current items if at suitable range"
    },
    "useCombatPose": {
      "Item1": "CombatPose",
      "Item2": false,
      "Item3": "Put the AI in combat pose"
    },
    "onlyUseCombatPoseWithEscalationOne": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "In addition to the above condition, only use combat pose when escalation of investiation is 1"
    },
    "sleepOnArrival": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Go to sleep OnComplete, wake up on end"
    },
    "uninteruptableWhileAtLocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This action is uninteruptable after destination has been reached (overrides the goal's interuption preset settings)"
    },
    "progressVmailThreads": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "While active, Vmail threads can be progressed"
    },
    "disableConversationTriggers": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, will disable casual conversation triggers while this is active"
    },
    "exitConversationOnActivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, will cancel any conversations when activated"
    },
    "forcedActive": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": "Interactable presets related to this furniture parent must stay swtiched on while this is active..."
    },
    "forcedActionsOnArrival": {
      "Item1": "AutomaticAction",
      "Item2": true,
      "Item3": "If AI, force perform these actions on the same object if they exist, if not integrated interactables on the same furniture will also be checked: On Arrival"
    },
    "forcedActionsOnComplete": {
      "Item1": "AutomaticAction",
      "Item2": true,
      "Item3": "If AI, force perform these actions on the same object if they exist, if not integrated interactables on the same furniture will also be checked: On End"
    },
    "forcedActionsSearchLevel": {
      "Item1": "ForcedActionsSearchLevel",
      "Item2": false,
      "Item3": "To complete the above actions, if AI cannot find the appropriate action on the immediate interactable, search this much..."
    },
    "executeCompleteActionsOnEnd": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Also execute the above actions if action is ended for any reason"
    },
    "executeCompleteActionsOnEndIfArrived": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only do the above if at location"
    },
    "executeThisOnComplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Automatically execute this action on complete (action controller script)"
    },
    "switchStatesOnEnd": {
      "Item1": "SwitchState",
      "Item2": true,
      "Item3": "Execute these switch state changes on end along with the above actions..."
    },
    "tamperAction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This action will trigger an interactable being illegally activated if a character tresspassing triggers it"
    },
    "tamperResetAction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This action will close/deactivate an illegally activated object (eg. turn off tv)"
    },
    "fallAsleepAfterMinimum": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If above is true then citizens can fall asleep after this time"
    },
    "allowSniperShot": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Special case: If this is the sniper killer, allow a sniper shot while this action is active"
    },
    "checkActionAgainstState": {
      "Item1": "CheckActionAgainstState",
      "Item2": true,
      "Item3": "On tick, check state of chosen interactable. If any of these match then cancel this action."
    },
    "forceReactionState": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Enable to force a reaction state once this action is activated. Will not switch it back once ended."
    },
    "setReactionState": {
      "Item1": "ReactionState",
      "Item2": false,
      "Item3": ""
    },
    "ignoreLockedDoors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Ignore door keys settings"
    },
    "breakDownDoors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Break down doors in my way!"
    },
    "doorsAllowed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "deactivateAllowed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "repeatDelayOnActionFail": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If use point is busy, delay goal from repeating for this time..."
    },
    "repeatDelayOnActionSuccess": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If interupted by a more important goal, delay goal from repeating for this time..."
    },
    "turnAllGamelocationLightsOff": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "When at the gamelocation, turn all lights off, excluding the destination room."
    },
    "overrideGoalLightRule": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyOverrideIfAtGamelocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "lightingBehaviour": {
      "Item1": "AILightingBehaviour",
      "Item2": true,
      "Item3": ""
    },
    "overrideGoalDoorRule": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "doorRule": {
      "Item1": "DoorRule",
      "Item2": false,
      "Item3": "Execute the closing of doors as below:"
    },
    "spawnTauntOnSuccess": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onArrivalSound": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "isLoop": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "soundDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "outdoorClothingCheck": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Check to see if we need outdoor clothes when 'make clothed' is enabled below..."
    },
    "specificOutfitOnActivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowedOutfitOnActivate": {
      "Item1": "OutfitCategory",
      "Item2": false,
      "Item3": ""
    },
    "makeClothedOnActivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If no specific outfit is required, make sure the citizen is at least clothed!"
    },
    "specificOutfitOnArrive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowedOutfitOnArrive": {
      "Item1": "OutfitCategory",
      "Item2": false,
      "Item3": ""
    },
    "makeClothedOnArrive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If no specific outfit is required, make sure the citizen is at least clothed!"
    },
    "specificOutfitOnDeactivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowedOutfitOnDeactivate": {
      "Item1": "OutfitCategory",
      "Item2": false,
      "Item3": ""
    },
    "makeClothedOnDeactivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If no specific outfit is required, make sure the citizen is at least clothed!"
    },
    "specificOutfitOnComplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowedOutfitOnComplete": {
      "Item1": "OutfitCategory",
      "Item2": false,
      "Item3": ""
    },
    "makeClothedOnComplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If no specific outfit is required, make sure the citizen is at least clothed!"
    },
    "setExpressionOnActivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "activateExpression": {
      "Item1": "Expression",
      "Item2": false,
      "Item3": ""
    },
    "setExpressionOnArrive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "arriveExpression": {
      "Item1": "Expression",
      "Item2": false,
      "Item3": ""
    },
    "setExpressionOnDeactivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "deactivateExpression": {
      "Item1": "Expression",
      "Item2": false,
      "Item3": ""
    },
    "setExpressionOnComplete": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "completeExpression": {
      "Item1": "Expression",
      "Item2": false,
      "Item3": ""
    },
    "allowItems": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow (any) items to be held during this action"
    },
    "enableCustomItem": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow a action-specific custom item to be held"
    },
    "itemRight": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": "Spawn this item in right hand"
    },
    "itemRightLocalPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "itemRightLocalEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "itemLeft": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": "Spawn this item in left hand"
    },
    "itemLeftLocalPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "itemLeftLocalEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "spawnCustomItemOn": {
      "Item1": "ActionStateFlag",
      "Item2": false,
      "Item3": ""
    },
    "destroyCustomItemOn": {
      "Item1": "ActionStateFlag",
      "Item2": false,
      "Item3": ""
    },
    "requiresCarryAnimation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this require a custom carrying animation?"
    },
    "overrideCarryAnimation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "dropItemOnEnd": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": "Drop this item on the floor when this action ends"
    },
    "chanceOfOnTrigger": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "onTriggerBark": {
      "Item1": "Bark",
      "Item2": true,
      "Item3": ""
    },
    "chanceOfWhileJourney": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "whileJourneyBark": {
      "Item1": "Bark",
      "Item2": true,
      "Item3": ""
    },
    "chanceOfOnArrival": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "onArrivalBark": {
      "Item1": "Bark",
      "Item2": true,
      "Item3": ""
    },
    "chanceOfWhileArrived": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "mustSeeOtherCitizen": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "whileArrivedBark": {
      "Item1": "Bark",
      "Item2": true,
      "Item3": ""
    },
    "chanceOfOnComplete": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "onCompleteBark": {
      "Item1": "Bark",
      "Item2": true,
      "Item3": ""
    }
  },
  "ActionLocation": {},
  "ActionFacingDirection": {},
  "ActionFinding": {},
  "ActionBusy": {},
  "FindSetting": {},
  "AISpeechPreset": {
    "dictionaryString": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "ddsMessageID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "isSuccessful": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "chance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useParsing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use parsing for special items in this string"
    },
    "shout": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "interupt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfEnfocerOnDuty": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfNotEnforcerOnDuty": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "mustFeatureTrait": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": "Must feature ANY of these character traits"
    },
    "cantFeatureTrait": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": "Can't feature ANY of these character traits"
    },
    "mustBeKillerWithMotive": {
      "Item1": "MurderMO",
      "Item2": true,
      "Item3": "Must be a killer and feature this motive"
    },
    "useMurderMOConfession": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will use the DDS reference from the killer's MO, if there is one. Make sure the dds message in this can be used as a fallback"
    },
    "tieKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "applyDiscovery": {
      "Item1": "Discovery",
      "Item2": true,
      "Item3": ""
    },
    "endsDialog": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "jobHandIn": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "startCombat": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "flee": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "giveUpSelf": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "AutomaticAction": {
    "forcedAction": {
      "Item1": "AIActionPreset",
      "Item2": false,
      "Item3": ""
    },
    "proximityCheck": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "additionalDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "SourceOfBannedRooms": {},
  "CombatPose": {},
  "ForcedActionsSearchLevel": {},
  "CheckActionAgainstState": {
    "switchState": {
      "Item1": "Switch",
      "Item2": false,
      "Item3": ""
    },
    "switchIs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "outcome": {
      "Item1": "CheckActionOutcome",
      "Item2": false,
      "Item3": ""
    }
  },
  "CheckActionOutcome": {},
  "DoorRule": {},
  "LightRule": {},
  "ActionStateFlag": {},
  "AIGoalPreset": {
    "startingGoal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true will be added to citizen upon creation"
    },
    "appliesTo": {
      "Item1": "StartingGoal",
      "Item2": false,
      "Item3": "Is this goal designed for..."
    },
    "appliedToTheseJobs": {
      "Item1": "OccupationPreset",
      "Item2": true,
      "Item3": ""
    },
    "onlyIfFeaturesItemsAtHome": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": "Valid if any of these items are found at home..."
    },
    "disableSave": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, don't save with game state"
    },
    "category": {
      "Item1": "GoalCategory",
      "Item2": false,
      "Item3": "A general category we can use to help goals interact with each other"
    },
    "basePriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The base priority"
    },
    "randomVariance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Random variance to add to the priority"
    },
    "minMaxPriority": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Clamp min/max priority"
    },
    "multiplyUsingTrashCarried": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Multiply base priority by amount of trash carried"
    },
    "useLateDebtPriority": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If the player owes debt then give this maximum priority"
    },
    "onlyImportantBetweenHours": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will only be ranked within the following hours"
    },
    "validBetweenHours": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "dontUpdateGoalPriorityWhileActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Don't update the priority of goals (apart from investigate) while this is active"
    },
    "forcePriorityUpdateOnCreation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Overrides all priority update rules when created"
    },
    "rainFactor": {
      "Item1": "RainFactor",
      "Item2": false,
      "Item3": "When raining, this acts as a multiplier"
    },
    "useMusic": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only important when music is playing in the room"
    },
    "useTrespassing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only important if this citizen is trespassing"
    },
    "affectPriorityOverTime": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Lose priority over time"
    },
    "multiplierModifierOverOneHour": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Over the course of one hour, add this to the overall priority multiplier"
    },
    "sniperVictimBoost": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Special case which boosts if this is the sniper victim and the sniper is ready and waiting"
    },
    "goalModifiers": {
      "Item1": "GoalModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "ifGoalsPresent": {
      "Item1": "AIGoalPreset",
      "Item2": true,
      "Item3": ""
    },
    "otherGoalPriorityModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useTiming": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "timingImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How important is timing to this goal? (Will add this much to overall if @ time)"
    },
    "earlyTimingWindow": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "When will the priority start being boosted: From this amount of time before trigger time"
    },
    "cancelIfLate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Cancel the goal if too late (below time)"
    },
    "cancelIfThisLate": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Cancel the goal if this late to execute"
    },
    "cancelAfterTime": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Cancel if this has been active for too long"
    },
    "cancelAfter": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Cancel the goal if it has been active for this time"
    },
    "runIfLate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Run if this citizen becomes late"
    },
    "nourishmentImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with hunger (inverse nourishment)"
    },
    "hydrationImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with thirst (inverse hydration)"
    },
    "alertnessImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with laziness (inverse altertness)"
    },
    "energyImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with tiredness (inverse energy)"
    },
    "excitementImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with bordem (inverse excitement)"
    },
    "choresImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with todo (inverse chores)"
    },
    "hygieneImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with dirtiness (inverse hygiene)"
    },
    "bladderImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with loo (inverse bladder)"
    },
    "heatImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with need for heat (inverse heat)"
    },
    "drunkImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with need for heat (inverse heat)"
    },
    "breathImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority with need for breath"
    },
    "poisonImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority when poisioned"
    },
    "blindedImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Increases priority when blinded"
    },
    "completable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This goal will be removed when all actions have been completed"
    },
    "loopingActions": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "When actions are completed, restart the above list"
    },
    "interuptable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If false this action cannot be interupted once started"
    },
    "unteruptableByFollowingCategories": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "uninteruptableByCategories": {
      "Item1": "GoalCategory",
      "Item2": true,
      "Item3": ""
    },
    "useInteruptionThreshold": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this action will use this threshold before it is interupted"
    },
    "interuptionThreshold": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Other goals will have to reach this much above the current priority before this one is interupted..."
    },
    "repeatDelayOnBusy": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If use point is busy, delay goal from repeating for this time..."
    },
    "repeatDelayOnInterupt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If interupted by a more important goal, delay goal from repeating for this time..."
    },
    "repeatDelayOnFinishActions": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If no actions left, delay goal from repeating for this time..."
    },
    "allowEnforcersEverywhere": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If enabled, enforcers on duty will be allowed everywhere to execute this action."
    },
    "locationOption": {
      "Item1": "LocationOption",
      "Item2": false,
      "Item3": ""
    },
    "useToiletSettings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "desireCategory": {
      "Item1": "CompanyCategory",
      "Item2": false,
      "Item3": ""
    },
    "roomOption": {
      "Item1": "RoomOption",
      "Item2": false,
      "Item3": ""
    },
    "furnitureOption": {
      "Item1": "FurnitureOption",
      "Item2": false,
      "Item3": ""
    },
    "actionFoundRoomBecomesPassedRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "passedGamelocationIsImportant": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this goal will not be active if the actions are not at the passed gamelocation"
    },
    "actionSource": {
      "Item1": "GoalActionSource",
      "Item2": false,
      "Item3": "Where should this goal get the actions from?"
    },
    "actionsSetup": {
      "Item1": "GoalActionSetup",
      "Item2": true,
      "Item3": ""
    },
    "raiseAlarm": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Potentially raise alarm if certain conditions are met."
    },
    "allowTrespass": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow AI to trespass while performing this goal"
    },
    "disableActionInsertions": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable all action insertions during this goal"
    },
    "trashConsumablesOnActivate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Send consumables to trash on activation"
    },
    "disableThrowing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable the ability to throw objects in combat for this goal"
    },
    "diabledMugging": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable trigger to mugging if this goal is active"
    },
    "allowPottering": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pottering: Occasionally the AI will insert one of these actions into the goal."
    },
    "potterSource": {
      "Item1": "GoalActionSource",
      "Item2": false,
      "Item3": ""
    },
    "potterFrequency": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "How often the AI 'potters'. Can be overridden by the above setting"
    },
    "potterActions": {
      "Item1": "AIActionPreset",
      "Item2": true,
      "Item3": ""
    },
    "overrideLightingBehaviour": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Override the location's lighting behaviour"
    },
    "onlyOverrideIfAtGamelocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "lightingBehaviour": {
      "Item1": "AILightingBehaviour",
      "Item2": true,
      "Item3": ""
    },
    "doorRule": {
      "Item1": "DoorRule",
      "Item2": false,
      "Item3": "Execute the closing of doors as below:"
    },
    "chanceOfOnTrigger": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "onTriggerBark": {
      "Item1": "Bark",
      "Item2": true,
      "Item3": ""
    }
  },
  "GoalCategory": {},
  "StartingGoal": {},
  "RainFactor": {},
  "GoalModifierRule": {
    "rule": {
      "Item1": "RuleType",
      "Item2": false,
      "Item3": ""
    },
    "traitList": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "mustPassForApplication": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this isn't true then it won't be picked for application at all."
    },
    "priorityMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Add this to a default priority multiplier of 1."
    }
  },
  "LocationOption": {},
  "RoomOption": {},
  "FurnitureOption": {},
  "GoalActionSetup": {
    "actions": {
      "Item1": "AIActionPreset",
      "Item2": true,
      "Item3": ""
    },
    "condition": {
      "Item1": "ActionCondition",
      "Item2": false,
      "Item3": ""
    },
    "chance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "traitModifiers": {
      "Item1": "GoalModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "statusModifiers": {
      "Item1": "StatusModifierRule",
      "Item2": true,
      "Item3": ""
    }
  },
  "StatusModifierRule": {
    "status": {
      "Item1": "StatusType",
      "Item2": false,
      "Item3": ""
    },
    "condition": {
      "Item1": "StatusCondition",
      "Item2": false,
      "Item3": ""
    },
    "value": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "chanceModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "StatusType": {},
  "StatusCondition": {},
  "ActionCondition": {},
  "GoalActionSource": {},
  "AmbientZone": {
    "mainEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "useOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this zone can be active and heard outside of the assigned room."
    },
    "maxRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "canPenetrateClosedDoors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this sound can penetrate closed doors"
    },
    "overrideOcclusionModifier": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Overrides default occlusion value sound in the audio controller"
    },
    "occlusionUnitVolumeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Each occlusion unit will decrease volume by this amount..."
    },
    "isAirDuctAmbience": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "passTimeOfDay": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass time of day"
    },
    "passWalla": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass walla amount"
    },
    "passPlayerInVent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass player in vent"
    },
    "passPlayerVentExtInt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass player vent ext/int"
    },
    "passDistanceToVent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass the player's distance to the nearest vent"
    },
    "passRain": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass rain"
    },
    "passBasement": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass basement"
    },
    "passHeightWindSpeed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass combination of height and wind speed"
    },
    "passEdgeDistance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass city edge distance"
    },
    "maxWallaRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The range to sample crowds"
    },
    "maxWallaCrowd": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The number of people present per node for maximum walla"
    }
  },
  "ArtPreset": {
    "disable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "texturePreview": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "material": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "orientationCompatibility": {
      "Item1": "ArtOrientation",
      "Item2": true,
      "Item3": ""
    },
    "pixelScaleMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "allowInResidential": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowInCommerical": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowInLobby": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowOnStreet": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "basePriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "colourMatching": {
      "Item1": "Color",
      "Item2": true,
      "Item3": "used to match with room colour scheme"
    },
    "colourMatchingScale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "minimumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maximumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "roomMatchingScale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "modernity": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "0 = old fashioned/conservative, 1 = modern/liberal: Driven by the design style"
    },
    "cleanness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "0 = informal/cosy, 1 = clean/souless: Driven by the room type."
    },
    "loudness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "0 = understated/quiet, 1 = loud/bold: Driven by the owner's personality"
    },
    "emotive": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "0 = cold/hard, 1 = warm/sensitive: Driven by the owner's personality"
    },
    "mustRequireTraitFromBelow": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "traitModifiers": {
      "Item1": "ArtPreference",
      "Item2": true,
      "Item3": ""
    },
    "useDynamicText": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dynamicTextSource": {
      "Item1": "DynamicTextSouce",
      "Item2": false,
      "Item3": ""
    },
    "textFont": {
      "Item1": "TMP_FontAsset",
      "Item2": false,
      "Item3": ""
    },
    "textColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "textSize": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "ArtOrientation": {},
  "ArtPreference": {
    "trait": {
      "Item1": "CharacterTrait",
      "Item2": false,
      "Item3": ""
    },
    "modifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "DynamicTextSouce": {},
  "AudioEvent": {
    "guid": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Paste the GUID from FMOD in here. Curly braces will be removed."
    },
    "disableOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If enabled, this sound's occlusion will never be checked"
    },
    "debug": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If enabled, this will print out debug info in the console"
    },
    "isDummyEvent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If enabled, this run the sound through the occlusion and AI checks without physically playing it"
    },
    "isLicensed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a licensed music track?"
    },
    "pauseWhenGameIsPaused": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable this in-game completely."
    },
    "canPenetrateWalls": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this sound can penetrate walls"
    },
    "canPenetrateFloors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this sound can penetrate floors"
    },
    "canPenetrateCeilings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this sound can penetrate cielings"
    },
    "overrideMaximumLoops": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overriddenMaxLoops": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideOcclusionModifier": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Overrides default occlusion value sound in the audio controller"
    },
    "occlusionUnitVolumeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Each occlusion unit will decrease volume by this amount..."
    },
    "overrideOpenDoorOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "openDoorOcclusionUnits": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideClosedDoorOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "closedDoorOcclusionUnits": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideWindowOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "windowOcclusionUnits": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideWallOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "wallOcclusionUnits": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideCeilingOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ceilingOcclusionUnits": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideFloorOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "floorOcclusionUnits": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "forceVolumeLevelFadeTime": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "On updated occlusion, force the volume to change level at a specific rate (seconds)"
    },
    "volumeLevelFadeTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "canBeSuspicious": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can this audio trigger an AI reaction?"
    },
    "alwaysSuspicious": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This event will by default trigger an AI reaction"
    },
    "suspiciousIfTresspassing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This event will only trigger an AI reaction if 1) The actor is trespassing and 2) The listener is allowed to go there without trespassing."
    },
    "suspiciousIfCantSeeSoundMaker": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlySuspiciousIfEmptyAddress": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This event will only trigger an AI reaction if the address is empty apart from the player and the following number of people"
    },
    "onlySuspiciousIfNotEnforcer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only suspicious if not caused by an enforcer"
    },
    "suspiciousIfCitizenCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "urgentResponse": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this event is urgency (eg gunshot), AI will immediately run for investiation"
    },
    "audioFocus": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "AI hearing this event triggers this amount of audio focus. 1 Will mean they investigate immediately, any less will be added within their focus window..."
    },
    "forceOutlineForLoopIfPlayerTrespassing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Force this to display a red outline if this loop is heard by the player"
    },
    "citizenMemoryTag": {
      "Item1": "MemoryTag",
      "Item2": false,
      "Item3": ""
    },
    "spookValue": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Will citizens get scared by this?"
    },
    "noSpookIfEnforcer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Enforcers do not get scared by this"
    },
    "awakenChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If the AI is asleep, how likely is it that they awaken upon hearing this? (Only works in conjunction with suspicious sounds)"
    },
    "actualSoundRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The actual sound range set in FMOD."
    },
    "hearingRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The effective sound range that the AI can hear (applied to actual sound range above)"
    },
    "stealthModeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If in stealth mode, also apply the following modifier to the hearing range..."
    },
    "runModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If running apply the following modifier to the hearing range..."
    },
    "canDanceTo": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can the AI dance to this?"
    },
    "masterVolumeScale": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "modifyBasedOnSurface": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then the AI 'sound level' above is overridden based on surface type. Important: Only works for footsteps!"
    },
    "concreteHearingRangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "woodHearingRangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "carpetHearingRangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "tileHearingRangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "plasterHearingRangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fabricHearingRangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "metalHearingRangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "glassHearingRangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "enableVibrationOnPlay": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disableForPS5": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "vibrationSetup": {
      "Item1": "ControllerVibration",
      "Item2": true,
      "Item3": ""
    }
  },
  "MemoryTag": {},
  "BasebouleGameAdvert": {
    "adText": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "BasebouleGameIntro": {
    "introductionText": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "BasebouleGameIntroClosingStatement": {
    "closingText": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "BasebouleGameLineUpFollowUp": {
    "followUpText": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "BasebouleInning": {},
  "BaseboulePlayer": {
    "firstName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "surName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "playerSkill": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "funFact": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "Experience": {},
  "Position": {},
  "BasebouleTeam": {
    "teamName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "teamIntroductionWhenFirstInLineUp": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "teamIntroductionWhenSecondInLineUp": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "roster": {
      "Item1": "BaseboulePlayer",
      "Item2": true,
      "Item3": ""
    }
  },
  "BookPreset": {
    "bookName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "author": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "genre": {
      "Item1": "BookGenre",
      "Item2": true,
      "Item3": ""
    },
    "isSeries": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this part of a series?"
    },
    "seriesTag": {
      "Item1": "BookSeries",
      "Item2": false,
      "Item3": ""
    },
    "seriesNumber": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "common": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How common this book is"
    },
    "baseChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How likely anyone is to own this..."
    },
    "pickRules": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": ""
    },
    "spawnRule": {
      "Item1": "SpawnRules",
      "Item2": false,
      "Item3": "Rules for spawning this (when not on shelf)."
    },
    "bookMesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": ""
    },
    "bookMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "ddsMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Where the text is located in the DDS editor"
    }
  },
  "BookGenre": {},
  "BookSeries": {},
  "SpawnRules": {},
  "BroadcastPreset": {
    "audioEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "changeImageEvery": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Change image every x seconds (real time)"
    },
    "order": {
      "Item1": "ImageOrder",
      "Item2": false,
      "Item3": "What order these images display in"
    },
    "endOfShowTrigger": {
      "Item1": "EndOfShow",
      "Item2": false,
      "Item3": ""
    },
    "spriteSheet": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "spriteResolution": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "indexWidth": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "indexHeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "totalSpriteCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useDynamicClips": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dynamicClips": {
      "Item1": "DynamicClip",
      "Item2": true,
      "Item3": ""
    }
  },
  "ImageOrder": {},
  "EndOfShow": {},
  "DynamicClip": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "chance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "possibleEvents": {
      "Item1": "DynamicClipEvent",
      "Item2": true,
      "Item3": ""
    },
    "followingDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "nextMode": {
      "Item1": "FollowingIndexMode",
      "Item2": false,
      "Item3": ""
    },
    "nextIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "onFailToGetEvent": {
      "Item1": "FollowingIndexMode",
      "Item2": false,
      "Item3": ""
    },
    "onFailIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "DynamicClipEvent": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "conditionMode": {
      "Item1": "ConditionMode",
      "Item2": false,
      "Item3": ""
    },
    "OrConditions": {
      "Item1": "DynamicShowCondition",
      "Item2": true,
      "Item3": ""
    },
    "audioEvents": {
      "Item1": "AudioEvent",
      "Item2": true,
      "Item3": ""
    },
    "applyParameters": {
      "Item1": "DynamicShowParam",
      "Item2": true,
      "Item3": ""
    },
    "overrideCrowdNoiseParam": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "crowdLayerVolume": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "triggerCrowdReaction": {
      "Item1": "CrowdReaction",
      "Item2": false,
      "Item3": ""
    }
  },
  "DynamicShowCondition": {
    "condition": {
      "Item1": "DynamicConditionType",
      "Item2": false,
      "Item3": ""
    },
    "parametersList": {
      "Item1": "DynamicShowParam",
      "Item2": true,
      "Item3": ""
    }
  },
  "DynamicConditionType": {},
  "DynamicShowParam": {
    "paramType": {
      "Item1": "ShowParamType",
      "Item2": false,
      "Item3": ""
    },
    "applicationMode": {
      "Item1": "ParamApplicationMode",
      "Item2": false,
      "Item3": ""
    },
    "value": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "ShowParamType": {},
  "ConditionMode": {},
  "CrowdReaction": {},
  "ParamApplicationMode": {},
  "FollowingIndexMode": {},
  "BroadcastSchedule": {
    "broadcasts": {
      "Item1": "BroadcastPreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "BuildingPreset": {
    "disable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "prefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": "Reference to the building model prefab"
    },
    "emissionMapUnlit": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": "The emission texture used to light up windows on this model (unlit)"
    },
    "emissionMapLit": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": "The emission texture used to light up windows on this model (lit)"
    },
    "buildingHeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The height of this building"
    },
    "lightningRodLocalPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "The local position of the lightning rod"
    },
    "defaultExteriorWallMaterial": {
      "Item1": "MaterialGroupPreset",
      "Item2": true,
      "Item3": "The material to use on default walls. Leave blank to use default (brick)"
    },
    "exteriorKey": {
      "Item1": "MaterialKey",
      "Item2": false,
      "Item3": "The material key to use on the exterior of the building"
    },
    "enableAlleywayWalls": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Check if this building supports alley blocks"
    },
    "enableExteriorQuoins": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow this building to feature quoins"
    },
    "overrideEvidencePhotoSettings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "relativeCamPhotoPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "relativeCamPhotoEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "overrideDistrictEnvironment": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sceneProfile": {
      "Item1": "SceneProfile",
      "Item2": false,
      "Item3": ""
    },
    "maxLostAndFound": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The max amount of lost and found items to spawn at one time"
    },
    "floorLayouts": {
      "Item1": "InteriorFloorSetting",
      "Item2": true,
      "Item3": "The layouts of above-ground floors, starting with ground floor"
    },
    "basementLayouts": {
      "Item1": "InteriorFloorSetting",
      "Item2": true,
      "Item3": "The layouts of below-ground floors, starting with basement level 1"
    },
    "controlRoomRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "How many control rooms should this building feature?"
    },
    "forceBuildingDesignStyles": {
      "Item1": "DesignStylePreset",
      "Item2": true,
      "Item3": ""
    },
    "stairwellRegular": {
      "Item1": "StairwellPreset",
      "Item2": false,
      "Item3": ""
    },
    "stairwellLarge": {
      "Item1": "StairwellPreset",
      "Item2": false,
      "Item3": ""
    },
    "buildingFeaturesEchelonFloors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "echelonFloorStart": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideGrubiness": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "grubinessOverride": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "displayedZone": {
      "Item1": "ZoneType",
      "Item2": false,
      "Item3": ""
    },
    "allowedInAllDistricts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowedInDistricts": {
      "Item1": "DistrictPreset",
      "Item2": true,
      "Item3": "Appears in this district"
    },
    "densityMinimum": {
      "Item1": "Density",
      "Item2": false,
      "Item3": "Appears in density range: Not required but choices will be weighted towards this"
    },
    "densityMaximum": {
      "Item1": "Density",
      "Item2": false,
      "Item3": ""
    },
    "landValueMinimum": {
      "Item1": "LandValue",
      "Item2": false,
      "Item3": "Appears in land value range: Not required but choices will be weighted towards this"
    },
    "landValueMaximum": {
      "Item1": "LandValue",
      "Item2": false,
      "Item3": ""
    },
    "minimum": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Try and make sure the city has at least this many buildings of this type"
    },
    "featureImportance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How important is it that the city features the above minimum amount of buildings?"
    },
    "hardLimit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Hard limit on the number of buildings per city"
    },
    "desiredRatio": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Desired ratio on the number of these buildings (1 means the whole city can be these)"
    },
    "modernity": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Modernity: Used to choose decor- how modern the building is"
    },
    "lobbyPreset": {
      "Item1": "AddressPreset",
      "Item2": false,
      "Item3": "Used in choosing decor: The lobby area room type"
    },
    "nonEnterable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "True if this is supposed to not have floors"
    },
    "boundary": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "True if this is a boundary piece"
    },
    "boundaryCorner": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "True if this is a boundary corner piece"
    },
    "overrideNaming": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "possibleNames": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "customDrawOnMap": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "tex": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "captureMesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": "The mesh to use to find the window coordinates, cable coordinates"
    },
    "windowMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": "A map with white blocks mapping the window areas: IMPORTANT: Make sure texture image compression is off & read/write is on."
    },
    "addonMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": "A map with red pixels for cable connections and green for external signage: IMPORTANT: Make sure texture image compression is off & read/write is on."
    },
    "sortedWindows": {
      "Item1": "WindowUVFloor",
      "Item2": true,
      "Item3": ""
    },
    "floorCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "meshHeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "cableLinkPoints": {
      "Item1": "CableLinkPoint",
      "Item2": true,
      "Item3": ""
    },
    "cableSpawnChanceOverHeight": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "sideSignPoints": {
      "Item1": "CableLinkPoint",
      "Item2": true,
      "Item3": ""
    },
    "possibleNeonSigns": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "signsPerBuildingRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "horizontalSignOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Offset for horizontal lettering signs"
    },
    "featuresSmokestack": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "spawnInterval": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Interval in gametime"
    },
    "spritePrefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "spawnOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "offsetArrayX4": {
      "Item1": "Vector2",
      "Item2": true,
      "Item3": ""
    }
  },
  "Density": {},
  "LandValue": {},
  "InteriorFloorSetting": {
    "floorsWithThisSetting": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "This setting will appear for x floors"
    },
    "blueprints": {
      "Item1": "TextAsset",
      "Item2": true,
      "Item3": "Possible floor presets (choose at random)"
    },
    "airVentMaximumExtrusion": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How far air vents are allowed to extrude from the outer wall of the building (0 if none)"
    },
    "controlRoomVariants": {
      "Item1": "TextAsset",
      "Item2": true,
      "Item3": "Possible floor variants featuring control rooms (choose at random)"
    },
    "forceShowModel": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Forces the main building model to be visible on this floor"
    },
    "forceHideModels": {
      "Item1": "String",
      "Item2": true,
      "Item3": "When player is on this floor, force these model parents to be hidden"
    },
    "forceHideModelsInRooms": {
      "Item1": "ForceHideModelsForRoom",
      "Item2": true,
      "Item3": "When the player is on this floor, in this specific room type, force this model parents to be hidden (overrides outside rooms)"
    },
    "forceHideModelsOutside": {
      "Item1": "String",
      "Item2": true,
      "Item3": "When the player is outside on this floor, force this model parents to be hidden"
    },
    "overrideCeilingHeight": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "newCeilingHeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ForceHideModelsForRoom": {
    "roomConfig": {
      "Item1": "RoomConfiguration",
      "Item2": false,
      "Item3": ""
    },
    "forceHideModels": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    }
  },
  "ZoneType": {},
  "CableLinkPoint": {},
  "WindowUVFloor": {
    "front": {
      "Item1": "WindowUVBlock",
      "Item2": true,
      "Item3": ""
    },
    "back": {
      "Item1": "WindowUVBlock",
      "Item2": true,
      "Item3": ""
    },
    "left": {
      "Item1": "WindowUVBlock",
      "Item2": true,
      "Item3": ""
    },
    "right": {
      "Item1": "WindowUVBlock",
      "Item2": true,
      "Item3": ""
    }
  },
  "WindowUVBlock": {
    "originPixel": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "rectSize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "centrePixel": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "localMeshPositionLeft": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "localMeshPositionRight": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "floor": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "side": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "horizonal": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ChapterPreset": {
    "chapterNumber": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The number of the chapter. This must be exclusive."
    },
    "scriptObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": "The prefab that contains the logic for this chapter"
    },
    "dictionary": {
      "Item1": "String",
      "Item2": false,
      "Item3": "The chapter script reference"
    },
    "askToEnableTutorial": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Ask to enable the tutorial if this chapter is played."
    },
    "startingHour": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "startingDate": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "startingMonth": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "startingYear": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "yearZeroLeapYearCycle": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "dayZero": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "rainAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "windAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "snowAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fogAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "lightningAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "transitionSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "usePreSimulation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Simulate at fast forward until a certain point (dictated manually)"
    },
    "minimumPreSimLength": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The minimum amount of time to pre-simulate"
    },
    "audioEvents": {
      "Item1": "AudioEvent",
      "Item2": true,
      "Item3": ""
    },
    "dialogEvents": {
      "Item1": "DialogPreset",
      "Item2": true,
      "Item3": ""
    },
    "crimePool": {
      "Item1": "MurderPreset",
      "Item2": true,
      "Item3": ""
    },
    "MOPool": {
      "Item1": "MurderMO",
      "Item2": true,
      "Item3": ""
    },
    "partNames": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Included mostly for reference: You can use the chapter controller to switch between these."
    },
    "startingPart": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The part to load when the chapter is loaded. You can use this to skip parts for testing."
    }
  },
  "CharacterTrait": {
    "isTrait": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this is a trait that can be picked, if false, this is a 'reason'."
    },
    "needsReson": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, a 'reason' trait will be immediately picked to accompany this trait"
    },
    "requiresPartner": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this trait requires a partner"
    },
    "requiresSingle": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this trait requires NO partner"
    },
    "requiresHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this trait requires a citizen to have a home"
    },
    "requiresEmployment": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this trait requires a job"
    },
    "needsDate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this needs a date"
    },
    "featureInInterestPool": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Appears in the 'random interest' pool when acquiring information on the citizen."
    },
    "featureInAfflictionPool": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Appears in the 'random affliction' pool when acquiring information on the citizen."
    },
    "ageDateRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "This event happened when their age was..."
    },
    "useCouplesAnniversary": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use couples anniversary date"
    },
    "isPassword": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This is a password (special case)"
    },
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disabled from being assigned automatically"
    },
    "postiveNegative": {
      "Item1": "PosNeg",
      "Item2": false,
      "Item3": "Is this considered a positive/neutral/negative trait?"
    },
    "pickStage": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "When is this anylised to see if it is picked or not? 0 = first, 2 = last"
    },
    "primeBaseChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance of assigning this trait completely at random on citizen creation"
    },
    "pickRules": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": ""
    },
    "matchChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Importance of matching this to base HEXACO personality. This is added to the base chance of either prime or secondary."
    },
    "useHumilityMatch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "matchHumility": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Honesty-Humility (H): sincere, honest, faithful, loyal, modest/unassuming versus sly, deceitful, greedy, pretentious, hypocritical, boastful, pompous"
    },
    "useEmotionalityMatch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "matchEmotionality": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Emotionality (E): emotional, oversensitive, sentimental, fearful, anxious, vulnerable versus brave, tough, independent, self-assured, stable"
    },
    "useExtraversionMatch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "matchExtraversion": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Extraversion (X): outgoing, lively, extraverted, sociable, talkative, cheerful, active versus shy, passive, withdrawn, introverted, quiet, reserved"
    },
    "useAgreeablenessMatch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "matchAgreeableness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Agreeableness (A): patient, tolerant, peaceful, mild, agreeable, lenient, gentle versus ill-tempered, quarrelsome, stubborn, choleric"
    },
    "useConscientiousnessMatch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "matchConscientiousness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Conscientiousness (C): organized, disciplined, diligent, careful, thorough, precise versus sloppy, negligent, reckless, lazy, irresponsible, absent-minded"
    },
    "useCreativityMatch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "matchCreativity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Openness to Experience (O): intellectual, creative, unconventional, innovative, ironic versus shallow, unimaginative, conventional"
    },
    "useSocietalClassMatch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "matchSocietalClass": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "effectHumility": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Honesty-Humility (H): sincere, honest, faithful, loyal, modest/unassuming versus sly, deceitful, greedy, pretentious, hypocritical, boastful, pompous"
    },
    "effectEmotionality": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Emotionality (E): emotional, oversensitive, sentimental, fearful, anxious, vulnerable versus brave, tough, independent, self-assured, stable"
    },
    "effectExtraversion": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Extraversion (X): outgoing, lively, extraverted, sociable, talkative, cheerful, active versus shy, passive, withdrawn, introverted, quiet, reserved"
    },
    "effectAgreeableness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Agreeableness (A): patient, tolerant, peaceful, mild, agreeable, lenient, gentle versus ill-tempered, quarrelsome, stubborn, choleric"
    },
    "effectConscientiousness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Conscientiousness (C): organized, disciplined, diligent, careful, thorough, precise versus sloppy, negligent, reckless, lazy, irresponsible, absent-minded"
    },
    "effectCreativity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Openness to Experience (O): intellectual, creative, unconventional, innovative, ironic versus shallow, unimaginative, conventional"
    },
    "maxHealthModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "recoveryRateModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "combatSkillModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "combatHeftModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maxNerveModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "breathRecoveryModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "limitHumility": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Honesty-Humility (H): sincere, honest, faithful, loyal, modest/unassuming versus sly, deceitful, greedy, pretentious, hypocritical, boastful, pompous"
    },
    "limitEmotionality": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Emotionality (E): emotional, oversensitive, sentimental, fearful, anxious, vulnerable versus brave, tough, independent, self-assured, stable"
    },
    "limitExtraversion": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Extraversion (X): outgoing, lively, extraverted, sociable, talkative, cheerful, active versus shy, passive, withdrawn, introverted, quiet, reserved"
    },
    "limitAgreeableness": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Agreeableness (A): patient, tolerant, peaceful, mild, agreeable, lenient, gentle versus ill-tempered, quarrelsome, stubborn, choleric"
    },
    "limitConscientiousness": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Conscientiousness (C): organized, disciplined, diligent, careful, thorough, precise versus sloppy, negligent, reckless, lazy, irresponsible, absent-minded"
    },
    "limitCreativity": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Openness to Experience (O): intellectual, creative, unconventional, innovative, ironic versus shallow, unimaginative, conventional"
    },
    "slangUsageModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Affect the slang usage..."
    },
    "slangGreetingDefault": {
      "Item1": "String",
      "Item2": true,
      "Item3": "A default slang greeting to be used on anyone in a casual manor"
    },
    "slangGreetingMale": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Similar to above, but male specific (eg. 'bro')"
    },
    "slangGreetingFemale": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Similar to above, but female specific"
    },
    "slangGreetingLover": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Slang greeting for a lover"
    },
    "slangCurse": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Slang curse words"
    },
    "slangCurseNoun": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Slang cursing noun word"
    },
    "slangPraiseNoun": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Slang praising noun word"
    },
    "preferredBookCountModifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Does this affect the number of books this person should have?"
    },
    "sightingLimitMemoryModifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "PosNeg": {},
  "RuleType": {},
  "TraitPickRule": {
    "rule": {
      "Item1": "RuleType",
      "Item2": false,
      "Item3": ""
    },
    "traitList": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "mustPassForApplication": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this isn't true then it won't be picked for application at all."
    },
    "addChance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If the rules match, then apply this to the base chance..."
    }
  },
  "SpecialItemPlacementRule": {
    "preset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "chance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "ClothesPreset": {
    "covers": {
      "Item1": "CharacterAnchor",
      "Item2": true,
      "Item3": "Covers these components: If an anchor here is NOT covered by this outfit, it will look for other elements in outfits."
    },
    "outfitCategories": {
      "Item1": "OutfitCategory",
      "Item2": true,
      "Item3": ""
    },
    "suitableForGenders": {
      "Item1": "Gender",
      "Item2": true,
      "Item3": ""
    },
    "suitableForBuilds": {
      "Item1": "BuildType",
      "Item2": true,
      "Item3": ""
    },
    "tags": {
      "Item1": "ClothesTags",
      "Item2": true,
      "Item3": ""
    },
    "enableFacialFeatureSetup": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true enable facial-feature specific setup"
    },
    "suitableForHairstyle": {
      "Item1": "HairStyle",
      "Item2": true,
      "Item3": ""
    },
    "isHead": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pupilsOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "eyebrowsOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "mouthOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "hatRenderCompatible": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This needs to be true for the game to render both the hair and hat"
    },
    "excludeHats": {
      "Item1": "ClothesPreset",
      "Item2": true,
      "Item3": "Exclude these types of hats from compatibility..."
    },
    "hairRenderMode": {
      "Item1": "HairRenderSetting",
      "Item2": false,
      "Item3": ""
    },
    "setFootwear": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "footwear": {
      "Item1": "ShoeType",
      "Item2": false,
      "Item3": ""
    },
    "priority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Controls which clothing will be loaded first. If this is important to the outfit, eg wearing a coat outdoors, increase the priority."
    },
    "onlyChooseIfAllModelPartsAreAvailable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only choose this preset if the model can display all elements in the 'models' section below. Only applies when using clothing elements not from the category (eg using casual for outdoors casual)"
    },
    "incompatibility": {
      "Item1": "IncompatibilitySetting",
      "Item2": true,
      "Item3": "This cannot be chosen if these existing clothes are chosen"
    },
    "useWealthValues": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The citizen/company must have at least this much wealth to have this outfit"
    },
    "minimumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maximumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "baseColourSource": {
      "Item1": "ClothingColourSource",
      "Item2": false,
      "Item3": ""
    },
    "colourBase": {
      "Item1": "ColourPalettePreset",
      "Item2": true,
      "Item3": ""
    },
    "colour1Source": {
      "Item1": "ClothingColourSource",
      "Item2": false,
      "Item3": ""
    },
    "colour1": {
      "Item1": "ColourPalettePreset",
      "Item2": true,
      "Item3": ""
    },
    "colour2Source": {
      "Item1": "ClothingColourSource",
      "Item2": false,
      "Item3": ""
    },
    "colour2": {
      "Item1": "ColourPalettePreset",
      "Item2": true,
      "Item3": ""
    },
    "colour3Source": {
      "Item1": "ClothingColourSource",
      "Item2": false,
      "Item3": ""
    },
    "colour3": {
      "Item1": "ColourPalettePreset",
      "Item2": true,
      "Item3": ""
    },
    "includeInPersonalityMatching": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Include this when using citizen stats to pick a style"
    },
    "baseChance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The base chance of selecting this item of clothing. This is added to by HEXACO and Traits below..."
    },
    "useHEXACO": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use the below hexaco values to match to personality."
    },
    "hexaco": {
      "Item1": "HEXACO",
      "Item2": false,
      "Item3": ""
    },
    "useTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use character traits to match to personality."
    },
    "characterTraits": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": ""
    },
    "models": {
      "Item1": "ModelSettings",
      "Item2": true,
      "Item3": ""
    }
  },
  "MaterialSettings": {
    "designStyle": {
      "Item1": "DesignStylePreset",
      "Item2": false,
      "Item3": ""
    },
    "weighting": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ModelSettings": {
    "prefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "anchor": {
      "Item1": "CharacterAnchor",
      "Item2": false,
      "Item3": ""
    },
    "offsetPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "offsetEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "exclusiveAnchorModel": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "OutfitCategory": {},
  "ClothingColourSource": {},
  "ClothesTags": {},
  "HairRenderSetting": {},
  "Incompatibility": {},
  "IncompatibilitySetting": {
    "incompatibleIf": {
      "Item1": "Incompatibility",
      "Item2": false,
      "Item3": ""
    },
    "tags": {
      "Item1": "ClothesTags",
      "Item2": true,
      "Item3": ""
    },
    "featured": {
      "Item1": "ClothesPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "CloudSaveData": {
    "path": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Path to dropbox save folder"
    }
  },
  "ColourPalettePreset": {
    "colours": {
      "Item1": "MaterialSettings",
      "Item2": true,
      "Item3": ""
    },
    "hexaco": {
      "Item1": "HEXACO",
      "Item2": false,
      "Item3": ""
    }
  },
  "ColourSchemePreset": {
    "primary1": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "secondary1": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "neutral": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "secondary2": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "primary2": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "modernity": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "0 = old fashioned/conservative, 1 = modern/liberal: Driven by the design style"
    },
    "cleanness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "0 = informal/cosy, 1 = clean/souless: Driven by the room type."
    },
    "loudness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "0 = understated/quiet, 1 = loud/bold: Driven by the owner's personality"
    },
    "emotive": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "0 = cold/hard, 1 = warm/sensitive: Driven by the owner's personality"
    }
  },
  "CompanyOpenHoursPreset": {
    "retailOpenHours": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Hours of retail opening hours"
    },
    "monday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "tuesday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "wednesday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "thursday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "friday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "saturday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sunday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shifts": {
      "Item1": "CompanyShift",
      "Item2": true,
      "Item3": ""
    }
  },
  "CompanyShift": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "shiftType": {
      "Item1": "ShiftType",
      "Item2": false,
      "Item3": ""
    },
    "decimalHours": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "monday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "tuesday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "wednesday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "thursday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "friday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "saturday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sunday": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "assigned": {
      "Item1": "Occupation",
      "Item2": true,
      "Item3": ""
    },
    "debugAssigned": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CompanyPreset": {
    "companyCategories": {
      "Item1": "CompanyCategory",
      "Item2": true,
      "Item3": "The category of this company"
    },
    "isIllegal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useBuildingName": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use a building's name as main if there is one"
    },
    "useBuildingOverrideName": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use a building's overidden name as main if there is one"
    },
    "overrideSuffixList": {
      "Item1": "String",
      "Item2": true,
      "Item3": "If the above is used, add this extra suffix"
    },
    "useStreetNameChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chances of using the street name as a main company name"
    },
    "useDistrictNameChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chances of using the district name as a main company name"
    },
    "useOwnerFirstNameChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chances of using the owner's first name as a main company name"
    },
    "useOwnerSurNameChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chances of using the owner's sur name as a main company name"
    },
    "useCompanyNameListChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chances of using the above name list as a main company name"
    },
    "aliterationWeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Chance of alliteration with prefix. This will add words with the same letter to the suffix to increase the chances of picking them by this amount"
    },
    "prefixChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "prefixList": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Use this name list to pick a prefix"
    },
    "mainChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "mainNamingList": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Use this name list to pick a main name"
    },
    "suffixList": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Append a random selection of this suffix list to the name"
    },
    "theRules": {
      "Item1": "TheRule",
      "Item2": true,
      "Item3": "How likely is there to be 'the' appended to the start of this name"
    },
    "minimumSalary": {
      "Item1": "SalaryRange",
      "Item2": false,
      "Item3": "How much the lowest rank jobs earn"
    },
    "topSalary": {
      "Item1": "SalaryRange",
      "Item2": false,
      "Item3": "How much the top rank jobs earn"
    },
    "payGradeCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "The pay grade curve from lowest rank to top rank"
    },
    "publicFacing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this company need a storefront?"
    },
    "isSelfEmployed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this company a self employed person?"
    },
    "autoCreate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Automatically create self employed companies"
    },
    "priority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "cityPopRatio": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "minimumNumber": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "maximumNumber": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "enableLoiteringBehaviour": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, loitering behaviour is enabled"
    },
    "menus": {
      "Item1": "MenuPreset",
      "Item2": true,
      "Item3": "List of items that this shop stocks"
    },
    "recordSalesData": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "previousFakeSalesRecords": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "requiredTraits": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": "A citizen must have one of the following to log a sales record here..."
    },
    "enableSelling": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Purchasing here also has a sell section"
    },
    "enableSellingOfIllegalItems": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "sellValueMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "possibleUniformColours": {
      "Item1": "Color",
      "Item2": true,
      "Item3": ""
    },
    "workHours": {
      "Item1": "CompanyOpenHoursPreset",
      "Item2": false,
      "Item3": "Preset detailing work hours"
    },
    "structure": {
      "Item1": "CompanyStructurePreset",
      "Item2": false,
      "Item3": "This structure of this company detailing jobs"
    },
    "controlsBuildingSurveillance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Controls surveillance of building"
    },
    "isHotel": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "For easily identifying a hotel"
    }
  },
  "CompanyCategory": {},
  "SalaryRange": {},
  "NameComponent": {},
  "TheRule": {
    "component": {
      "Item1": "NameComponent",
      "Item2": false,
      "Item3": ""
    },
    "exists": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "chanceModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "CompanyStructurePreset": {
    "companyStructure": {
      "Item1": "BossConfig",
      "Item2": false,
      "Item3": ""
    }
  },
  "OccupationSettings": {
    "occupation": {
      "Item1": "OccupationPreset",
      "Item2": false,
      "Item3": ""
    },
    "positionsMinimum": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "positionsMaximum": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "payGrade": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "BossConfig": {
    "subordinates": {
      "Item1": "Hierarchy1Config",
      "Item2": true,
      "Item3": ""
    }
  },
  "Hierarchy1Config": {
    "subordinates": {
      "Item1": "Hierarchy2Config",
      "Item2": true,
      "Item3": ""
    }
  },
  "Hierarchy2Config": {
    "subordinates": {
      "Item1": "Hierarchy3Config",
      "Item2": true,
      "Item3": ""
    }
  },
  "Hierarchy3Config": {
    "subordinates": {
      "Item1": "OccupationSettings",
      "Item2": true,
      "Item3": ""
    }
  },
  "Hierarchy4Config": {},
  "CriminalPreset": {
    "type": {
      "Item1": "CriminalType",
      "Item2": false,
      "Item3": ""
    },
    "canBeAgent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "canHaveJob": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "suggestedRank": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "boss": {
      "Item1": "CriminalPreset",
      "Item2": false,
      "Item3": ""
    },
    "positionsMin": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "positionsMax": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "desiredCrimePerDay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "CriminalType": {},
  "CruncherAppPreset": {
    "loadBackground": {
      "Item1": "Material",
      "Item2": false,
      "Item3": "The background image to display on load"
    },
    "loadedBackground": {
      "Item1": "Material",
      "Item2": false,
      "Item3": "The background image to display once app has loaded"
    },
    "useCursor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use the cursor if the player is controlling the computer"
    },
    "cursorSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": "The cursor to use"
    },
    "useTimer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use timer to exit: The app will exit on this timer"
    },
    "timerLength": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Timer length in seconds"
    },
    "loadTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Take this time to load in"
    },
    "loadDemand": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How heavy this is on loading the machine (1 = constant)"
    },
    "alwaysLoad": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Always load during the duration of this app"
    },
    "alwaysLoadDemand": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How heavy this is on loading the machine (1 = constant)"
    },
    "desktopIcon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": "App Icon displayed on desktop"
    },
    "screenLightColourOnLoad": {
      "Item1": "Color",
      "Item2": false,
      "Item3": "Computer light emmits this colour"
    },
    "screenLightColourOnFinishLoad": {
      "Item1": "Color",
      "Item2": false,
      "Item3": "Computer light emmits this colour"
    },
    "alwaysInstalled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfCorporateSabotageSkill": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "companyOnly": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "salesRecordsOnly": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfOwner": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only installed if the login is an owner of the address"
    },
    "installationConditions": {
      "Item1": "AppAccess",
      "Item2": true,
      "Item3": ""
    },
    "onlyInAddresses": {
      "Item1": "AddressPreset",
      "Item2": true,
      "Item3": ""
    },
    "onlyIfResidential": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "appContent": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "onStartSound": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": "Played when the app is started"
    },
    "onExitSound": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": "Played when the app is ended"
    },
    "onFinishedLoadingSound": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": "Played when the app has finished loading"
    },
    "openOnEnd": {
      "Item1": "CruncherAppPreset",
      "Item2": false,
      "Item3": "Open this app on end"
    }
  },
  "AppAccess": {
    "rule": {
      "Item1": "RuleType",
      "Item2": false,
      "Item3": ""
    },
    "traitList": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    }
  },
  "CutScenePreset": {
    "elementList": {
      "Item1": "CutSceneElement",
      "Item2": true,
      "Item3": ""
    },
    "fadeIn": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fadeInTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fadeOut": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fadeOutTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "displayImage": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "imageFadeIn": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "imageFadeInSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "imageFadeOut": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "imageFadeOutSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "disableAISpeech": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onEnd": {
      "Item1": "OnEndScene",
      "Item2": false,
      "Item3": ""
    }
  },
  "CutSceneElement": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "disable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "elementType": {
      "Item1": "ElementType",
      "Item2": false,
      "Item3": ""
    },
    "movement": {
      "Item1": "CameraMovement",
      "Item2": true,
      "Item3": ""
    },
    "lerpPositionGraph": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "lerpRotationGraph": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "ddsMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "messageDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "OnEndScene": {},
  "AnchorType": {},
  "CameraMovement": {
    "atDuration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "camPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "camEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "anchor": {
      "Item1": "AnchorType",
      "Item2": false,
      "Item3": ""
    },
    "overridePosGraph": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "lerpPositionGraphOverride": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "overrideRotGraph": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "lerpRotationGraphOverride": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    }
  },
  "DDSScope": {
    "colour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "isGlobal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This can be accessed from any scope"
    },
    "specialCase": {
      "Item1": "SpecialCase",
      "Item2": false,
      "Item3": ""
    },
    "containedScopes": {
      "Item1": "ContainedScope",
      "Item2": true,
      "Item3": ""
    },
    "containedValues": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    }
  },
  "ContainedScope": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "type": {
      "Item1": "DDSScope",
      "Item2": false,
      "Item3": ""
    }
  },
  "DesignStylePreset": {
    "includeInPersonalityMatching": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Include this when using citizen stats to pick a style"
    },
    "compatibleAddressTypes": {
      "Item1": "LayoutConfiguration",
      "Item2": true,
      "Item3": "Compatible Units"
    },
    "minimumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The citizen/company must have at least this much wealth to use this decor"
    },
    "humility": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Honesty-Humility (H): sincere, honest, faithful, loyal, modest/unassuming versus sly, deceitful, greedy, pretentious, hypocritical, boastful, pompous"
    },
    "emotionality": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Emotionality (E): emotional, oversensitive, sentimental, fearful, anxious, vulnerable versus brave, tough, independent, self-assured, stable"
    },
    "extraversion": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Extraversion (X): outgoing, lively, extraverted, sociable, talkative, cheerful, active versus shy, passive, withdrawn, introverted, quiet, reserved"
    },
    "agreeableness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Agreeableness (A): patient, tolerant, peaceful, mild, agreeable, lenient, gentle versus ill-tempered, quarrelsome, stubborn, choleric"
    },
    "conscientiousness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Conscientiousness (C): organized, disciplined, diligent, careful, thorough, precise versus sloppy, negligent, reckless, lazy, irresponsible, absent-minded"
    },
    "creativity": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Openness to Experience (O): intellectual, creative, unconventional, innovative, ironic versus shallow, unimaginative, conventional"
    },
    "modernity": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "allowCoving": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isBasement": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Force this style if below ground"
    }
  },
  "DialogPreset": {
    "msgID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "defaultOption": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this option added to citizens at the start?"
    },
    "telephoneCallOption": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this used for the telephone calling dialog?"
    },
    "hospitalDecisionOption": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this used for the hospital decision tree dialog?"
    },
    "tiedToKey": {
      "Item1": "DataKey",
      "Item2": false,
      "Item3": "Must have access to this key for this option to appear"
    },
    "ranking": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Ranking within options"
    },
    "removeAfterSaying": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Remove this after it's been said"
    },
    "dailyReplenish": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Replenish after each day: Every 24 hours this will be added to every citizen if not already added"
    },
    "isJobDetails": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This dialog will give the player the mission details"
    },
    "ignoreActiveJobRequirement": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If false, this will only be active when the associated job is active. If true, this requirement will be ignored."
    },
    "specialCase": {
      "Item1": "SpecialCase",
      "Item2": false,
      "Item3": "Special cases"
    },
    "cost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "This option is selectable for a cost"
    },
    "usePercentageCost": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If ture, the above is a percentage cost of the player's total wealth"
    },
    "useAllWealthIfNotEnough": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, and the player doesn't have enough to cover the cost then use the total amount of player's wealth"
    },
    "displayIfPasswordUnknown": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only displayed if the current address requires a password"
    },
    "inputBox": {
      "Item1": "InputSetting",
      "Item2": false,
      "Item3": "Player must input correct string before forcing a success or fail"
    },
    "displayAsIllegal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Display this dialog in red (illegal)"
    },
    "preceedingSyntax": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Preceeding syntax"
    },
    "followingSyntax": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Following syntax"
    },
    "useSuccessTest": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use a success test to determin the outcome response"
    },
    "requiresPassword": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Requires the correct password to be successful, if there is one"
    },
    "baseChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "affectChanceIfRestrained": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If restrained, the success change is affected this much..."
    },
    "modifySuccessChanceTraits": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": "Modify success based on below traits..."
    },
    "responses": {
      "Item1": "AISpeechPreset",
      "Item2": true,
      "Item3": ""
    },
    "followUpDialogSuccess": {
      "Item1": "DialogPreset",
      "Item2": true,
      "Item3": "Add these as player responses following..."
    },
    "followUpDialogFail": {
      "Item1": "DialogPreset",
      "Item2": true,
      "Item3": ""
    },
    "removeDialog": {
      "Item1": "DialogPreset",
      "Item2": true,
      "Item3": "Remove these other options"
    },
    "removeDialogOnSuccess": {
      "Item1": "DialogPreset",
      "Item2": true,
      "Item3": ""
    },
    "removeDialogOnFail": {
      "Item1": "DialogPreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "InputSetting": {},
  "DistrictPreset": {
    "generationPriority": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "How important is it to generate this district first"
    },
    "limitToOne": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can there be more than 1 of these districts?"
    },
    "cityRatio": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Distict size as ratio of the city"
    },
    "minimumSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Hard minimum size"
    },
    "maximumSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Hard maximum size"
    },
    "mustBeOnCoast": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This district must be located on the coast"
    },
    "centreWeighting": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How important is it that this district is located near the centre of the city?"
    },
    "aliterationWeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Chance of alliteration with prefix. This will add words with the same letter to the suffix to increase the chances of picking them by this amount"
    },
    "prefixOrSuffixChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "prefixList": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Use this name list to pick a prefix"
    },
    "mainChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "mainNamingList": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Use this name list to pick a main name"
    },
    "suffixList": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Append a random selection of this suffix list to the name"
    },
    "minimumDensity": {
      "Item1": "Density",
      "Item2": false,
      "Item3": ""
    },
    "maximumDensity": {
      "Item1": "Density",
      "Item2": false,
      "Item3": ""
    },
    "minimumLandValue": {
      "Item1": "LandValue",
      "Item2": false,
      "Item3": ""
    },
    "maximumLandValue": {
      "Item1": "LandValue",
      "Item2": false,
      "Item3": ""
    },
    "affectEthnicity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Affect the ethnicity of the citizens in this district..."
    },
    "ethnicityFrequencyModifiers": {
      "Item1": "EthnicityFrequency",
      "Item2": true,
      "Item3": ""
    },
    "sceneProfile": {
      "Item1": "SceneProfile",
      "Item2": false,
      "Item3": ""
    },
    "alterStreetAreaLighting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Change street light area colours"
    },
    "possibleColours": {
      "Item1": "Color",
      "Item2": true,
      "Item3": ""
    },
    "lightOperation": {
      "Item1": "AffectStreetAreaLights",
      "Item2": false,
      "Item3": "This is used in combination with the following to adjust street area lighting"
    },
    "lightAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "brightnessModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is added to brightness"
    },
    "copyFrom": {
      "Item1": "DistrictPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "AffectStreetAreaLights": {},
  "DoorMovementPreset": {
    "closedRelativePos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "openRelativePos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "closedRelativeEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "openRelativeEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "closedRelativeScale": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "openRelativeScale": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "doorOpenSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How fast the door opens"
    },
    "doorCloseSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How fast the door closes"
    },
    "animationCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "collisionBehaviour": {
      "Item1": "PhysicsBehaviour",
      "Item2": false,
      "Item3": ""
    },
    "behaviourAppliesWhenOpening": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "behaviourAppliesWhenClosing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "openAction": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "closeAction": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "openFinished": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "closeFinished": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "objectImpact": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "ignoreOcclusion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this is true then occlusion won't be calculated."
    },
    "switchState1AnimationSync": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then switch state 1 will be active while animating"
    }
  },
  "PhysicsBehaviour": {},
  "DoorPairPreset": {
    "parentWallsLong": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": "The wall model of the parent wall"
    },
    "childWallsLong": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": "The wall model of the child wall"
    },
    "parentWallsShort": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": "Short walls: There should be 3 here - left, middle and right"
    },
    "childWallsShort": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": "Short walls: There should be 3 here - left, middle and right"
    },
    "corners": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": "The corner model. Always on the outside walls."
    },
    "quoins": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": "The corner model for outside facing exterior walls (overrides above)"
    },
    "optimizeSections": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the game will use optimization to replaces walls of 3x rows with a larger section"
    },
    "appearInEditor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, user is able to place this in the editor"
    },
    "supportsWallProps": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this section can support lightswitches or other wall props"
    },
    "isFence": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the game will continue to draw building corners around this"
    },
    "divider": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dividerLeft": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "dividerRight": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "canFeatureDoor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Door object"
    },
    "doorOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Door offset position"
    },
    "sectionClass": {
      "Item1": "WallSectionClass",
      "Item2": false,
      "Item3": "The class of this wall section. When a procedural address is generated, it may override this with another more appropriate model with the same class."
    },
    "ignoreCullingRaycasts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then this will force this section to ignore raycasts when generating room culling."
    },
    "raisedFloorOverride": {
      "Item1": "DoorPairPreset",
      "Item2": false,
      "Item3": "Override with this if the floor height is above 0"
    },
    "materialOverride": {
      "Item1": "MaterialGroupPreset",
      "Item2": false,
      "Item3": ""
    },
    "mapOverride": {
      "Item1": "Texture2D",
      "Item2": true,
      "Item3": "Override map graphics with this"
    },
    "overrideWallNormal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "wallNormalOverrride": {
      "Item1": "DoorPairPreset",
      "Item2": false,
      "Item3": ""
    },
    "overrideDuctLower": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ductLowerOverrride": {
      "Item1": "DoorPairPreset",
      "Item2": false,
      "Item3": ""
    },
    "overrideDuctUpper": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ductUpperOverrride": {
      "Item1": "DoorPairPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "WallSectionClass": {},
  "DoorPreset": {
    "doorModel": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "objectPreset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "handleModel": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "handlePreset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "handleOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "isTransparent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "doorSignOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "doorSigns": {
      "Item1": "DoorSign",
      "Item2": true,
      "Item3": ""
    },
    "inheritColouringFromDecor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shareColours": {
      "Item1": "ShareColours",
      "Item2": false,
      "Item3": "If true the same material colours will be shared over all instances of this furniture for the room"
    },
    "variations": {
      "Item1": "MaterialVariation",
      "Item2": true,
      "Item3": ""
    },
    "doorOpenSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How fast the door opens and closes"
    },
    "openAngle": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The maximum amount this door can open"
    },
    "canPeakUnderneath": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can the player peek underneath this door?"
    },
    "closeBehaviour": {
      "Item1": "ClosingBehaviour",
      "Item2": false,
      "Item3": "If open, close the door depending on this behaviour"
    },
    "lockType": {
      "Item1": "LockType",
      "Item2": false,
      "Item3": ""
    },
    "lockInteractable": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": "If the above is set to something other than none or key, then setup this lock interactable..."
    },
    "lockOffsetFront": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "lockOffsetRear": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "armLockOnClose": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The lock is armed when the door movement is closed"
    },
    "doorStrengthRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "The door strength range"
    },
    "lockStrengthRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "The lock strength range"
    },
    "audioOpen": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "audioClose": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "audioCloseAction": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "audioLock": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "audioUnlock": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "audioLockedEntryAttempt": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "audioKnockLight": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "audioKnockMed": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "audioKnockHeavy": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "doorBargeContact": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "doorBargeBreak": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    }
  },
  "LockType": {},
  "DoorSign": {
    "signagePool": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "ifEntranceToRoom": {
      "Item1": "RoomConfiguration",
      "Item2": true,
      "Item3": ""
    },
    "placeIfFromPublicArea": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "placeIfFromOutside": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "placeIfFromInside": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyPlaceIfInhabited": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ClosingBehaviour": {},
  "EffectPreset": {
    "firstValueIsPercentageIncrease": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "runActivationOnUpdate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ElevatorPreset": {
    "stairWellPrefabs": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "stairsPrefabs": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "rotationOffset": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "bottomMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "topMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    }
  },
  "EvidencePreset": {
    "subClass": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Spawn this subclass. If left empty it will use the base class."
    },
    "windowStyle": {
      "Item1": "WindowStylePreset",
      "Item2": false,
      "Item3": "The window style this evidence should use."
    },
    "useDataKeys": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Should this evidence use data key instances? If false, all keys will be tied together on creation."
    },
    "validKeys": {
      "Item1": "DataKeySettings",
      "Item2": true,
      "Item3": ""
    },
    "passiveTies": {
      "Item1": "DataKeyAutomaticTies",
      "Item2": true,
      "Item3": "The below keys act as if merged when retrieved"
    },
    "notifyOfTies": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useBelongsToInName": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Item Evidence class only: Should the person who this belongs to be featured in the name?"
    },
    "isSingleton": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does only one instance of this evidence exist?"
    },
    "disableHistory": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this does appear in history when inspected"
    },
    "allowCustomNames": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow this evidence to be given custom names"
    },
    "markAsDiscoveredOnAnyInteraction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will be marked as discovered on any interaction, as opposed to just world interactions"
    },
    "forceWorldInteraction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will always and only be able to be a world interaction"
    },
    "useWindowFocusMode": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use window focus mode (black screen behind the window)"
    },
    "iconSpriteLarge": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": "The icon for this evidence"
    },
    "defaultNullImage": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "useInGamePhoto": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Take in-game shot of this item for use in evidence (only used if photo key present)"
    },
    "useWriter": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Instead of 'this' use a photo of the person this belongs to"
    },
    "relativeCamPhotoPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "relativeCamPhotoEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "captureRules": {
      "Item1": "CaptureRules",
      "Item2": false,
      "Item3": ""
    },
    "changeTimeOfDay": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "captureTimeOfDay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useCaptureLight": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useSurveillanceCapture": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use image from a CCTV capture"
    },
    "itemOwner": {
      "Item1": "BelongsToSetting",
      "Item2": false,
      "Item3": "Item evidence only: The 'belongs to' reference is set to this relation."
    },
    "itemWriter": {
      "Item1": "BelongsToSetting",
      "Item2": false,
      "Item3": "Item evidence only: The 'belongs to' reference is set to this relation."
    },
    "itemReceiver": {
      "Item1": "BelongsToSetting",
      "Item2": false,
      "Item3": "Item evidence only: The 'subject' reference is set to this relation."
    },
    "factSetup": {
      "Item1": "EvidenceFactSetup",
      "Item2": true,
      "Item3": "Automatically create these facts..."
    },
    "addFactLinks": {
      "Item1": "FactLinkSetup",
      "Item2": true,
      "Item3": "Automatically add a link to these facts (doesn't have to feature this evidence)"
    },
    "discoverOnCreate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Discover this evidence when it is created."
    },
    "keyMergeOnDiscovery": {
      "Item1": "MergeKeysSetup",
      "Item2": true,
      "Item3": "On discovery, merge these keys (this evidence)"
    },
    "discoveryTriggers": {
      "Item1": "Discovery",
      "Item2": true,
      "Item3": "Conditions for discovery of this evidence (ANY of these)"
    },
    "applicationOnDiscover": {
      "Item1": "DiscoveryApplication",
      "Item2": true,
      "Item3": "Apply these discoveries on discovery"
    },
    "ddsDocumentID": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Use this ID for content (do the rest in DDS editor)"
    },
    "isMatchParent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Some matching types below will only match to-from a match parent."
    },
    "matchTypes": {
      "Item1": "MatchPreset",
      "Item2": true,
      "Item3": "List of match types for auto-creating matches"
    },
    "enableSummary": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "enableFacts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pinnedStyle": {
      "Item1": "PinnedStyle",
      "Item2": false,
      "Item3": "The type of pinned evidence style"
    },
    "pinnedBackgroundColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": "Colour multiplier for pinned evidence background"
    }
  },
  "CaptureRules": {},
  "BelongsToSetting": {},
  "Subject": {},
  "EvidenceFactSetup": {
    "preset": {
      "Item1": "FactPreset",
      "Item2": false,
      "Item3": ""
    },
    "link": {
      "Item1": "Subject",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfInOwnedPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Item evidence only: Only create the belongsTo fact if this is placed in an owned position."
    },
    "createOnDiscovery": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Create this fact on discovery"
    },
    "forceDiscoveryOnCreation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Force discovery of this fact when this is created"
    },
    "switchFindingFactToFrom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "When creating the above, switch the from (this) and to (link) evidence."
    }
  },
  "FactLinkSetup": {
    "subject": {
      "Item1": "FactLinkSubject",
      "Item2": false,
      "Item3": ""
    },
    "factDictionary": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "key": {
      "Item1": "DataKey",
      "Item2": false,
      "Item3": ""
    },
    "discovery": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "DataKeyAutomaticTies": {
    "mainKey": {
      "Item1": "DataKey",
      "Item2": false,
      "Item3": ""
    },
    "mergeAtStart": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    }
  },
  "FactLinkSubject": {},
  "MergeKeysSetup": {
    "link": {
      "Item1": "Subject",
      "Item2": false,
      "Item3": ""
    },
    "mergeKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    }
  },
  "DiscoveryApplication": {
    "link": {
      "Item1": "Subject",
      "Item2": false,
      "Item3": ""
    },
    "applyDiscoveryTrigger": {
      "Item1": "Discovery",
      "Item2": false,
      "Item3": ""
    }
  },
  "PinnedStyle": {},
  "FactPreset": {
    "iconSpriteLarge": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": "Whenever this fact is displayed in an icon, use this sprite."
    },
    "subClass": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Spawn this subclass. If left empty it will use the base class."
    },
    "allowDuplicates": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow to -> from duplicates of this evidence"
    },
    "allowReverseDuplicates": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow reverse duplicates of this evidence"
    },
    "fromDataKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": "Link specifically to these data keys. These keys can be override manually by passing them in the constructor."
    },
    "toDataKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": "Link specifically to these data keys. These keys can be override manually by passing them in the constructor."
    },
    "discoverOnCreate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Discover this evidence when it is created."
    },
    "countsAsNewInformationOnDiscovery": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "When discovered, this is eligable to be tagged as 'new information'"
    },
    "applyFromKeysOnDiscovery": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": "On discovery, apply these data keys to the 'from' evidence."
    },
    "applyToKeysOnDiscovery": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": "On discovery, apply these data keys to the 'to' evidence."
    },
    "discoveryTriggers": {
      "Item1": "Discovery",
      "Item2": true,
      "Item3": ""
    },
    "factRank": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Use this to rank facts within the facts list (lowest displayed first)."
    }
  },
  "FirstPersonItem": {
    "slotPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Priority of this within the inventory hierarchy."
    },
    "modelActive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Should the arm models be displayed at all?"
    },
    "idleClip": {
      "Item1": "AnimationClip",
      "Item2": false,
      "Item3": ""
    },
    "selectionIcon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "summaryMsgID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "triggerTutorial": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "disableBracketDisplayName": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "drawSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How fast to play the draw animation"
    },
    "holsterSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How fast to play the holster animation"
    },
    "leftHandObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "rightHandObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "spawnScale": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "useFoodSlotItem": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useAlternateTrashObjects": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "leftHandObjectTrash": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "rightHandObjectTrash": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "actions": {
      "Item1": "FPSInteractionAction",
      "Item2": true,
      "Item3": "Setup of actions able to be performed"
    },
    "drawnNerveModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How this impacts nerve levels of a citizen if drawn"
    },
    "barkTriggerChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance of bark trigger"
    },
    "bark": {
      "Item1": "Bark",
      "Item2": false,
      "Item3": ""
    },
    "compatibleWithLockedIn": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "compatibleWithHidden": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "equipSoundDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "equipEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "holsterSoundDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "holsterEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "activeLoop": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "passRainParamsToActiveLoop": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "SpecialAction": {},
  "FPSInteractionAction": {
    "availability": {
      "Item1": "AttackAvailability",
      "Item2": false,
      "Item3": ""
    },
    "attackMainSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "attackTrasition": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "attackDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Minimum time between possible attacks: You might want to match this with the attack animation length"
    },
    "mainSpecialAction": {
      "Item1": "SpecialAction",
      "Item2": false,
      "Item3": ""
    },
    "mainUseSpecialColour": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "mainSpecialColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "attackEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "useCameraJolt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "joltXRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "joltYRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "joltZRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "joltAmplitude": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "joltSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "AttackAvailability": {},
  "FogPreset": {
    "sunRiseHour": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Sun rises at this hour (90 degrees to terrain)"
    },
    "sunSetHour": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Sun sets at this hour (90 degrees to terrain)"
    },
    "daytimeSunIntensityCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Sun intensity curve"
    },
    "sunIntensityBooster": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Multiply the above curve by this"
    },
    "morningSunColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": "Morning sun Colour"
    },
    "middaySunColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": "Midday sun Colour"
    },
    "eveningSunColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": "Evening sun Colour"
    },
    "sunShadowStrengthCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Sun shadow strength curve"
    },
    "sunVolumetricDimmer": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Sun dimmer"
    },
    "sunVolumetricShadowDimmer": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Sun shadows dimmer"
    },
    "exteriorAmbientIntensityCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Exterior Ambient curve"
    },
    "ambientExteriorBooster": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Multiply the above curve by this"
    },
    "interiorAmbientIntensityCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Exterior Ambient curve"
    },
    "ambientInteriorBooster": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Multiply the above curve by this"
    },
    "skyboxGradientGrading": {
      "Item1": "SkyboxGradient",
      "Item2": true,
      "Item3": "Skybox colour grades w/ fog colour settings"
    },
    "skyColourMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fogColourMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "ambientLightMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "globalLightIntensityMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fogDistanceRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Fog distance ranges"
    },
    "fogDistanceCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Fog distance throughout the day"
    },
    "maxFogDistanceRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "maxFogDistanceCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Max Fog distance throughout the day"
    },
    "fogAttenuationCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "volumetricFogDistanceCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "skylineEmissionCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "skylineEmissionColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "monthSnowChanceCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "weatherExtremityCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "thunderDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "monthTempCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "dayTempCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "NoRainModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "NoWindModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "NoSnowModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "FurnitureClass": {
    "wallRules": {
      "Item1": "FurnitureWallRule",
      "Item2": true,
      "Item3": "List of rules this furniture must follow"
    },
    "nodeRules": {
      "Item1": "FurnitureNodeRule",
      "Item2": true,
      "Item3": "List of rules this furniture must follow"
    },
    "blockedAccess": {
      "Item1": "BlockedAccess",
      "Item2": true,
      "Item3": "Which points between nodes are blocked (no walking access)"
    },
    "customNodeWeights": {
      "Item1": "CustomNodeWeighting",
      "Item2": true,
      "Item3": "Add a custom node weight to these nodes"
    },
    "updatePreCalculated": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "minimumZeroNodeWallCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "maximumZeroNodeWallCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "canFaceDiagonally": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, face the furniture diagonally if in corner"
    },
    "limitPerRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Maximum number per room"
    },
    "maximumNumberPerRoom": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "limitPerAddress": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Maximum number per address"
    },
    "maximumNumberPerAddress": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "limitToFloor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow only on this floor"
    },
    "allowedOnFloor": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "limitToFloorRange": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow only on this range"
    },
    "allowedOnFloorRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "limitPerBuildingResidence": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "perBuildingResidences": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Limit to 1 per below number of residences in the building"
    },
    "limitPerJobs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "perJobs": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Limit to 1 per below number of residences in the building"
    },
    "awayFromClasses": {
      "Item1": "FurnitureClass",
      "Item2": true,
      "Item3": "Must be at least this distance (nodes) from these classes..."
    },
    "minimumNodeDistance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Minimum node distance from these classes. A diagonal is about 1.8"
    },
    "objectSize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "tall": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this would cover up items on the wall such as lightswitches or block windows"
    },
    "wallPiece": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use the corresponding wall rules to place wall pieces"
    },
    "useWallSnappingInDecorMode": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If being placed in decor mode, snap to nearby walls"
    },
    "windowPiece": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow one of these per window"
    },
    "occupiesTile": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this block the placement of other furniture (if this flag is true on them also)?"
    },
    "allowedOnStairwell": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this furniture allowed on stairwell tiles?"
    },
    "onlyOnStairwell": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowIfNoFloor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Determins allowed if no floor"
    },
    "ceilingPiece": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a ceiling piece?"
    },
    "requiresCeiling": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this require a ceiling above it?"
    },
    "blocksCeiling": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this block ceiling pieces from being placed?"
    },
    "allowLightswitch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This is allowed to be placed if there is a lightswitch on this tile"
    },
    "raiseLightswitch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If a lightswitch exists here, raise the height slightly"
    },
    "lightswitchYOffset": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "noBlocking": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this object doesn't need access and won't ever block anything; use on minor objects to optimize placement checks"
    },
    "noPassThrough": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true the AI can access this node, but not pass through it on the way to something else. Can be used for 1 node items such as tables where you can't normally block access. IMPORTANT: Usually true if all but 1-3 directions are blocked."
    },
    "noAccessNeeded": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true the AI can't access this node, this node is effectively exluded from access checks. IMPORTANT: Make sure this is enabled if all directions are blocked."
    },
    "blockDefaultSublocations": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then default sublocations will be blocked completely (usually they are added if there are no custom ones on a node). Default sublocations will be used if there are no custom ones, and there is no furniture class with a blocking flag."
    },
    "ignoreGeometryInPhysicsCheck": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then the physics check will ignore colliders that are not citizens"
    },
    "sublocations": {
      "Item1": "FurniureWalkSubLocations",
      "Item2": true,
      "Item3": "These will be added to the tile's sublocations"
    },
    "aiRobberyPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If the AI is robbing a location, use this to compare the likihood of valuable contents..."
    },
    "isSecurityCamera": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ownershipClass": {
      "Item1": "OwnershipClass",
      "Item2": false,
      "Item3": "Dictates what class of ownership (ie each person living here needs 1 bed)"
    },
    "ownershipSource": {
      "Item1": "OwnershipSource",
      "Item2": false,
      "Item3": "From where does this derrive the owners pool?"
    },
    "assignBelongsToOwners": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Assign owners to this furniture"
    },
    "preferCouples": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this is checked the game will assign this object to a couple"
    },
    "copyFromPreviouslyPlacedInCluster": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this is true, the object will try to copy ownership from previously placed items in the cluster"
    },
    "onlyPickFromRoomOwners": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this is true, this will only pick from the owners of the room (if there are any)"
    },
    "skipIfNoAddressInhabitants": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Skip placement of this if there are no address owners"
    },
    "assignHomelessOwners": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Assign homeless owners"
    },
    "assignMailbox": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Make sure ownership is only assigned if mailbox not already assigned to an apartment"
    },
    "discourageMissionPhotos": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Don't allow mission photographs on this furniture"
    },
    "copyFrom": {
      "Item1": "FurnitureClass",
      "Item2": false,
      "Item3": ""
    }
  },
  "FurnitureRuleOption": {},
  "WallRule": {},
  "FurniureWalkSubLocations": {
    "offset": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "This rule is applied at this offset"
    },
    "sublocations": {
      "Item1": "Vector3",
      "Item2": true,
      "Item3": ""
    }
  },
  "FurnitureNodeRule": {
    "offset": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "This rule is applied at this offset"
    },
    "option": {
      "Item1": "FurnitureRuleOption",
      "Item2": false,
      "Item3": "Type of rule to apply"
    },
    "anyOccupiedTile": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "furnitureClass": {
      "Item1": "FurnitureClass",
      "Item2": false,
      "Item3": "What should be found at this node?"
    },
    "addScore": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If 'Can Feature' add this to the location score"
    }
  },
  "FurnitureWallRule": {
    "nodeOffset": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "This rule is applied at this offset"
    },
    "wallDirection": {
      "Item1": "BlockingDirection",
      "Item2": false,
      "Item3": "This rule is applied at this offset"
    },
    "option": {
      "Item1": "FurnitureRuleOption",
      "Item2": false,
      "Item3": "Type of rule to apply"
    },
    "tag": {
      "Item1": "WallRule",
      "Item2": false,
      "Item3": "What should be found at this offset?"
    },
    "roomType": {
      "Item1": "RoomConfiguration",
      "Item2": false,
      "Item3": "If the tag is 'room to'"
    },
    "addScore": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If 'Can Feature' add this to the location score"
    }
  },
  "BlockedAccess": {
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "nodeOffset": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "blockExteriorDiagonals": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Block diagonals on adjacent tiles"
    },
    "blocked": {
      "Item1": "BlockingDirection",
      "Item2": true,
      "Item3": ""
    }
  },
  "CustomNodeWeighting": {
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "nodeOffset": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "nodeWeightModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "SubObject": {
    "preset": {
      "Item1": "SubObjectClassPreset",
      "Item2": false,
      "Item3": ""
    },
    "parent": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "localPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "localRot": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "belongsTo": {
      "Item1": "SubObjectOwnership",
      "Item2": false,
      "Item3": ""
    },
    "security": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "OwnershipClass": {},
  "OwnershipSource": {},
  "FurnitureCluster": {
    "disable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "clusterElements": {
      "Item1": "FurnitureClusterRule",
      "Item2": true,
      "Item3": "List of rules this furniture must follow"
    },
    "placementChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance for skipping this cluster altogether"
    },
    "roomPriority": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The ranking given to this item when choosing what to place."
    },
    "modifyPriorityTraits": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": "Modify priority with traits present. The base chance here is x10 and added to the above room priority."
    },
    "modifyPlacementChanceTraits": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": "Modify placement chance with traits present. The base chance here is x10 and added to the above placement chance."
    },
    "essentialFurniture": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will override priority with 10 unless one already exists"
    },
    "updatePreCalculated": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "calculatedMinRoomSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "minimumZeroNodeWallCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "maximumZeroNodeWallCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "zeroNodeClasses": {
      "Item1": "FurnitureClass",
      "Item2": true,
      "Item3": ""
    },
    "minimumRoomSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Room must be at least this size"
    },
    "useMaximumRoomSize": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "maximumRoomSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useCustomZeroNodeMinWallCount": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "customZeroNodeMinWallCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useCustomZeroNodeMaxWallCount": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "customZeroNodeMaxWallCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "zeroNodeWallRules": {
      "Item1": "FurnitureWallRule",
      "Item2": true,
      "Item3": ""
    },
    "allowedInOpenPlan": {
      "Item1": "AllowedOpenPlan",
      "Item2": false,
      "Item3": "Is this allowed in open plan rooms?"
    },
    "allowInResidential": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowInCompanies": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowOnStreets": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "coastalOnly": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This is only to be placed on coastal streets"
    },
    "limitToDistricts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only allow this in certain districts"
    },
    "allowedInDistricts": {
      "Item1": "DistrictPreset",
      "Item2": true,
      "Item3": ""
    },
    "banFromDistricts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "notAllowedInDistricts": {
      "Item1": "DistrictPreset",
      "Item2": true,
      "Item3": ""
    },
    "skipIfNoAddressInhabitants": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Skip placement of this if there are no address owners"
    },
    "onlySkipNoInhabitantsIfResidenceOrCompany": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If the above is true, will only be skipped if this is a residence or company"
    },
    "dontSkipNoInhabitantsIfIn": {
      "Item1": "RoomClassPreset",
      "Item2": true,
      "Item3": "If the above is true, don't skip if within addresses of this type"
    },
    "allowedRoomFilters": {
      "Item1": "RoomTypeFilter",
      "Item2": true,
      "Item3": ""
    },
    "limitPerRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Maximum number per room"
    },
    "maximumPerRoom": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "limitPerAddress": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Maximum number per address"
    },
    "maximumPerAddress": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "limitToFloor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow only on this floor"
    },
    "allowedOnFloor": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "limitToFloorRange": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow only between these floors"
    },
    "allowedOnFloorRange": {
      "Item1": "Vector2Int",
      "Item2": false,
      "Item3": ""
    },
    "wealthLimit": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "minimumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maximumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useRoomGrub": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "minimumGrub": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maximumGrub": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useBuildingResidences": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "minimumResidences": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "maximumResidences": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "addClustersOnSuccess": {
      "Item1": "FurnitureCluster",
      "Item2": true,
      "Item3": "If this cluster is successfully placed, add the following cluster presets from trying to be placed"
    },
    "removeClustersOnSuccess": {
      "Item1": "FurnitureCluster",
      "Item2": true,
      "Item3": "If this cluster is successfully placed, remove the following cluster presets from trying to be placed"
    },
    "removeClustersOnFail": {
      "Item1": "FurnitureCluster",
      "Item2": true,
      "Item3": "If this cluster fails to be placed, remove the following cluster presets from trying to be placed"
    },
    "securityDoor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a security door?"
    },
    "isBreakerBox": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a breaker box?"
    },
    "enableDebug": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "FurnitureFacing": {},
  "AllowedOpenPlan": {},
  "FurnitureClusterRule": {
    "onlyValidIfPreviousObjectPlaced": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only consider this if the last object got placed"
    },
    "placements": {
      "Item1": "Vector2",
      "Item2": true,
      "Item3": "If not able to be placed at the above, scan list of alternates at random to find a valid position"
    },
    "furnitureClass": {
      "Item1": "FurnitureClass",
      "Item2": false,
      "Item3": "What should be found at this node?"
    },
    "facing": {
      "Item1": "FurnitureFacing",
      "Item2": false,
      "Item3": ""
    },
    "importantToCluster": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If cannot be place here, this cluster placement is invalid"
    },
    "chanceOfPlacementAttempt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance this placement will be attempted: Done on a per-location basis, so often a lower number will result in a much lower placement count..."
    },
    "placementScoreBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useFovBlock": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Block objects in this path"
    },
    "blockDirection": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "The FOV block will continue in this direction, this is before direction is applied, so 0,1 is infront for example."
    },
    "maxFOVBlockDistance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "localScale": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Local scale"
    },
    "positionOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Offset"
    }
  },
  "FurniturePreset": {
    "classes": {
      "Item1": "FurnitureClass",
      "Item2": true,
      "Item3": "Classes that this furniture belongs to"
    },
    "prefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "allowStaticBatching": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will seach for identical furniture in a room to batch with"
    },
    "spawnRange": {
      "Item1": "ObjectLoadRange",
      "Item2": false,
      "Item3": ""
    },
    "allowWeatherAffectedMaterials": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allows this furniture to check for weather affected material (only works without custom colour keys or material changes"
    },
    "integratedInteractables": {
      "Item1": "IntegratedInteractable",
      "Item2": true,
      "Item3": "What interatables will be instanced on this? These won't be spawned but created and searched for within the furniture prefab"
    },
    "universalDesignStyle": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true use across all design styles"
    },
    "designStyles": {
      "Item1": "DesignStylePreset",
      "Item2": true,
      "Item3": ""
    },
    "inheritColouringFromDecor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shareColours": {
      "Item1": "ShareColours",
      "Item2": false,
      "Item3": "If true the same material colours will be shared over all instances of this furniture for the room"
    },
    "inheritGrubFromDecor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this furniture will inherit a grub value from the decor/room"
    },
    "variations": {
      "Item1": "MaterialVariation",
      "Item2": true,
      "Item3": ""
    },
    "furnitureGroup": {
      "Item1": "FurnitureGroup",
      "Item2": false,
      "Item3": "If this is a part of a group, furntiure of the same group will be chosen in this room."
    },
    "groupID": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "concrete": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "plaster": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wood": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "carpet": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "tile": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "metal": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "glass": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fabric": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "minimumRoomSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "This is secondary to the same property in the class preset."
    },
    "allowedInOpenPlan": {
      "Item1": "AllowedOpenPlan",
      "Item2": false,
      "Item3": "Is this allowed in open plan rooms?"
    },
    "onlyAllowInFollowing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only allow this in certain inhabitant presets"
    },
    "allowedInAddressesOfType": {
      "Item1": "AddressPreset",
      "Item2": true,
      "Item3": ""
    },
    "banInFollowing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Ban this in certain inhabitant presets"
    },
    "bannedInAddressesOfType": {
      "Item1": "AddressPreset",
      "Item2": true,
      "Item3": ""
    },
    "OnlyAllowInBuildings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only allow this in certain buildings"
    },
    "allowedInBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    },
    "banFromBuildings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "notAllowedInBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    },
    "OnlyAllowInDistricts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only allow this in certain districts"
    },
    "allowedInDistricts": {
      "Item1": "DistrictPreset",
      "Item2": true,
      "Item3": ""
    },
    "banFromDistricts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "notAllowedInDistricts": {
      "Item1": "DistrictPreset",
      "Item2": true,
      "Item3": ""
    },
    "requiresGenderedInhabitants": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "enableIfGenderPresent": {
      "Item1": "Gender",
      "Item2": true,
      "Item3": ""
    },
    "allowedRoomFilters": {
      "Item1": "RoomTypeFilter",
      "Item2": true,
      "Item3": "The furniture is only allowed in these room types"
    },
    "minimumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "subObjects": {
      "Item1": "SubObject",
      "Item2": true,
      "Item3": ""
    },
    "testForModifiers": {
      "Item1": "ModifierTest",
      "Item2": false,
      "Item3": "Use this setting to test for subobject spawn modifiers (see 'SubObjectClassPreset')"
    },
    "forcePublicIllegal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Objects with illegal actions on this will override the public area allowance set in the interactable setup"
    },
    "hidingEnterTransition": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "hidingExitTransition": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "hidingEnterTransition2": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "hidingExitTransition2": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "map": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "drawUnderWalls": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ignoreDirection": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fingerprintsEnabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Should there be fingerprints here?"
    },
    "printsSource": {
      "Item1": "PrintsSource",
      "Item2": false,
      "Item3": "The source of the prints"
    },
    "fingerprintDensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Fingerprint density"
    },
    "alterAreaLighting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Change area colours"
    },
    "possibleColours": {
      "Item1": "Color",
      "Item2": true,
      "Item3": ""
    },
    "lightOperation": {
      "Item1": "AffectStreetAreaLights",
      "Item2": false,
      "Item3": "This is used in combination with the following to adjust street area lighting"
    },
    "lightAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "brightnessModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is added to brightness"
    },
    "purchasable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disableFromDecorMenu": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "cost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "decorClass": {
      "Item1": "DecorClass",
      "Item2": false,
      "Item3": ""
    },
    "staticImage": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "imagePos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "imageRot": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "imageScale": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "imagePrefabOverride": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "isJobBoard": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a board where jobs can be posted?"
    },
    "isWorkPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a desk (for work)? If true furniture ownership will be assigned based on jobs."
    },
    "isPlant": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can spawn a variety of plants"
    },
    "isArt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this require the game to pick a piece of art to fit this?"
    },
    "isSecurityCamera": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a security camera? (Special limitations)"
    },
    "onLoadAdjacentPlayerTeleport": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, if the player is here, upon load the game will teleport the player to an available adjacent space"
    },
    "artOrientation": {
      "Item1": "ArtOrientation",
      "Item2": false,
      "Item3": ""
    },
    "createSelfEmployed": {
      "Item1": "CompanyPreset",
      "Item2": false,
      "Item3": "Does this require a special self employed job?"
    },
    "workPositionID": {
      "Item1": "InteractableID",
      "Item2": false,
      "Item3": "If above is true: Which slot contains the work position?"
    },
    "spawnObjectOnChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance to spawn the below objects; works on a item-by-item basis"
    },
    "spawnObjectsOnPlacement": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": "Spawns these objects once placed"
    }
  },
  "SubObjectOwnership": {},
  "IntegratedInteractable": {
    "preset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "pairToController": {
      "Item1": "InteractableID",
      "Item2": false,
      "Item3": ""
    },
    "belongsTo": {
      "Item1": "SubObjectOwnership",
      "Item2": false,
      "Item3": ""
    }
  },
  "ShareColours": {},
  "FurnitureGroup": {},
  "ModifierTest": {},
  "DecorClass": {},
  "GroupPreset": {
    "groupType": {
      "Item1": "GroupType",
      "Item2": false,
      "Item3": ""
    },
    "chance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance of existance on a per instance basis."
    },
    "minMembers": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Minimum members"
    },
    "maxMembers": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Maximum members"
    },
    "requiredTraits": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": "Members must have these traits"
    },
    "minimumExtraversion": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Members must have this extraversion value"
    },
    "enableMeetUps": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "daysPerWeek": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How many times a week this group meets"
    },
    "timeRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "The time range for the meet up time. If set to something other that special interest, this is driven by when both are free (after work etc)."
    },
    "meetUpLength": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Meet up length"
    },
    "meetUpLocations": {
      "Item1": "CompanyPreset",
      "Item2": true,
      "Item3": "Possible meeting place address types"
    },
    "meetUpGoal": {
      "Item1": "AIGoalPreset",
      "Item2": false,
      "Item3": "Meet up goal"
    },
    "reserveSeats": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The first person will reserve up to 4 seats on arrival..."
    },
    "useDistanceMultiplierModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Add this distance multiplier when choosing a seat"
    },
    "clues": {
      "Item1": "ClubClue",
      "Item2": true,
      "Item3": ""
    },
    "vmails": {
      "Item1": "MeetUpVmailThread",
      "Item2": true,
      "Item3": ""
    }
  },
  "GroupType": {},
  "MeetUpVmailThread": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "treeID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "sender": {
      "Item1": "MeetUpVmailSender",
      "Item2": false,
      "Item3": ""
    },
    "recevier": {
      "Item1": "MeetUpVmailSender",
      "Item2": false,
      "Item3": ""
    }
  },
  "ClubClue": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "preset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "spawnAt": {
      "Item1": "SpawnAt",
      "Item2": false,
      "Item3": ""
    }
  },
  "SpawnAt": {},
  "MeetUpVmailSender": {},
  "HandwritingPreset": {
    "fontAsset": {
      "Item1": "TMP_FontAsset",
      "Item2": false,
      "Item3": ""
    },
    "baseChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "characterTraits": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": ""
    }
  },
  "HelpContentPage": {
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "messageID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "contentDisplay": {
      "Item1": "HelpContentDisplay",
      "Item2": true,
      "Item3": ""
    }
  },
  "HelpContentDisplay": {
    "helpDisplaySetting": {
      "Item1": "DisplaySetting",
      "Item2": false,
      "Item3": ""
    },
    "clip": {
      "Item1": "VideoClip",
      "Item2": false,
      "Item3": ""
    },
    "image": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    }
  },
  "DisplaySetting": {},
  "InteractableActionsPreset": {
    "actions": {
      "Item1": "InteractionAction",
      "Item2": true,
      "Item3": "Additional actions able to be performed"
    },
    "disableCollider": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable the collider when locked-in"
    },
    "lockedInActions1": {
      "Item1": "InteractionAction",
      "Item2": true,
      "Item3": ""
    },
    "lockedInActions2": {
      "Item1": "InteractionAction",
      "Item2": true,
      "Item3": ""
    },
    "physicsActions": {
      "Item1": "InteractionAction",
      "Item2": true,
      "Item3": ""
    }
  },
  "InteractablePreset": {
    "spawnable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this object can be spawned through the object creator"
    },
    "prefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": "You only need to set this if the item is spawnable."
    },
    "prefabLocalEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "This value is held as a workaround for not being able to access the prefab in multithreading"
    },
    "prefabLocalScale": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "This value is held as a workaround for not being able to access the prefab in multithreading"
    },
    "dontSaveWithSaveGames": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Don't save with state data"
    },
    "onlySaveWithSaveGamesIfWorldObject": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Override the above behaviour if this is classed a world object; useful for lightswitches if they have been placed by the player"
    },
    "excludeFromObjectPooling": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Object pooling will not be used for this"
    },
    "excludeFromVisibilityRangeChecks": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the mesh renderers on this object won't get turned on and off with range or room visibility."
    },
    "spawnRange": {
      "Item1": "ObjectLoadRange",
      "Item2": false,
      "Item3": "Load in at this range"
    },
    "showWorldObjectInSceneCapture": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true include in any scene capturing. If false the object will be hidden. Toggle for any static or integrated objects."
    },
    "captureStateInSceneCapture": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, capture and set the state of this object for captures"
    },
    "createProxy": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyCreateProxyInDetailedCapture": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "createProxyAtRange": {
      "Item1": "ObjectLoadRange",
      "Item2": false,
      "Item3": ""
    },
    "inheritColouringFromDecor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true the same material colours will be shared over all instances of this furniture for the room. Does not apply to integrated interactables which will be coloured by their parent furniture."
    },
    "shareColoursWithFurniture": {
      "Item1": "ShareColours",
      "Item2": false,
      "Item3": "If true the same material colours will be shared over all instances of this furniture for the room. Difference from furniture: This cannot 'create' a material key, so furniture with it must already exist in the room."
    },
    "useOwnColourSettings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this object needs custom colours..."
    },
    "mainColour": {
      "Item1": "InteractableColourSetting",
      "Item2": false,
      "Item3": ""
    },
    "customColour1": {
      "Item1": "InteractableColourSetting",
      "Item2": false,
      "Item3": ""
    },
    "customColour2": {
      "Item1": "InteractableColourSetting",
      "Item2": false,
      "Item3": ""
    },
    "customColour3": {
      "Item1": "InteractableColourSetting",
      "Item2": false,
      "Item3": ""
    },
    "inheritGrubValue": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "autoName": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Attempt to name this using evidence entry or preset name, if false you must set this manually."
    },
    "includeBelongsTo": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Include belongs to name in interactable name"
    },
    "useNameShorthand": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use a shorthand version of the name (Initial + Surname)"
    },
    "useApartmentName": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isLight": {
      "Item1": "LightingPreset",
      "Item2": false,
      "Item3": "Is this a light?"
    },
    "lightswitch": {
      "Item1": "Switch",
      "Item2": false,
      "Item3": ""
    },
    "allowUnscrewed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, allows an unscrewed override state (cutsom switch 1)"
    },
    "isMainLight": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "forceIncludeOnStreetLightLayer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this light is added to layer 1; the light layer for street lights"
    },
    "staticImage": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "imagePos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "imageRot": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "imageScale": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "imagePrefabOverride": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "iconOverride": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": "Weapon selection icon override"
    },
    "itemClass": {
      "Item1": "ItemClass",
      "Item2": false,
      "Item3": ""
    },
    "allowInApartmentStorage": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowInApartmentShop": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disableMoveToStorage": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If enabled, this item cannot be 'moved to storage'. Only needed for spawnable items"
    },
    "apartmentPlacementMode": {
      "Item1": "ApartmentPlacementMode",
      "Item2": false,
      "Item3": "The method of placement used when the player uses the apartment editor to place this"
    },
    "mustTouchFurniture": {
      "Item1": "FurniturePreset",
      "Item2": true,
      "Item3": ""
    },
    "useMaterialOverride": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "materialOverride": {
      "Item1": "SoundMaterialOverride",
      "Item2": false,
      "Item3": ""
    },
    "actionsPreset": {
      "Item1": "InteractableActionsPreset",
      "Item2": true,
      "Item3": "Setup of actions able to be performed"
    },
    "onlyIllegalIfInNonPublic": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Illegal actions are only classed as illegal if the item is in a non-public space"
    },
    "rangeModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This modifier will be added to the interactable distance"
    },
    "physicsProfile": {
      "Item1": "PhysicsProfile",
      "Item2": false,
      "Item3": ""
    },
    "overrideMass": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "forcePhysicsAlwaysOn": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "reactWithExternalStimuli": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this object will react with doors, damage impacts etc"
    },
    "mass": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "breakable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "particleProfile": {
      "Item1": "ParticleEffect",
      "Item2": false,
      "Item3": ""
    },
    "overrideShatterSettings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shardSize": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "The size of the shards created"
    },
    "shardEveryXPixels": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Create a shard every this amount of pixels on the texture"
    },
    "overrideSpatterSettings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "spatterSimulation": {
      "Item1": "SpatterPatternPreset",
      "Item2": false,
      "Item3": ""
    },
    "spatterCountMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "overrideFurnitureSetting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use this to override the hiding place camera settings in the furniture preset"
    },
    "enterTransition": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "exitTransition": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "enterTransition2": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "exitTransition2": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "switchSFX": {
      "Item1": "IfSwitchStateSFX",
      "Item2": true,
      "Item3": "Trigger audio on these switch events"
    },
    "startingSwitchState": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Set the switch state to this on start"
    },
    "startingCustomState1": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Set the switch state to this on start"
    },
    "startingCustomState2": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Set the switch state to this on start"
    },
    "startingCustomState3": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Set the switch state to this on start"
    },
    "startingLockState": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Set the lock state to this on start"
    },
    "value": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Monetary value of this object. Min/Max."
    },
    "AIPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "AI will rank actions by this if there are multiple copies"
    },
    "disableForSocialGroups": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this incompatible for social gatherings? Ie if I'm meeting someone here..."
    },
    "pickDistanceMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "When chosing between interactables, how much to factor in the closest one?"
    },
    "perActionPrioritySettings": {
      "Item1": "AIUsePriority",
      "Item2": true,
      "Item3": "Use unique settings per action for each of the following"
    },
    "tamperEnabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Will the AI notice if this is moved?"
    },
    "resetBehaviour": {
      "Item1": "ObjectResetBehaviour",
      "Item2": true,
      "Item3": "Object reset behaviours based on activity and conditions"
    },
    "useSetting": {
      "Item1": "AIUseSetting",
      "Item2": false,
      "Item3": "The AI will move to one of these postions to use this"
    },
    "readingEnabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If within reading range then display text contained in this evidence"
    },
    "readyingEnabledOnlyWithSwitchIsTue": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Reading mode is only active while switch status is true"
    },
    "readingEnabledOnlyWithKaizenSkill": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Reading mode is only active while switch status is true"
    },
    "readingSource": {
      "Item1": "ReadingModeSource",
      "Item2": false,
      "Item3": "Where to pull the text info from"
    },
    "discoverOnRead": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Discover evidence upon read"
    },
    "pageTurnReadingDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "A delay to reading when a page is turned"
    },
    "distanceRecognitionEnabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If within a certain range, then display a grey-ed out interaction icon with name text"
    },
    "distanceRecognitionOnly": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "recognitionRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "subObjectClasses": {
      "Item1": "SubObjectClassPreset",
      "Item2": true,
      "Item3": "Spawn this object using this sub object group"
    },
    "backupClasses": {
      "Item1": "SubObjectClassPreset",
      "Item2": true,
      "Item3": "If the object fails to be placed in the above, use this class as a fall-back placement option. This is irrelevent for auto placement, as objects are spawned by the individual placements upon furniture, these places won't be considered."
    },
    "autoPlacement": {
      "Item1": "AutoPlacement",
      "Item2": false,
      "Item3": "Whether this will be automatically placed along with furniture..."
    },
    "alwaysPlaceAtGameLocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, these objects will be placed with no owners at every gamelocation (based on other filters in this section)."
    },
    "frequencyPerGamelocationMin": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The minimum number of objects that will be auto-placed at every gamelocation"
    },
    "frequencyPerGameLocationMax": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The minimum number of objects that will be auto-placed at every gamelocation"
    },
    "perGameLocationObjectPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Dictates in what order objects should be placed in..."
    },
    "placeIfFiltersPresentInOwner": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, owners/inhabitants/employees will be scanned for these traits and items will be placed accordingly..."
    },
    "placeAtHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Place if this is the citizen's home"
    },
    "placeAtWork": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Place if this is the citizen's place of work"
    },
    "traitModifiers": {
      "Item1": "TraitPick",
      "Item2": true,
      "Item3": ""
    },
    "frequencyPerOwnerMin": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The minimum number of objects that will be auto-placed for each owner"
    },
    "frequencyPerOwnerMax": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The minimum number of objects that will be auto-placed for each owner"
    },
    "multiplyByMessiness": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the overall frequency range will be multiplied by the inverse of conscientiousness (untidy = more)"
    },
    "perOwnerObjectPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Dictates in what order objects should be placed in..."
    },
    "writerIs": {
      "Item1": "BelongsToSetting",
      "Item2": false,
      "Item3": ""
    },
    "receiverIs": {
      "Item1": "BelongsToSetting",
      "Item2": false,
      "Item3": ""
    },
    "canBeFromSelf": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If the above two options are different, is this allowed to be from the same person to the same person?"
    },
    "limitPerObject": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "perObjectLimit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How many of these objects can be spawned per object?"
    },
    "limitPerRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "perRoomLimit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How many of these objects can be spawned per room?"
    },
    "limitPerAddress": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "perAddressLimit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How many of these objects can be spawned per address?"
    },
    "limitInResidential": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "perResidentialLimit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How many of these objects can be spawned if residential?"
    },
    "limitInCommercial": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "perCommercialLimit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How many of these objects can be spawned if residential?"
    },
    "banFromRooms": {
      "Item1": "RoomConfiguration",
      "Item2": true,
      "Item3": "Ban this item from being placed in certain room types"
    },
    "limitToCertainRooms": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only feature this item in certain room types"
    },
    "onlyInRooms": {
      "Item1": "RoomConfiguration",
      "Item2": true,
      "Item3": ""
    },
    "limitToCertainBuildings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only feature this item in certain building types"
    },
    "onlyInBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    },
    "attemptToStoreInFolder": {
      "Item1": "EvidencePreset",
      "Item2": false,
      "Item3": "If this is not null, it will attempt to place this evidence inside a folder matching this evidence type."
    },
    "folderPlacementChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If the above is not null, the chance of being placed in the folder."
    },
    "dontPlaceIfNoFolder": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If unable to place in folder, then don't place at all"
    },
    "folderOwnershipMustMatch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Folder's ownership must match"
    },
    "useSubSpawning": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will also look to spawn upon on other objects (and prioritize them)"
    },
    "securityLevel": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "This will try to be placed in a place of security matching this, if not higher..."
    },
    "ownedRule": {
      "Item1": "OwnedPlacementRule",
      "Item2": false,
      "Item3": "Rules about being placed in owned vs non-owned locations. 'Prioritise' settings will favour owned locations but sill place in non-owned, while 'only' settings will only place in that location."
    },
    "overrideWithOnlyOwnedSpawnAtWork": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Override with ownedOnly if at work"
    },
    "subSpawnClass": {
      "Item1": "SubObjectClassPreset",
      "Item2": false,
      "Item3": "Can sub spawn objects with this class"
    },
    "subSpawnPositions": {
      "Item1": "SubSpawnSlot",
      "Item2": true,
      "Item3": "Sub spawning slots within this"
    },
    "relocationAuthority": {
      "Item1": "RelocationAuthority",
      "Item2": false,
      "Item3": "If the object is moved by this person, also set the spawn point so it doesn't get reset."
    },
    "relocateIfPlacedInPlayersHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Will not reset if placed in the player's home"
    },
    "AIWillCorrectPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "AI will attempt to put back this if it is out of place"
    },
    "useEvidence": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this interactable need to reference a piece of evidence? If true will attempt to find the evidence as below (will be overriden by passed variabes in the constructor)"
    },
    "useSingleton": {
      "Item1": "EvidencePreset",
      "Item2": false,
      "Item3": "If not null, will attempt to find the singleton using this preset..."
    },
    "findEvidence": {
      "Item1": "FindEvidence",
      "Item2": false,
      "Item3": "Use a specific evidence from below"
    },
    "spawnEvidence": {
      "Item1": "EvidencePreset",
      "Item2": false,
      "Item3": "Create an evidence class of below"
    },
    "locationIsParent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "On create evidence: Use the item's location as evidence parent"
    },
    "summaryMessageSource": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Use this DDS message ID for the summary"
    },
    "overrideEvidencePhotoSettings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "relativeCamPhotoPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "relativeCamPhotoEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "includeLock": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "lockOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "passwordSource": {
      "Item1": "RoomPasswordPreference",
      "Item2": false,
      "Item3": "Preferred password source"
    },
    "attemptedOpenSound": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": "Play this when attempted to open while locked"
    },
    "armLockOnClose": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The lock is armed when the door movement is closed"
    },
    "lockStrength": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "If this isn't an actual door, this is the lock strength range..."
    },
    "isSelfLock": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This object itself acts as the lock"
    },
    "useMaterialChanges": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "lockOffMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "lockOnMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "isComputer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a computer (cruncher)?"
    },
    "bootApp": {
      "Item1": "CruncherAppPreset",
      "Item2": false,
      "Item3": "The boot application"
    },
    "logInApp": {
      "Item1": "CruncherAppPreset",
      "Item2": false,
      "Item3": "The booted app (what this boots to)"
    },
    "desktopApp": {
      "Item1": "CruncherAppPreset",
      "Item2": false,
      "Item3": "The desktop app"
    },
    "additionalApps": {
      "Item1": "CruncherAppPreset",
      "Item2": true,
      "Item3": "Additional apps"
    },
    "fingerprintsEnabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Should there be fingerprints here?"
    },
    "printsSource": {
      "Item1": "PrintsSource",
      "Item2": false,
      "Item3": "The source of the prints"
    },
    "fingerprintDensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Fingerprint density"
    },
    "enableDynamicFingerprints": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Dynamic fingerprints will be left when an AI uses this"
    },
    "disableDynamicFingerprintsFromStaticPrintsSources": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overrideMaxDynamicFingerprints": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Override the default fingerprint maximum"
    },
    "maxDynamicFingerprints": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fpsItem": {
      "Item1": "FirstPersonItem",
      "Item2": false,
      "Item3": "If this is a first person item, the corresponding item ID"
    },
    "isInventoryItem": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fpsItemOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Offset of held item"
    },
    "fpsItemRotation": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "fpsItemScaleModifier": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "consumableAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The amount of consumable; consumed at 1 per second by the player"
    },
    "destroyWhenAllConsumed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Destroy when this is all consumed"
    },
    "useSameModelAsTrash": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Trash object"
    },
    "trashItem": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "playerConsumeLoop": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "takeOneEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "disposal": {
      "Item1": "DisposalType",
      "Item2": false,
      "Item3": ""
    },
    "chanceOfDroppedAngle": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "droppedAngleHeightBoost": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "weapon": {
      "Item1": "MurderWeaponPreset",
      "Item2": false,
      "Item3": ""
    },
    "inventoryCarryItem": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If in inventory, display object"
    },
    "requiredCarryAnimation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This required a carrying animation"
    },
    "aiCarryAnimation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If an AI can carry this, which carrying animation to play"
    },
    "aiHeldObjectPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "position object by this when AI is holding"
    },
    "aiHeldObjectRotation": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Rotate object by this when AI is holding"
    },
    "putDownAtHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The AI will put this down when at home"
    },
    "takeWith": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The AI will take this when they leave home"
    },
    "putDownPositions": {
      "Item1": "SubObjectClassPreset",
      "Item2": true,
      "Item3": ""
    },
    "backupPutDownPositions": {
      "Item1": "SubObjectClassPreset",
      "Item2": true,
      "Item3": ""
    },
    "specialCaseFlag": {
      "Item1": "SpecialCase",
      "Item2": false,
      "Item3": ""
    },
    "affectRoomSteamLevel": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Affect room steam amount with switch state 1"
    },
    "isPayphone": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This is a payphone"
    },
    "isClock": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This is a clock; use hourly chimes"
    },
    "isMoney": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will be a naming special case."
    },
    "entertainmentSource": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "According to AI, only 1 entertainment source should be active in a room"
    },
    "isHeatSource": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a heat source? Only active when switch 0 is on"
    },
    "markAsTrashOnCreate": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Mark this as trash as soon as it is created, for removal as soon as possible"
    },
    "isLitter": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If picked up, the AI will seek to put this in a bin/gets added to their carrying trash"
    },
    "isDecal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Will require an art asset sent to a decal projector"
    },
    "isMovableChair": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "bedRightSide": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "resetSwitchStates": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Resets switch states to starting configuration after x amount of time"
    },
    "resetTimer": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "dontSaveSwitchStates": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Don't save switch states"
    },
    "dontLoadSwitchStates": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Don't load switch states"
    },
    "recordCreationTime": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the game will record the creation time of this in passed variables"
    },
    "musicTracks": {
      "Item1": "AudioEvent",
      "Item2": true,
      "Item3": "If this is a music player: Track list"
    },
    "retailItem": {
      "Item1": "RetailItemPreset",
      "Item2": false,
      "Item3": "Is this a retailItem? If so here's the reference. This is set by having a RetailItem Preset that points to this."
    },
    "menuOverride": {
      "Item1": "MenuPreset",
      "Item2": false,
      "Item3": "If this is associated with a shop interface, override the location's menu with this one (useful for vending machines)"
    },
    "hourlyChime": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "chimeEqualToHour": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Do as many chimes as the hour dictates"
    },
    "chimeDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Delay between chimes if above is true"
    },
    "searchLoop": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": "Audio loop played on search"
    },
    "copyFrom": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "AIUseSetting": {
    "usageOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Usage point relative to the interactable. Calculated on spawn/move position."
    },
    "facingOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Look at point relative to the interactable. Calculated on spawn/move position."
    },
    "useNodeFloorPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this will use the parent node's floor Y value for the position"
    },
    "useDoorBehaviour": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, flip the Z axis usage offset depending on actor relative position to the door"
    },
    "useSittingOffset": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true use the citizen's sitting offset position"
    },
    "useArmsStandingOffset": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true use the citizen's standing offset position"
    }
  },
  "InteractionKey": {},
  "Switch": {},
  "SwitchState": {
    "switchState": {
      "Item1": "Switch",
      "Item2": false,
      "Item3": ""
    },
    "boolIs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "IfSwitchState": {
    "switchState": {
      "Item1": "Switch",
      "Item2": false,
      "Item3": ""
    },
    "boolIs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "IfSwitchStateSFX": {
    "switchState": {
      "Item1": "Switch",
      "Item2": false,
      "Item3": ""
    },
    "boolIs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "triggerAudio": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "isLoop": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isBroadcast": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isMusicPlayer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "stop": {
      "Item1": "StopType",
      "Item2": false,
      "Item3": ""
    },
    "passOpenParam": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Passes an open parameter to FMOD based on switch state"
    },
    "passCSParam": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Passes the consumable state parameter to FMOD based on switch state"
    },
    "passDoorDirParam": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pass door opening or closing direction"
    },
    "onlyIfInSyncBed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only if player is inside sync bed/chamber"
    },
    "onlyIfNotInSyncBed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only if player is not inside sync bed/chamber"
    },
    "onlyIfNeonSign": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only if this door features a neon sign"
    }
  },
  "InteractionAction": {
    "interactionName": {
      "Item1": "String",
      "Item2": false,
      "Item3": "The dictionary reference to this action's name"
    },
    "action": {
      "Item1": "AIActionPreset",
      "Item2": false,
      "Item3": "The action preset"
    },
    "useDefaultKeySetting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use the default key as found on the action preset..."
    },
    "keyOverride": {
      "Item1": "InteractionKey",
      "Item2": false,
      "Item3": "Which key will activate this?"
    },
    "specialCase": {
      "Item1": "SpecialCase",
      "Item2": false,
      "Item3": "Alter the interaction name based on special cases"
    },
    "usableByAI": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this usable by the AI"
    },
    "aiUsageDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "When AI is performing this, use a delay (seconds)"
    },
    "effectSwitchStates": {
      "Item1": "SwitchState",
      "Item2": true,
      "Item3": "This action effects these states"
    },
    "onlyActiveIf": {
      "Item1": "IfSwitchState",
      "Item2": true,
      "Item3": "This action is only enabled if the following is true"
    },
    "actionIsIllegal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this action illegal?"
    },
    "availableWhileIllegal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this action available while illegal?"
    },
    "availableWhileWitnessesToIllegal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If above is true, is this allowed when others have witnessed illegal activity?"
    },
    "onlyAvailableToRestrainedWhileIllegal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Force availability on restrained while illegal status is active"
    },
    "availableWhileLockedIn": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this action available while using a locked in action?"
    },
    "availableWhileJumping": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this action available while jumping?"
    },
    "actionCost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Cost of performing this action"
    },
    "useStrikethrough": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true when this action is unavailable, it will be striked through instead of invisible"
    },
    "isHidingPlace": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a hiding place?"
    },
    "onlyHidingPlaceIfPublic": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only a hiding place in areas classed as public"
    },
    "soundEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": "Sound event reference for this action"
    },
    "playOnTrigger": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this sound event will automatically be played on trigger. If false then this is just a reference for the sound indicator to known the sound level."
    }
  },
  "InteractableColourSetting": {},
  "ItemClass": {},
  "ApartmentPlacementMode": {},
  "AIUsePriority": {
    "actions": {
      "Item1": "AIActionPreset",
      "Item2": true,
      "Item3": ""
    },
    "AIPriority": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "AI will rank actions by this if there are multiple copies"
    },
    "pickDistanceMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "When chosing between interactables, how much to factor in the closest one?"
    }
  },
  "ObjectResetBehaviour": {
    "ifSwitchState": {
      "Item1": "Switch",
      "Item2": false,
      "Item3": ""
    },
    "ifSwitchBool": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ifCondition": {
      "Item1": "ObjectResetCondition",
      "Item2": false,
      "Item3": ""
    },
    "ifGoal": {
      "Item1": "AIGoalPreset",
      "Item2": false,
      "Item3": ""
    },
    "scope": {
      "Item1": "ObjectResetScope",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfObjectBelongsTo": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfAuthority": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfLastOccupant": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "onlyIfHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "insertActions": {
      "Item1": "AIActionPreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "ObjectResetCondition": {},
  "ObjectResetScope": {},
  "ReadingModeSource": {},
  "AutoPlacement": {},
  "TraitPick": {
    "rule": {
      "Item1": "RuleType",
      "Item2": false,
      "Item3": ""
    },
    "traitList": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "mustPassForApplication": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this isn't true then it won't be picked for application at all."
    },
    "appliedFrequency": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "OwnedPlacementRule": {},
  "RelocationAuthority": {},
  "FindEvidence": {},
  "SubSpawnSlot": {
    "localPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "localEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    }
  },
  "JobPreset": {
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable this in-game completely."
    },
    "caseName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "jobPosting": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "subClass": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Spawn this subclass. If left empty it will use the base class."
    },
    "allowSyncDiskRewards": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowBlackMarketSyncDiskRewards": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "physicalRewardLocation": {
      "Item1": "RewardLocation",
      "Item2": false,
      "Item3": ""
    },
    "generateHidingLocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Generates an item hiden location on acceptance"
    },
    "socialCreditLevelMinSpawnFrequency": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Spawn this job according to social credit level"
    },
    "activePerCitizen": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The number of these jobs that should be active at one time, per citizen."
    },
    "maxJobs": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Hard limit on maximum jobs spawned"
    },
    "immediatePostCountThreshold": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If posted jobs count is below this, then spawn them immediately"
    },
    "difficultyTag": {
      "Item1": "DifficultyTag",
      "Item2": false,
      "Item3": ""
    },
    "changePosterDialogCompliancy": {
      "Item1": "ParticipantCompliancy",
      "Item2": false,
      "Item3": ""
    },
    "changePerpDialogCompliancy": {
      "Item1": "ParticipantCompliancy",
      "Item2": false,
      "Item3": ""
    },
    "purpetratorMotives": {
      "Item1": "MotivePreset",
      "Item2": true,
      "Item3": ""
    },
    "penaltyForPurpAndPosterSameBuilding": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Minus this from the score if the purp and poster live in the same building"
    },
    "startingScenarios": {
      "Item1": "StartingScenario",
      "Item2": true,
      "Item3": "Possible starting scenarios for this job"
    },
    "compatibleIntros": {
      "Item1": "IntroConfig",
      "Item2": true,
      "Item3": "Scenarios that will reveal the required information for the task"
    },
    "leadPoolData": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How many entries from the general lead pool should we add?"
    },
    "createFactsOnInformationAcquisition": {
      "Item1": "FactCreation",
      "Item2": true,
      "Item3": ""
    },
    "informationAcquisitionLeads": {
      "Item1": "StartingLead",
      "Item2": true,
      "Item3": ""
    },
    "revengeObjectives": {
      "Item1": "RevengeObjective",
      "Item2": true,
      "Item3": ""
    },
    "spawnItems": {
      "Item1": "StartingSpawnItem",
      "Item2": true,
      "Item3": ""
    },
    "resolveQuestions": {
      "Item1": "ResolveQuestion",
      "Item2": true,
      "Item3": ""
    },
    "additional": {
      "Item1": "SideMissionObjectiveBlock",
      "Item2": true,
      "Item3": ""
    },
    "compatibleHandIns": {
      "Item1": "HandInConfig",
      "Item2": true,
      "Item3": "Scenarios that will reveal the required information for the task"
    },
    "dialogReferences": {
      "Item1": "DialogReference",
      "Item2": true,
      "Item3": ""
    },
    "debugCopyFrom": {
      "Item1": "JobPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "JobTag": {},
  "StartingScenario": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "dds": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "leads": {
      "Item1": "StartingLead",
      "Item2": true,
      "Item3": ""
    }
  },
  "StartingLead": {
    "leadEvidence": {
      "Item1": "LeadEvidence",
      "Item2": false,
      "Item3": ""
    },
    "keys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "useKeyFromLeadPool": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Add to the above with keys from the lead pool (chosen first)"
    },
    "autoPin": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "addDialogOptions": {
      "Item1": "DialogPreset",
      "Item2": true,
      "Item3": "Add these dialog options to the above person"
    },
    "factsReveal": {
      "Item1": "String",
      "Item2": true,
      "Item3": "Add this fact link to the post facts section"
    },
    "mergeKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "discoveryApplication": {
      "Item1": "Discovery",
      "Item2": true,
      "Item3": ""
    }
  },
  "FactCreation": {
    "factPreset": {
      "Item1": "FactPreset",
      "Item2": false,
      "Item3": ""
    },
    "from": {
      "Item1": "LeadEvidence",
      "Item2": false,
      "Item3": ""
    },
    "to": {
      "Item1": "LeadEvidence",
      "Item2": false,
      "Item3": ""
    },
    "overrideFromKeys": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fromKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "featureKeysFromLeadPool": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overrideToKeys": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "toKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": ""
    },
    "featureKeysFromLeadPoolTo": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "LeadEvidence": {},
  "BasicLeadPool": {},
  "LeadCitizen": {},
  "JobSpawnWhere": {},
  "DifficultyTag": {},
  "JobModifierRule": {
    "who": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "rule": {
      "Item1": "RuleType",
      "Item2": false,
      "Item3": ""
    },
    "traitList": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "mustPassForApplication": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this isn't true then it won't be picked for application at all."
    },
    "chanceModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Add this to a default priority multiplier of 1."
    }
  },
  "StartingSpawnItem": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "findExisting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Try and find an existing interactable that matches this criteria..."
    },
    "compatibleWithMotives": {
      "Item1": "MotivePreset",
      "Item2": true,
      "Item3": ""
    },
    "compatibleWithAllMotives": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "chance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "traitModifiers": {
      "Item1": "JobModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "useIf": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ifTag": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": "Only spawn if a previous object of this letter is spawned..."
    },
    "useOrGroup": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "orGroup": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": "If enabled, only one chosen item from this group will be spawned..."
    },
    "chanceRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "disableOnDifficulties": {
      "Item1": "DifficultyTag",
      "Item2": true,
      "Item3": ""
    },
    "itemTag": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": ""
    },
    "spawnItem": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": "What?"
    },
    "vmailThread": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "vmailProgressThreshold": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "where": {
      "Item1": "JobSpawnWhere",
      "Item2": false,
      "Item3": "Where?"
    },
    "belongsTo": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "writer": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "receiver": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "security": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "priority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ownershipRule": {
      "Item1": "OwnedPlacementRule",
      "Item2": false,
      "Item3": ""
    }
  },
  "HandInLocation": {
    "who": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    }
  },
  "IntroConfig": {
    "preset": {
      "Item1": "SideMissionIntroPreset",
      "Item2": false,
      "Item3": ""
    },
    "frequency": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "HandInConfig": {
    "preset": {
      "Item1": "SideMissionHandInPreset",
      "Item2": false,
      "Item3": ""
    },
    "frequency": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "RewardLocation": {},
  "ParticipantCompliancy": {},
  "DialogReference": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "dialog": {
      "Item1": "DialogPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "LayoutConfiguration": {
    "assignPurpose": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "addressPreset": {
      "Item1": "AddressPreset",
      "Item2": false,
      "Item3": ""
    },
    "publicFacing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isOutside": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isLobby": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "roomLayout": {
      "Item1": "RoomTypePreset",
      "Item2": true,
      "Item3": ""
    },
    "requiresHallway": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This room may require an internal hallway to connect far rooms"
    },
    "hallway": {
      "Item1": "RoomConfiguration",
      "Item2": false,
      "Item3": ""
    },
    "hallwayDistanceThreshold": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How far away a room is from the entrance to place a hallway (nodes)."
    },
    "useBuildingDesignStyle": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use the building's default design style"
    },
    "overrideEvidencePhotoSettings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "relativeCamPhotoPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "relativeCamPhotoEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "doorwaysNormal": {
      "Item1": "DoorPairPreset",
      "Item2": true,
      "Item3": ""
    },
    "doorwaysFlat": {
      "Item1": "DoorPairPreset",
      "Item2": true,
      "Item3": ""
    },
    "roomDividersLeft": {
      "Item1": "DoorPairPreset",
      "Item2": true,
      "Item3": ""
    },
    "roomDividersCentre": {
      "Item1": "DoorPairPreset",
      "Item2": true,
      "Item3": ""
    },
    "roomDividersRight": {
      "Item1": "DoorPairPreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "LightingPreset": {
    "coolColours": {
      "Item1": "WindowColour",
      "Item2": true,
      "Item3": "Cool Colours"
    },
    "warmColours": {
      "Item1": "WindowColour",
      "Item2": true,
      "Item3": "Warm Colours"
    },
    "defaultIntensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If no room is assigned, use this intensity"
    },
    "defaultRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "intensityRoomSizeMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "how much the intensity changes per room size, also range"
    },
    "intensityRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Clamped intensity range"
    },
    "fadeOnOff": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Fade in or out when turned on or off"
    },
    "fadeSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Fade in/out by this speed"
    },
    "onByDefault": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "When setup, set the light"
    },
    "fadeDistance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Distance at which the emission is culled completely"
    },
    "useBroadcastMaterial": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, uses the tv broadcast material"
    },
    "useOnMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": "Use an alternate material when on (shared)"
    },
    "useInstancedEmissive": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Dynamically alter emissive (create instanced material)"
    },
    "emissionMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Emmission multiplier"
    },
    "isAtriumLight": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Special option to make this hang down"
    },
    "minimumFloors": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "What is the minimum number of floors this atrium covers before it is allowed to feature this light?"
    },
    "cablePrefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "bulbPrefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "endBulbPrefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "heightInterval": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Spawn a bulb every x metres"
    },
    "allowCeilingFans": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can this light also spawn a ceiling fan? Must be set up in lighting config"
    },
    "enableVolumetrics": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "atmosphereMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The atmosphere setting in the room preset is multiplied by this"
    },
    "enableShadows": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shadowMode": {
      "Item1": "ShadowMode",
      "Item2": false,
      "Item3": ""
    },
    "resolution": {
      "Item1": "ShadowResolution",
      "Item2": false,
      "Item3": ""
    },
    "shadowFadeDistance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Distance at which shadows are culled completely."
    },
    "chanceOfFlicker": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "flickerMultiplierRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "When flickering, use this multiplier on the flicker colour to determin the actual colour (basically a darker version of flicker colour)"
    },
    "flickerPulseRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "When flickering, how fast it pulses"
    },
    "flickerIntervalRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Flickering lasts this long"
    },
    "flickerNormalityIntervalRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Intervals between flickering are this long"
    }
  },
  "ShadowMode": {},
  "ShadowResolution": {},
  "MatchPreset": {
    "canOnlyBeMatchedWith": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "True if this match preset can only be matched with"
    },
    "matchConditions": {
      "Item1": "MatchCondition",
      "Item2": true,
      "Item3": "These conditions must return true for it to register as a match. No conditions will result in a match between evidence with this match preset."
    },
    "onlyMatchWithMatchParents": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only match with a match parent, and not with non-parents"
    },
    "canMatchWithItself": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can this match with evidence that is technically itself?"
    },
    "onlyMatchWithThis": {
      "Item1": "MatchPreset",
      "Item2": false,
      "Item3": "Only match with evidence with this other match condition"
    },
    "linkFromKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": "Link from data key"
    },
    "linkToKeys": {
      "Item1": "DataKey",
      "Item2": true,
      "Item3": "Link to data key"
    }
  },
  "MatchCondition": {},
  "MaterialGroupPreset": {
    "material": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "variations": {
      "Item1": "MaterialVariation",
      "Item2": true,
      "Item3": ""
    },
    "concrete": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "plaster": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wood": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "carpet": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "tile": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "metal": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "glass": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fabric": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "noFloorReplacement": {
      "Item1": "MaterialGroupPreset",
      "Item2": false,
      "Item3": "If this is assigned and the node has no floor, instead use this material."
    },
    "allowFootprints": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "affectFootprintDirt": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "grubFootprintDirtMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If this material is grubby, use this multiplier to add to footprint dirt"
    },
    "materialType": {
      "Item1": "MaterialType",
      "Item2": false,
      "Item3": ""
    },
    "minimumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "designStyles": {
      "Item1": "MaterialSettings",
      "Item2": true,
      "Item3": ""
    },
    "allowedRoomFilters": {
      "Item1": "RoomTypeFilter",
      "Item2": true,
      "Item3": "The furniture is only allowed in these room types"
    },
    "purchasable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "price": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "decorSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    }
  },
  "MaterialType": {},
  "MaterialColour": {},
  "MaterialVariation": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "main": {
      "Item1": "MaterialColour",
      "Item2": false,
      "Item3": ""
    },
    "colour1": {
      "Item1": "MaterialColour",
      "Item2": false,
      "Item3": ""
    },
    "colour2": {
      "Item1": "MaterialColour",
      "Item2": false,
      "Item3": ""
    },
    "colour3": {
      "Item1": "MaterialColour",
      "Item2": false,
      "Item3": ""
    }
  },
  "MenuPreset": {
    "itemsSold": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    },
    "createReceipt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true a receipt will always be created with these items..."
    },
    "purchaseAudio": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "syncDiskSlots": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "fromManufacturers": {
      "Item1": "Manufacturer",
      "Item2": true,
      "Item3": ""
    },
    "syncDisks": {
      "Item1": "SyncDiskPreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "MotivePreset": {
    "allowHomelessPurps": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowJoblessPurps": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "purpMustLiveAtDifferentAddressToPoster": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowEnforcers": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disallowEchelonHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "purpTraitModifiers": {
      "Item1": "ModifierRule",
      "Item2": true,
      "Item3": "Purps must follow these trait rules"
    },
    "usePurpJobs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Purp must have one of these jobs..."
    },
    "purpJobs": {
      "Item1": "OccupationPreset",
      "Item2": true,
      "Item3": ""
    },
    "allowHomelessPosters": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowJoblessPosters": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "usePosterConnections": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "acceptableConnections": {
      "Item1": "ConnectionType",
      "Item2": true,
      "Item3": "Posters must be one of these connections (poster connection to purp)..."
    },
    "usePosterTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "posterTraitModifiers": {
      "Item1": "ModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "purpIsExemptFromPostingOtherJobs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The chosen purp is exempt from further side jobs."
    },
    "purpIsExemptFromPurpingOtherJobs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "posterIsExemptFromPostingOtherJobs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The chosen poster is exempt from further side jobs."
    },
    "posterIsExemptFromPurpingOtherJobs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ModifierRule": {
    "rule": {
      "Item1": "RuleType",
      "Item2": false,
      "Item3": ""
    },
    "traitList": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "mustPassForApplication": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this isn't true then it won't be picked for application at all."
    },
    "score": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "MurderMO": {
    "notes": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "compatibleWith": {
      "Item1": "MurderPreset",
      "Item2": true,
      "Item3": "Compatible with these killer types"
    },
    "baseDifficulty": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "maximumPotentialScore": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "updateThis": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pickRandomScoreRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "murdererTraitModifiers": {
      "Item1": "MurdererModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "murdererJobModifiers": {
      "Item1": "JobModifier",
      "Item2": true,
      "Item3": ""
    },
    "murdererCompanyModifiers": {
      "Item1": "CompanyModifier",
      "Item2": true,
      "Item3": ""
    },
    "useMurdererSocialClassRange": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "murdererClassRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "murdererClassRangeBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useHexaco": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "hexaco": {
      "Item1": "HEXACO",
      "Item2": false,
      "Item3": ""
    },
    "requiresSniperVantageAtHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Ensures the killer will have sniper vantage points at home. Victim's home has to be within line-of-sight of this."
    },
    "weaponsPool": {
      "Item1": "MurderWeaponsPool",
      "Item2": true,
      "Item3": ""
    },
    "blockDroppingWeapons": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Block weapons from being dropped at scene"
    },
    "allowAnywhere": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The murder can happen anywhere"
    },
    "allowHome": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The murder can happen at home"
    },
    "allowWork": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The murder can happen at work"
    },
    "allowPublic": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The murder can happen in public"
    },
    "allowStreets": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The murder can happen in public"
    },
    "allowDen": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The murder can happen at the killers den"
    },
    "denFurniture": {
      "Item1": "FurnitureCluster",
      "Item2": true,
      "Item3": ""
    },
    "denStyleOverride": {
      "Item1": "DesignStylePreset",
      "Item2": true,
      "Item3": ""
    },
    "denItems": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    },
    "acquaintedSuitabilityBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "attractedToSuitabilityBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "likeSuitabilityBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The following is multiplied by the like value in acquaintance class."
    },
    "sameWorkplaceBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "murdererIsTenantBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "victimRandomScoreRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "victimTraitModifiers": {
      "Item1": "MurdererModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "victimJobModifiers": {
      "Item1": "JobModifier",
      "Item2": true,
      "Item3": ""
    },
    "victimCompanyModifiers": {
      "Item1": "CompanyModifier",
      "Item2": true,
      "Item3": ""
    },
    "useVictimSocialClassRange": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "victimClassRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "victimClassRangeBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "monkierDDSMessageList": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "confessionalDDSResponses": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "MOleads": {
      "Item1": "MurderLeadItem",
      "Item2": true,
      "Item3": ""
    },
    "graffiti": {
      "Item1": "Graffiti",
      "Item2": true,
      "Item3": ""
    },
    "callingCardPool": {
      "Item1": "CallingCardPick",
      "Item2": true,
      "Item3": ""
    },
    "playerTaunts": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "CallingCardPick": {
    "item": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": "The item itself"
    },
    "origin": {
      "Item1": "CallingCardOrigin",
      "Item2": false,
      "Item3": ""
    },
    "randomScoreRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "traitModifiers": {
      "Item1": "MurdererModifierRule",
      "Item2": true,
      "Item3": ""
    }
  },
  "CallingCardOrigin": {},
  "Graffiti": {
    "preset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "pos": {
      "Item1": "GraffitiPosition",
      "Item2": false,
      "Item3": ""
    },
    "artImage": {
      "Item1": "ArtPreset",
      "Item2": false,
      "Item3": ""
    },
    "ddsMessageTextList": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "size": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "GraffitiPosition": {},
  "JobModifier": {
    "jobs": {
      "Item1": "OccupationPreset",
      "Item2": true,
      "Item3": ""
    },
    "jobBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CompanyModifier": {
    "companies": {
      "Item1": "CompanyPreset",
      "Item2": true,
      "Item3": ""
    },
    "mininumEmployees": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "companyBoost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "boostPerEmployeeOverMinimum": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Add even more for employee count over the minimum"
    }
  },
  "MurderPreset": {
    "caseType": {
      "Item1": "CaseType",
      "Item2": false,
      "Item3": ""
    },
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "frequency": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How often this is picked compared to others..."
    },
    "murdererRandomScoreRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "murdererTraitModifiers": {
      "Item1": "MurdererModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "useHexaco": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "hexaco": {
      "Item1": "HEXACO",
      "Item2": false,
      "Item3": ""
    },
    "pickDen": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Pick a den"
    },
    "kidnapperTimeUntilKill": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "minimumTimeBetweenMurders": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "nonHomeMaximumOccupantsTrigger": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "When not at home, how many occupants are allowed here at maximum for the murder to trigger at this location"
    },
    "nonHomeMaximumOccupantsCancel": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "When not at home, how many occupants are allowed here at maximum for the triggered murder to be cancelled"
    },
    "requiresAcquirePhase": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "acquirePassInteractable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "acquirePassRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "acquireActionSetup": {
      "Item1": "GoalActionSetup",
      "Item2": true,
      "Item3": ""
    },
    "requiresResearchPhase": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this require a research state?"
    },
    "killerMeetsVicim": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "researchPassInteractable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "researchPassRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "researchActionSetup": {
      "Item1": "GoalActionSetup",
      "Item2": true,
      "Item3": ""
    },
    "blockVictimFromLeavingLocation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Once the murderer has started travelling, block the victim from leaving their location..."
    },
    "travelSuccessTrigger": {
      "Item1": "SuccessfulTravelTrigger",
      "Item2": false,
      "Item3": ""
    },
    "travelPassInteractable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "travelPassRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "travelActionSetup": {
      "Item1": "GoalActionSetup",
      "Item2": true,
      "Item3": ""
    },
    "executePassInteractable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "executePassRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "executionActionSetup": {
      "Item1": "GoalActionSetup",
      "Item2": true,
      "Item3": ""
    },
    "postPassInteractable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "postPassRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "postActionSetup": {
      "Item1": "GoalActionSetup",
      "Item2": true,
      "Item3": ""
    },
    "escapePassInteractable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "escapePassRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "escapeActionSetup": {
      "Item1": "GoalActionSetup",
      "Item2": true,
      "Item3": ""
    },
    "leads": {
      "Item1": "MurderLeadItem",
      "Item2": true,
      "Item3": ""
    },
    "useCustomResolveQuestions": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true the case will use custom resolve questions"
    },
    "customResolveQuestions": {
      "Item1": "ResolveQuestion",
      "Item2": true,
      "Item3": ""
    },
    "copyFrom": {
      "Item1": "MurderPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "MurdererModifierRule": {
    "rule": {
      "Item1": "RuleType",
      "Item2": false,
      "Item3": ""
    },
    "traitList": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "mustPassForApplication": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this isn't true then it won't be picked for application at all."
    },
    "scoreModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Add this to a default priority multiplier of 1."
    }
  },
  "SuccessfulTravelTrigger": {},
  "LeadSpawnWhere": {},
  "MurderModifierRule": {
    "who": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "rule": {
      "Item1": "RuleType",
      "Item2": false,
      "Item3": ""
    },
    "traitList": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "mustPassForApplication": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this isn't true then it won't be picked for application at all."
    },
    "chanceModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Add this to a default priority multiplier of 1."
    }
  },
  "MurderLeadItem": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "compatibleWithAllMotives": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "compatibleWithMotives": {
      "Item1": "MurderMO",
      "Item2": true,
      "Item3": ""
    },
    "spawnOnPhase": {
      "Item1": "MurderState",
      "Item2": false,
      "Item3": ""
    },
    "tryToSpawnWithEachNewMurder": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "belongsTo": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "chance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "traitModifiers": {
      "Item1": "MurderModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "useIf": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ifTag": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": "Only spawn if a previous object of this letter is spawned..."
    },
    "useOrGroup": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "orGroup": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": "If enabled, only one chosen item from this group will be spawned..."
    },
    "chanceRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "itemTag": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": ""
    },
    "spawnItem": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": "What?"
    },
    "vmailThread": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "vmailProgressThreshold": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "writer": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "receiver": {
      "Item1": "LeadCitizen",
      "Item2": false,
      "Item3": ""
    },
    "vmailOtherParticipants": {
      "Item1": "LeadCitizen",
      "Item2": true,
      "Item3": ""
    },
    "where": {
      "Item1": "LeadSpawnWhere",
      "Item2": false,
      "Item3": "Where?"
    },
    "security": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "priority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "ownershipRule": {
      "Item1": "OwnedPlacementRule",
      "Item2": false,
      "Item3": ""
    }
  },
  "MurderWeaponPreset": {
    "type": {
      "Item1": "WeaponType",
      "Item2": false,
      "Item3": ""
    },
    "ammunition": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    },
    "murderDifficultyModifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "muzzleOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Local muzzle position relative to the pivot"
    },
    "brassEjectOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Local brass eject relative to the pivot"
    },
    "itemRightOverride": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "itemRightLocalPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "itemRightLocalEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "itemLeftOverride": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "itemLeftLocalPos": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "itemLeftLocalEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "overideUsesCarryAnimation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overrideCarryAnimation": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "usedInPersonalDefence": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, citizens may carry this about to defend themselves"
    },
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "basePriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "socialClassRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "citizenSpawningWithScore": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "personalDefenceTraitModifiers": {
      "Item1": "MurdererModifierRule",
      "Item2": true,
      "Item3": ""
    },
    "jobModifierList": {
      "Item1": "OccupationPreset",
      "Item2": true,
      "Item3": ""
    },
    "jobScoreModifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "drawnNerveModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How this impacts nerve levels of a citizen if drawn"
    },
    "barkTriggerChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance of bark trigger"
    },
    "bark": {
      "Item1": "Bark",
      "Item2": false,
      "Item3": ""
    },
    "incomingNerveDamageMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "With this weapon, multiply incoming nerve damage by this"
    },
    "attackTriggerPoint": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "At what point during the attack is the trigger executed? Normalized value"
    },
    "attackRemovePoint": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "At what point during the attack is the trigger removed? Normalized value"
    },
    "shots": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How many shots are fired?"
    },
    "weaponMaxRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Weapon range"
    },
    "minimumRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maximumBulletRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "weaponRangeLerpSource": {
      "Item1": "StatMultiplier",
      "Item2": false,
      "Item3": ""
    },
    "fireDelay": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Time in seconds between attacks"
    },
    "fireDelayLerpSource": {
      "Item1": "StatMultiplier",
      "Item2": false,
      "Item3": ""
    },
    "attackAccuracy": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Attack accuracy"
    },
    "attackAccuracyLerpSource": {
      "Item1": "StatMultiplier",
      "Item2": false,
      "Item3": ""
    },
    "attackDamage": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Attack damage"
    },
    "attackDamageLerpSource": {
      "Item1": "StatMultiplier",
      "Item2": false,
      "Item3": ""
    },
    "applyPoison": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "shellCasing": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "ejectBrassSetting": {
      "Item1": "EjectBrass",
      "Item2": false,
      "Item3": ""
    },
    "bulletHole": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "glassBulletHole": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "entryWound": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "bulletRicochet": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "bulletImpactSpray": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "muzzleFlash": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "bloodPoolAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "forwardSpatter": {
      "Item1": "SpatterPatternPreset",
      "Item2": false,
      "Item3": ""
    },
    "backSpatter": {
      "Item1": "SpatterPatternPreset",
      "Item2": false,
      "Item3": ""
    },
    "fireEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "impactEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "impactEventBody": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "impactEventPlayer": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    }
  },
  "WeaponType": {},
  "StatMultiplier": {},
  "EjectBrass": {},
  "AttackValue": {},
  "MurderWeaponsPool": {
    "murderWeaponPool": {
      "Item1": "MurderWeaponPick",
      "Item2": true,
      "Item3": ""
    }
  },
  "MurderWeaponPick": {
    "weapon": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": "The weapon itself"
    },
    "chanceOfDroppingAtScene": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance of killer dropping this at scene"
    },
    "randomScoreRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "traitModifiers": {
      "Item1": "MurdererModifierRule",
      "Item2": true,
      "Item3": ""
    }
  },
  "MusicCue": {
    "fmodGUID": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "debug": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "playOnce": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, only play this track once per game"
    },
    "interrupt": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then when it's appropraite to play this ambient, it will stop a previously playing one."
    },
    "stopOnIncompatibleStateSwitch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then this track will stop when the ambient state is switched to something that's not compatible"
    },
    "avoidRepetition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this track will avoid repetition as much as possible by playing other tracks of the same priority when available"
    },
    "ambientPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The game will choose between the highest available priority tracks. Higher plays first."
    },
    "triggers": {
      "Item1": "MusicTrigger",
      "Item2": true,
      "Item3": ""
    }
  },
  "MusicTriggerGameState": {},
  "MusicTriggerPlayerState": {},
  "MusicTriggerPlayerLocation": {},
  "MusicTriggerEvent": {},
  "MusicTrigger": {
    "onGameState": {
      "Item1": "MusicTriggerGameState",
      "Item2": false,
      "Item3": ""
    },
    "cutSceneReference": {
      "Item1": "CutScenePreset",
      "Item2": false,
      "Item3": ""
    },
    "onPlayerSate": {
      "Item1": "MusicTriggerPlayerState",
      "Item2": false,
      "Item3": ""
    },
    "onPlayerLocation": {
      "Item1": "MusicTriggerPlayerLocation",
      "Item2": false,
      "Item3": ""
    },
    "onEvent": {
      "Item1": "MusicTriggerEvent",
      "Item2": false,
      "Item3": ""
    },
    "eventTriggerChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "triggerOnlyOnEvents": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ignoreSilentTimeBetweenTracks": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will be triggered regardless of the time between tracks"
    },
    "onlyInDistricts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "compatibleDistricts": {
      "Item1": "DistrictPreset",
      "Item2": true,
      "Item3": ""
    },
    "excludeDistricts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "excludedDistricts": {
      "Item1": "DistrictPreset",
      "Item2": true,
      "Item3": ""
    },
    "onlyInBuildings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "compatibleBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    },
    "excludeBuildings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "excludedBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    },
    "onlyInLocations": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "compatibleAddressTypes": {
      "Item1": "AddressPreset",
      "Item2": true,
      "Item3": ""
    },
    "excludeLocations": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "excludedAddressTypes": {
      "Item1": "AddressPreset",
      "Item2": true,
      "Item3": ""
    },
    "onlyDuringStatuses": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "compatibleStatuses": {
      "Item1": "StatusPreset",
      "Item2": true,
      "Item3": ""
    },
    "excludeStatuses": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "excludedStatuses": {
      "Item1": "StatusPreset",
      "Item2": true,
      "Item3": ""
    },
    "useDecorGrimeRange": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "grimeRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "floorRanges": {
      "Item1": "Vector2",
      "Item2": true,
      "Item3": ""
    },
    "timeRanges": {
      "Item1": "Vector2",
      "Item2": true,
      "Item3": ""
    }
  },
  "NeonSignCharacters": {
    "characterList": {
      "Item1": "NeonCharacter",
      "Item2": true,
      "Item3": ""
    }
  },
  "NeonCharacter": {
    "character": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "prefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    }
  },
  "NewspaperArticle": {
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "ddsReference": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "category": {
      "Item1": "Category",
      "Item2": false,
      "Item3": ""
    },
    "followupStories": {
      "Item1": "NewspaperArticle",
      "Item2": true,
      "Item3": "The next generated newspaper will try to feature one of the following"
    },
    "context": {
      "Item1": "ContextSource",
      "Item2": false,
      "Item3": ""
    }
  },
  "Category": {},
  "ContextSource": {},
  "OccupationPreset": {
    "work": {
      "Item1": "workType",
      "Item2": false,
      "Item3": "Type of work"
    },
    "tags": {
      "Item1": "workTags",
      "Item2": true,
      "Item3": "Additional tags to describe this work"
    },
    "jobFillPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The higher the priority, the more chance the position will be filled"
    },
    "workOutfit": {
      "Item1": "ClothesPreset",
      "Item2": true,
      "Item3": "If this job requires a certain work outfit, list it here..."
    },
    "selfEmployed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "receptionist": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "canAskAboutJob": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "janitor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "security": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isCriminal": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "isPublicFacing": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "minimumPerCity": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "societalClass": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "skewPersonalityTowardsJobFit": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Personality is calculated after job assign; how much to scew personality towards this..."
    },
    "skewHumility": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "humility": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Honesty-Humility (H): sincere, honest, faithful, loyal, modest/unassuming versus sly, deceitful, greedy, pretentious, hypocritical, boastful, pompous"
    },
    "skewEmotionality": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "emotionality": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Emotionality (E): emotional, oversensitive, sentimental, fearful, anxious, vulnerable versus brave, tough, independent, self-assured, stable"
    },
    "skewExtraversion": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "extraversion": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Extraversion (X): outgoing, lively, extraverted, sociable, talkative, cheerful, active versus shy, passive, withdrawn, introverted, quiet, reserved"
    },
    "skewAgreeableness": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "agreeableness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Agreeableness (A): patient, tolerant, peaceful, mild, agreeable, lenient, gentle versus ill-tempered, quarrelsome, stubborn, choleric"
    },
    "skewConscientiousness": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "conscientiousness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Conscientiousness (C): organized, disciplined, diligent, careful, thorough, precise versus sloppy, negligent, reckless, lazy, irresponsible, absent-minded"
    },
    "skewCreativity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "creativity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Openness to Experience (O): intellectual, creative, unconventional, innovative, ironic versus shallow, unimaginative, conventional"
    },
    "shiftTimeIsImportant": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Find a shift matching the below enum"
    },
    "shiftType": {
      "Item1": "ShiftType",
      "Item2": false,
      "Item3": "The employee works this shift (if available)"
    },
    "countsTowardsOpenHoursCoverage": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this job count towards the open coverage of the shift they have?"
    },
    "lunchBreakAllowed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The employee can take a break half way through their shift"
    },
    "jobAIPosition": {
      "Item1": "JobAI",
      "Item2": false,
      "Item3": "Where should the AI go to upon starting the goal?"
    },
    "bannedRooms": {
      "Item1": "RoomConfiguration",
      "Item2": true,
      "Item3": "If AI behaviour is set to patrol, are there any rooms in which it is not allowed?"
    },
    "actionSetup": {
      "Item1": "GoalActionSetup",
      "Item2": true,
      "Item3": "The list of actions the AI will perform inside the 'Work' goal."
    },
    "jobPostion": {
      "Item1": "SpecialCase",
      "Item2": false,
      "Item3": "What interactable will the AI work from?"
    },
    "ownsWorkPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does the AI own their own version of above? If not they will use free available ones."
    },
    "preferredRooms": {
      "Item1": "RoomConfiguration",
      "Item2": true,
      "Item3": "Where should the AI start to search for their work place?"
    },
    "potterFrequency": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "How often should the AI get up and do other tasks. Time range (game time)"
    },
    "onlyPotterIfSomebodyElseWorking": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true the AI will only potter if there is at least 1 other staff memeber on it's work postion interactable type"
    },
    "potterActions": {
      "Item1": "AIActionPreset",
      "Item2": true,
      "Item3": "List of other tasks to randomly do while on the job."
    },
    "canPickUpLitter": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allows clean up actions to be inserted which will allow the AI to pick things up from the floor"
    },
    "namePlacard": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This person has a name placard at work"
    },
    "employeePhoto": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This person has an employee photo"
    },
    "businessCards": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This person has business cards"
    },
    "workRota": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This person has a work rota"
    },
    "employmentContract": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This person has an employment contract"
    },
    "jobItems": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": "List of items to add once this job position is filled"
    },
    "inventoryItems": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": "List of items to add to inventory"
    },
    "joinGroups": {
      "Item1": "GroupPreset",
      "Item2": true,
      "Item3": ""
    },
    "addDialog": {
      "Item1": "DialogPreset",
      "Item2": true,
      "Item3": ""
    },
    "selectedPreset": {
      "Item1": "OccupationPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "workType": {},
  "ShiftType": {},
  "JobAI": {},
  "workTags": {},
  "Overtime": {},
  "ParticleEffect": {
    "damageBreakPoint": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The relative velocity this has to be travelling at on collision to break"
    },
    "deleteObject": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Deletes the object completely"
    },
    "effectPrefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "shatter": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shardSize": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "The size of the shards created"
    },
    "shardEveryXPixels": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Create a shard every this amount of pixels on the texture"
    },
    "shatterForceMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isGlass": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use a glass shard material"
    },
    "spatterTrigger": {
      "Item1": "SpatterTrigger",
      "Item2": false,
      "Item3": ""
    },
    "spatter": {
      "Item1": "SpatterPatternPreset",
      "Item2": false,
      "Item3": ""
    },
    "countMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "stickToActors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "spatterIsVandalism": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "vandalismFine": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "creationTrigger": {
      "Item1": "SpatterTrigger",
      "Item2": false,
      "Item3": ""
    },
    "objectPool": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "instances": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useRandomRotation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "localEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "impactEvents": {
      "Item1": "AudioEvent",
      "Item2": true,
      "Item3": ""
    },
    "breakEvents": {
      "Item1": "AudioEvent",
      "Item2": true,
      "Item3": ""
    }
  },
  "SpatterTrigger": {},
  "PhysicsProfile": {
    "mass": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Mass of the object when physics is enabled"
    },
    "drag": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "'How much air resistance affects the object when moving from forces. 0 means no air resistance, and infinity makes the object stop moving immediately.'"
    },
    "angularDrag": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "'How much air resistance affects the object when rotating from torque. 0 means no air resistance. Note that you cannot make the object stop rotating just by setting its Angular Drag to infinity.'"
    },
    "heldEuler": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "If the object is held, it will default to this euler"
    },
    "tamperDistanceModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Add this on to the base tamper distance before it is considered a crime"
    },
    "throwForceMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Muliply the throw force in the gameplay settings by this."
    },
    "throwDamageMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Multiply any damage caused by throw impact with this"
    },
    "treatAsCausedByPlayer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Treat the audio event as caused by player, therefore making AI react to it"
    },
    "collisionMode": {
      "Item1": "CollisionDetectionMode",
      "Item2": false,
      "Item3": "The default collision detection mode"
    },
    "removeOnReset": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, this will be destroyed/removed if it's position needs to be reset. If false it will be reset to spawn position."
    },
    "physicsCollisionAudio": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": "Physics collisions use this sound"
    },
    "useDifferentSoundForWallImpacts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "wallCollisionAudio": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    }
  },
  "PlayerTransitionPreset": {
    "transitionTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Transition speed in seconds"
    },
    "retainMovementControl": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Player keeps movement control during transition"
    },
    "controlCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "If above is true, this movement multiplier is applied"
    },
    "mouseLookControlCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Mouse look control curve"
    },
    "playerHeightMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Player height multiplier"
    },
    "CamHeightMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Camera height multiplier"
    },
    "factorInCrouching": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, both the above will be different depending on whether the player is crouched or stood up..."
    },
    "heightCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "camHeightCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "useXMovement": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "playerXCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "useYMovement": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "playerYCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "useZMovement": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "playerZCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "transitionRelativity": {
      "Item1": "TransitionPosition",
      "Item2": false,
      "Item3": ""
    },
    "disableWriteReturnPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Performing this transition won't override a previous stored position..."
    },
    "transitionToSavedReturnPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then transition to the stored return postion using the curve below."
    },
    "transitionFromExistingPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then transition from the player's current position to the correct position as described in these settings."
    },
    "positionTransitionCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Transition curve for the above"
    },
    "invertXPositionBasedOnRelativePlayerX": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Useful for door interactables"
    },
    "invertYPositionBasedOnRelativePlayerY": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "invertZPositionBasedOnRelativePlayerZ": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "raycastCheck": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use a raycast to check this position is valid"
    },
    "onFailUse": {
      "Item1": "PlayerTransitionPreset",
      "Item2": false,
      "Item3": ""
    },
    "allowMovementOnEnd": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Enable movement upon end transition"
    },
    "restoreNormalMovementSpeed": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The movement speed on end"
    },
    "customMovementSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "disableGravity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "disableHeadBob": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "useXLook": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "playerXLookCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "useYLook": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "playerYLookCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "useZLook": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "playerZLookCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "lookRelativity": {
      "Item1": "TransitionPosition",
      "Item2": false,
      "Item3": ""
    },
    "forwardPositionModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "If the above is set to relative to player, use the forward direction multiplied by this to determin the look position. This must be higher than the distance the player can move forward."
    },
    "lookMovementMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Multiply the X, Y and Z movement by this. Useful for when relative to player and adjusting the forward position modifier..."
    },
    "applyCameraRoll": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "cameraRoll": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "rollMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "resetCameraRoll": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Make sure camera roll is reset at the end of the transition"
    },
    "transitionFromExistingMouse": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true then transition from the player's current mouse position to the correct position as described in these settings."
    },
    "mouseTransitionCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "Transition curve for the above"
    },
    "useChromaticAberration": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "chromaticAberrationCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "useGain": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "gainCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "sfx": {
      "Item1": "SFXSetting",
      "Item2": true,
      "Item3": ""
    },
    "forceHolsterOnTransition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Force selection of nothing upon transition begin"
    },
    "restoreHolsterOnTransitionEnd": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Restore first person item after transition has ended"
    },
    "allowWeaponSwitchingAfterTransition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow weapon selection after transition has finished"
    },
    "playerXRecoilLookCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": "A recoil state can be switched to manually in the transition to add these in addition to the normal look curves"
    },
    "playerYRecoilLookCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "playerZRecoilLookCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "useCustomReturnPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "returnPostion": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Return position relative to the interactable"
    }
  },
  "TransitionPosition": {},
  "SFXSetting": {
    "soundEvent": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "atProgress": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "ResidencePreset": {
    "habitable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Are NPCs allowed to live here?"
    },
    "enableForSale": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this residence automatically put up for sale?"
    },
    "furnitureIfUnihabited": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Furnish this room even if uninhabited"
    },
    "isHotelRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a hotel room that the player can go to when they rent a room?"
    }
  },
  "RetailItemPreset": {
    "itemPreset": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "canBeFavourite": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can this be ranked by the citizen as a favourite item? If true this will be used to calculate favourite places, as well as appear on shopping lists etc."
    },
    "isHot": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this item stays warm for 1 hour after it was purchased."
    },
    "isConsumable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "A citizen can pick this to buy at a shop"
    },
    "brandName": {
      "Item1": "String",
      "Item2": false,
      "Item3": "If this is entered, upon singleton creation the evidence will be named using this entry."
    },
    "tags": {
      "Item1": "Tags",
      "Item2": true,
      "Item3": ""
    },
    "desireCategory": {
      "Item1": "CompanyCategory",
      "Item2": false,
      "Item3": ""
    },
    "menuCategory": {
      "Item1": "MenuCategory",
      "Item2": false,
      "Item3": ""
    },
    "ethnicity": {
      "Item1": "EthnicGroup",
      "Item2": true,
      "Item3": "Which ethnicity is this food (if any)"
    },
    "minimumWealth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Citizen's money must be higher than this to list this item in favourites"
    },
    "mustFeatureTraits": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "cantFeatureTrait": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "preferredTraits": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    },
    "nourishment": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "hydration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "alertness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "energy": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "excitement": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "chores": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "hygiene": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "bladder": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "heat": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "drunk": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "sick": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "headache": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "wet": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "brokenLeg": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "bruised": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "blackEye": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "blackedOut": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "numb": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "bleeding": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "wellRested": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "breath": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "starchAddiction": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "poisoned": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    },
    "health": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is applied as progress increases"
    }
  },
  "Tags": {},
  "MenuCategory": {},
  "RevengeObjective": {
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "baseChance": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useHEXACO": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use the below hexaco values to match to personality."
    },
    "feminineMasculine": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "humility": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Honesty-Humility (H): sincere, honest, faithful, loyal, modest/unassuming versus sly, deceitful, greedy, pretentious, hypocritical, boastful, pompous"
    },
    "emotionality": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Emotionality (E): emotional, oversensitive, sentimental, fearful, anxious, vulnerable versus brave, tough, independent, self-assured, stable"
    },
    "extraversion": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Extraversion (X): outgoing, lively, extraverted, sociable, talkative, cheerful, active versus shy, passive, withdrawn, introverted, quiet, reserved"
    },
    "agreeableness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Agreeableness (A): patient, tolerant, peaceful, mild, agreeable, lenient, gentle versus ill-tempered, quarrelsome, stubborn, choleric"
    },
    "conscientiousness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Conscientiousness (C): organized, disciplined, diligent, careful, thorough, precise versus sloppy, negligent, reckless, lazy, irresponsible, absent-minded"
    },
    "creativity": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Openness to Experience (O): intellectual, creative, unconventional, innovative, ironic versus shallow, unimaginative, conventional"
    },
    "useTraits": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use character traits to match to personality."
    },
    "characterTraitsPoster": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": ""
    },
    "characterTraitsPurp": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": ""
    },
    "specialConditions": {
      "Item1": "SpecialConditions",
      "Item2": true,
      "Item3": ""
    },
    "d0Name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "d1Name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "idTargetName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "tag": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": ""
    },
    "icon": {
      "Item1": "Icon",
      "Item2": false,
      "Item3": ""
    },
    "passedNumberRange": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "rewardMultiplier": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "Multiplies the rewards based on the above number"
    },
    "resolveQuestionName": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Name as part of resolve questions"
    },
    "resolveQuestionNameAlternate": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "answerMethod": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Refers to an answer method within this script that is used to check"
    }
  },
  "SpecialConditions": {},
  "RoomClassPreset": {},
  "RoomConfiguration": {
    "roomType": {
      "Item1": "RoomTypePreset",
      "Item2": false,
      "Item3": "The room type: Dictates layout parameters"
    },
    "roomClass": {
      "Item1": "RoomClassPreset",
      "Item2": false,
      "Item3": "The room class: Dictates what decor and furniture this has"
    },
    "canBeOpenPlan": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If there's not enough room, section off this room to include its vital elements"
    },
    "openPlanRoom": {
      "Item1": "RoomTypePreset",
      "Item2": false,
      "Item3": ""
    },
    "securityDoors": {
      "Item1": "SecurityDoorRule",
      "Item2": false,
      "Item3": "Allow security doors to spawn on exits for this room?"
    },
    "limitSecurityCameras": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Limit security camera"
    },
    "securityCameraLimit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "useMainLights": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use main lights"
    },
    "useLightSwitches": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If set to false then this room will use timer lights"
    },
    "lightsOnAtStart": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "At the start of the game, are the main lights on or off?"
    },
    "wellLit": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, boost the amount of light from main lights in this room"
    },
    "autoDisableLightsOutOfVicinity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the game will automatically disable lights on floors that are 2 or more floors away from the player, or out of their vicinity."
    },
    "onlyAutoDisableInNonStairwell": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, the game will automatically disable lights on floors that are 2 or more floors away from the player, or out of their vicinity (but not if a stairwell)"
    },
    "useAdditionalAreaLights": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true use an area light per zone in addition to normal lights"
    },
    "useDistrictSettingsAsBase": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, use district settings as a base for colour and brightness settings"
    },
    "minimumLightZoneSizeForAreaLights": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "areaLightOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "areaLightBrightness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "areaLightColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "areaLightRange": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "areaLightCoverageMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Multiply the area light size by this"
    },
    "boostCeilingEmission": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, boost the ceiling emission by this colour when main lights are on"
    },
    "ceilingEmissionBoost": {
      "Item1": "Color",
      "Item2": false,
      "Item3": "If true, boost the ceiling emission by this colour when main lights are on"
    },
    "chanceOfCeilingFans": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance of having a ceiling fan on light fittings"
    },
    "baseLightingShadowTint": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Give the base lighting a shadow tint?"
    },
    "baseLightingShadowTintIntensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Fake caustics by lerping the shadow tint to decor and time of day colours..."
    },
    "areaLightingShadowTint": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Give the base lighting a shadow tint?"
    },
    "areaLightingShadowTintIntensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Fake caustics by lerping the shadow tint to decor and time of day colours..."
    },
    "overrideAreaLightShadowTint": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "areaLightShadowTintOverride": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "areaLightShadowDimmer": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "lightingBehaviour": {
      "Item1": "AILightingBehaviour",
      "Item2": true,
      "Item3": ""
    },
    "cleanness": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Used when picking a colour scheme for this: How clean/corporate/soulless is this room?"
    },
    "forceColourSchemes": {
      "Item1": "ColourSchemePreset",
      "Item2": true,
      "Item3": "Force a selection of these colour schemes..."
    },
    "minimumGrubiness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Minimum level of grubiness this room can have...."
    },
    "maximumGrubiness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Maximum level of grubiness this room can have...."
    },
    "decorSetting": {
      "Item1": "DecorSetting",
      "Item2": false,
      "Item3": ""
    },
    "excludeFromOthersCopyingDecorStyle": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true other adjacent rooms with the 'borrow from adjacent' setting won't copy this style."
    },
    "chanceOfOverrideMatIfGroundFloor": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Use an override material if this is on the ground floor (picked from this list, saved in building class.)"
    },
    "chanceOfOverrideMatIfBasement": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Use an override material if this is in the basement (picked from this list, saved in building class.)"
    },
    "chanceOfOverrideMatIfStairwell": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Use an override material if this room contains stairs (picked from this list, saved in building class.)"
    },
    "floorOverrides": {
      "Item1": "MaterialGroupPreset",
      "Item2": true,
      "Item3": "List of override materials"
    },
    "wallOverrides": {
      "Item1": "MaterialGroupPreset",
      "Item2": true,
      "Item3": ""
    },
    "ceilingOverrides": {
      "Item1": "MaterialGroupPreset",
      "Item2": true,
      "Item3": ""
    },
    "decorationPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The priority given to decorating: Higher priority rooms will override size variables of others."
    },
    "useOwnership": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can this room be owned by anyone?"
    },
    "assignBelongsToOwners": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Assign owners to this furniture"
    },
    "preferCouples": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If this is checked the game will assign this object to a couple"
    },
    "belongsToJob": {
      "Item1": "OccupationPreset",
      "Item2": true,
      "Item3": "If this isn't null, the game will use a job to assign ownership to this room"
    },
    "exteriorDoor": {
      "Item1": "DoorPreset",
      "Item2": false,
      "Item3": "If this features a door to the outside, use this preset"
    },
    "addressDoor": {
      "Item1": "DoorPreset",
      "Item2": false,
      "Item3": "If this features a door to outside this address, use this preset"
    },
    "internalDoor": {
      "Item1": "DoorPreset",
      "Item2": false,
      "Item3": "If this features a door to another room in this address, use this preset"
    },
    "passwordPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Which room should be the passworded room, ie the place to store the key in?"
    },
    "preferredPassword": {
      "Item1": "RoomPasswordPreference",
      "Item2": false,
      "Item3": "For doors belonging to this room, prefer the password from..."
    },
    "placeKey": {
      "Item1": "KeyPlacement",
      "Item2": true,
      "Item3": "If this spawns a door that requires a key, place it here..."
    },
    "keyOwnershipPlacement": {
      "Item1": "OwnedPlacementRule",
      "Item2": false,
      "Item3": ""
    },
    "steps": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": "Use these steps"
    },
    "replaceWindows": {
      "Item1": "DoorPairPreset",
      "Item2": false,
      "Item3": ""
    },
    "replaceWalls": {
      "Item1": "DoorPairPreset",
      "Item2": false,
      "Item3": ""
    },
    "replaceEntrance": {
      "Item1": "DoorPairPreset",
      "Item2": false,
      "Item3": ""
    },
    "replaceInsideAlso": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "By default, only outside walls are replaced here. Check to replace inside walls..."
    },
    "replaceOnlyIfOtherIs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only replace above if the other side is one of these rooms..."
    },
    "onlyReplaceIf": {
      "Item1": "RoomTypePreset",
      "Item2": true,
      "Item3": ""
    },
    "forceStreetLightLayer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Force inclusion on the street light lighting layer."
    },
    "drawBuildingModel": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Draw the current building model when in this room."
    },
    "wallFrontage": {
      "Item1": "WallFrontage",
      "Item2": true,
      "Item3": ""
    },
    "oneFrontagePerNode": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Used for fake roofs for things like rooftop air vents. Only one wall frontage allowed per node"
    },
    "maximumVents": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "chanceOfRoofVent": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "chanceOfWallVentUpper": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "chanceOfWallVentLower": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "allowUpperWallLevelDucts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this room allows upper-wall level air ducts (below ceiling height)"
    },
    "onlyAllowUpperIfFloorLevelIsZero": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Only allow upper wall level ducts if floor height is 0"
    },
    "limitUpperLevelDucts": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Limit the number of upper level ducts"
    },
    "allowLowerWallLevelDucts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this room allows lower-wall level air ducts (below standing height)"
    },
    "overrideAddressEnvironment": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use a specific profile for this room"
    },
    "sceneClean": {
      "Item1": "SceneProfile",
      "Item2": false,
      "Item3": ""
    },
    "sceneDirty": {
      "Item1": "SceneProfile",
      "Item2": false,
      "Item3": ""
    },
    "baseRoomAtmosphere": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Affects lighting volumetrics; creating a smokey atmosphere with a higher value."
    },
    "forceOutside": {
      "Item1": "OutsideSetting",
      "Item2": false,
      "Item3": "Force the nodes in this room to register as outside or inside..."
    },
    "ambientZone": {
      "Item1": "AmbientZone",
      "Item2": false,
      "Item3": ""
    },
    "fingerprintsEnabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Should there be fingerprints here?"
    },
    "footprintsEnabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Should there be footprints here?"
    },
    "printsSource": {
      "Item1": "PrintsSource",
      "Item2": false,
      "Item3": "The source of the prints"
    },
    "fingerprintWallDensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Fingerprint density on walls"
    },
    "allowCoving": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "allowBugs": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow bugs to be spawned in this room"
    },
    "bugAmountMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Number of bugs = number of nodes * grubiness * this"
    },
    "forbidden": {
      "Item1": "Forbidden",
      "Item2": false,
      "Item3": "If true the player will be tresspassing when here"
    },
    "allowedIfGivenCorrectPassword": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "The player is allowed here after they have given a correct password (if set on the address preset)"
    },
    "AIknowPassword": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Allow AI here if the password setting is on in the address preset"
    },
    "escalationLevelNormal": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Severity for being caught when this is forbidden (0 = asked to leave, 2 = combat on sight)"
    },
    "escalationLevelAfterHours": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Severity for being caught when this is forbidden when after hours (0 = asked to leave, 2 = combat on sight)"
    },
    "securityLevel": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "All object placements in this room have this increased security level"
    },
    "allowPersonalAffects": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true, personal affects of citizens can be placed in this room"
    },
    "overrideMaxFurnitureClusters": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overridenMaxFurniture": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideAttemptsPerNodeMultiplier": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overridenAttemptsPerNode": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "shadinessValue": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "When ranking shadiness for certain jobs/systems the base value"
    },
    "allowMuggings": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "AI can mug here"
    },
    "muggingAwakenRoom": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Player can awaken here after mugging"
    },
    "debugRoom": {
      "Item1": "RoomConfiguration",
      "Item2": false,
      "Item3": ""
    }
  },
  "DecorSetting": {},
  "RoomZoning": {},
  "Forbidden": {},
  "SecurityDoorRule": {},
  "AILightingBehaviour": {
    "dayRule": {
      "Item1": "TimeOfDay",
      "Item2": false,
      "Item3": ""
    },
    "passthroughBehaviour": {
      "Item1": "LightingPreference",
      "Item2": false,
      "Item3": ""
    },
    "destinationBehaviour": {
      "Item1": "LightingPreference",
      "Item2": false,
      "Item3": ""
    },
    "exitRoomBehaviour": {
      "Item1": "LightingPreference",
      "Item2": false,
      "Item3": ""
    },
    "exitGameLocationBehaviour": {
      "Item1": "LightingPreference",
      "Item2": false,
      "Item3": ""
    }
  },
  "LightingPreference": {},
  "RoomPasswordPreference": {},
  "KeyPlacement": {},
  "WallFrontage": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "wallPreset": {
      "Item1": "DoorPairPreset",
      "Item2": false,
      "Item3": ""
    },
    "insideFrontage": {
      "Item1": "WallFrontageClass",
      "Item2": true,
      "Item3": ""
    },
    "outsideFrontage": {
      "Item1": "WallFrontageClass",
      "Item2": true,
      "Item3": ""
    },
    "onlyIfBorderingOutside": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "This entry is only valid if the wall faces onto the outside"
    },
    "localOffset": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "limitToBuildingTypes": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "limitedToBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "OutsideSetting": {},
  "PrintsSource": {},
  "RoomLightingPreset": {
    "disable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "lightObjects": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    },
    "lightingPreset": {
      "Item1": "LightingPreset",
      "Item2": false,
      "Item3": ""
    },
    "roomCompatibility": {
      "Item1": "RoomConfiguration",
      "Item2": true,
      "Item3": ""
    },
    "minimumRoomSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "maximumRoomSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "onlyAllowInBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    },
    "banFromBuildings": {
      "Item1": "BuildingPreset",
      "Item2": true,
      "Item3": ""
    },
    "stairwellRule": {
      "Item1": "StairwellLightRule",
      "Item2": false,
      "Item3": ""
    },
    "designStyleCompatibility": {
      "Item1": "DesignStylePreset",
      "Item2": true,
      "Item3": ""
    },
    "ceilingFans": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "frequency": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "How often these appear compared to others"
    }
  },
  "StairwellLightRule": {},
  "RoomTypeFilter": {
    "roomClasses": {
      "Item1": "RoomClassPreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "RoomTypePreset": {
    "forceConfiguration": {
      "Item1": "RoomConfiguration",
      "Item2": false,
      "Item3": ""
    },
    "chance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance this has of being included"
    },
    "minimumAddressSize": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The address has to be this big for this rooom to be included"
    },
    "maximumRoomTypesPerAddress": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Maximum number of these room types per addresses"
    },
    "cyclePriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "The priority given to this room: Higher priority rooms will override size variables of others."
    },
    "minimumRoomAreaShape": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "The room at it's smallest must be able to fit this shape inside it."
    },
    "maximumRoomAreaShape": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "The room at it's largest can feature this shape."
    },
    "tesselationShape": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": "All nodes in the room must tesselate with this shape."
    },
    "floorSpaceWeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "exteriorWallWeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "exteriorWindowWeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "entranceWeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "mustAdjoinRooms": {
      "Item1": "RoomTypePreset",
      "Item2": true,
      "Item3": "This must adjoin one of these rooms. If none adjoin all."
    },
    "doorPriority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Should I feature doors from this preset or the bordering preset? Choose the highest priority"
    },
    "chanceOfNoDoor": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Chance of doorway not featuring a door"
    },
    "maxDoors": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Maximum number of doors"
    },
    "forceNoDoors": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "doorSetting": {
      "Item1": "DoorSetting",
      "Item2": false,
      "Item3": "Doors will use the 'highest' privacy setting between the 2 rooms"
    },
    "allowRoomDividers": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Entrances to this room can be replaced by a divider if there are 2 or more adjoining walls"
    },
    "maxDividers": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "onlyAllowDividersAdjoining": {
      "Item1": "RoomTypePreset",
      "Item2": true,
      "Item3": "Only allow room dividers from these room types:"
    },
    "allowMainAddressEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true the address entrance is allowed to open into this room"
    },
    "allowSecondaryAddressEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true the address entrance is allowed to open into this room"
    },
    "preferMainAddressEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If both are present, prefer main entrance. Doubles entrance ranking score, so make sure it is >0"
    },
    "mustConnectWithEntrance": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this must be connected to an entrance, either by the entrance opening into it or otherwise through a created hallway. This will also skip the doorway creation process for this room."
    },
    "overridable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this room can be overriden with no penalty"
    },
    "overwriteWithPriorityUpTo": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "This room can be overwritten rooms with priority up to this value"
    },
    "blockOverridesFromType": {
      "Item1": "RoomTypePreset",
      "Item2": true,
      "Item3": "Also block overrides from these room types"
    },
    "overwriteLimit": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If  the block list above is active then it makes sense to limit this room to only being overwritten once, so rooms outside of this block list can't then overwrite this node again."
    },
    "expandIntoNull": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this room will exapnd into null space after all rooms are assigned, regardness of shape settings above."
    },
    "expandIntoNullAdjacencyMinimum": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Limitations to null room expansion: Will only choose to expand if there are this many or more adjacent tiles"
    },
    "shareFeaturesWithCommonAdjacent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will share common features with adjacent rooms of the same type (such as light switches and ceiling light styles"
    },
    "allowCorridorReplacement": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true corridor ends can be integrated into this room (eg ends of hallways etc)"
    },
    "overrideFloorHeight": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "floorHeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "copyFrom": {
      "Item1": "RoomConfiguration",
      "Item2": false,
      "Item3": ""
    }
  },
  "ScriptableObjectIDSystem": {
    "id": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Used as a replacement for names for smaller save data sizes"
    }
  },
  "SideMissionHandInPreset": {
    "rewardModifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "postersDoor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "cityHall": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "blocks": {
      "Item1": "SideMissionObjectiveBlock",
      "Item2": true,
      "Item3": ""
    }
  },
  "SideMissionIntroPreset": {
    "rewardModifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "blocks": {
      "Item1": "SideMissionObjectiveBlock",
      "Item2": true,
      "Item3": ""
    }
  },
  "SideMissionElementType": {},
  "SideMissionObjectiveBlock": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "elementType": {
      "Item1": "SideMissionElementType",
      "Item2": false,
      "Item3": ""
    },
    "dialogReference": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "tagReference": {
      "Item1": "JobTag",
      "Item2": false,
      "Item3": ""
    },
    "spawnItems": {
      "Item1": "StartingSpawnItem",
      "Item2": true,
      "Item3": ""
    },
    "enableUpdateWhileTalking": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "objectiveDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "validItems": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    },
    "validFurniture": {
      "Item1": "FurniturePreset",
      "Item2": true,
      "Item3": ""
    },
    "disableOnDifficulties": {
      "Item1": "DifficultyTag",
      "Item2": true,
      "Item3": ""
    },
    "onlyCompativleWithIntros": {
      "Item1": "SideMissionIntroPreset",
      "Item2": true,
      "Item3": ""
    },
    "onlyCompatibleWithHandIns": {
      "Item1": "SideMissionHandInPreset",
      "Item2": true,
      "Item3": ""
    },
    "triggerFailIfItemDestroyed": {
      "Item1": "JobTag",
      "Item2": true,
      "Item3": ""
    }
  },
  "SoCustomComparison": {
    "presetName": {
      "Item1": "String",
      "Item2": false,
      "Item3": "We need a internal reference to ID the file based on name (can't access name outside main threads)"
    }
  },
  "SpatterPatternPreset": {
    "spatterCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "maxAngleX": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maxAngleY": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "rayLength": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "spreadCurve": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "heavyMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "mediumMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "lightMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    }
  },
  "StairwellPreset": {
    "spawnObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "objectTop": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "centralSteps": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "featuresElevator": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this stairwell feature an elevator?"
    },
    "elevatorObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": "The elevator object to spawn"
    },
    "elevatorMaxSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How fast the elevator can travel"
    },
    "elevatorAcceleration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How fast the elevator can accelerate"
    },
    "accelerateWhileThisFarAway": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The elevator accelerates if further away than this from its destination"
    },
    "liftDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How long the lift stays at a destination when there is somewhere else to go"
    },
    "movementDelay": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "How long the lift stays put after a new call when beginning movement"
    }
  },
  "StatusPreset": {
    "color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "alternateColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "icon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "alternateIcon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "minimizeToIcon": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "After creation, minimize this to an icon for the in-game UI"
    },
    "pulseBackground": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Glow when active"
    },
    "pulseIcon": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pulseIconAdditiveColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "includeDescription": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Include a description on the detail text"
    },
    "instancingType": {
      "Item1": "Grouping",
      "Item2": false,
      "Item3": "Instancing rules for this"
    },
    "autoNotificationMessage": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Automatically display a message when this is activated"
    },
    "priority": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "Where this appears on the right side menu hierarchy"
    },
    "fadeToWhite": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Fade to white the closer the amount is to 0"
    },
    "enableProgressBar": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use progress bar"
    },
    "barTracking": {
      "Item1": "ProgressBarTrack",
      "Item2": false,
      "Item3": ""
    },
    "useCustomMethod": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use the custom named method to check the status of this"
    },
    "onAcquire": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "onRemove": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "countType": {
      "Item1": "StatusCountType",
      "Item2": false,
      "Item3": ""
    },
    "overrrideColorWithCount": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Override the base colour with the highest count's colour"
    },
    "displayCountCountsInMainText": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Display the count number in the main text"
    },
    "replaceDescriptionBasedOnCounts": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Replace description based on counts"
    },
    "displayAddressInDetailText": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Display the address at the end of the detail text"
    },
    "displayBuildingInDetailText": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Display the building at the end of the detail text"
    },
    "listCountsInDetailText": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "List counts in detail text"
    },
    "displayFineTotalInMainText": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Display the fine total in the main text"
    },
    "alertWhenNewCountIsAdded": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Alert when new count is added"
    },
    "displayTotalFineWhenMinimized": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Display total fine when minimized"
    },
    "countConfig": {
      "Item1": "StatusCountConfig",
      "Item2": true,
      "Item3": ""
    },
    "stopsRecovery": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "stopsSprint": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "stopsJump": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "recoveryRatePlusMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maxHealthPlusMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "movementSpeedPlusMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "temperatureGainPlusMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "damageIncomingPlusMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "damageOutgoingPlusMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "drunkControls": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "tripChanceWet": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "tripChanceDrunk": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "affectHeadBob": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "headBob": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "drunkVision": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "shiverVision": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "drunkLensDistort": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "headacheVision": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "bloomIntensityPlusMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "motionBlurPlusMP": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "chromaticAbberationAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "vignetteAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "expsosure": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useChannelMixer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "redR": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "redG": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "redB": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "greenR": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "greenG": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "greenB": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "blueR": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "blueG": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "blueB": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "Grouping": {},
  "ProgressBarTrack": {},
  "StatusCountType": {},
  "StatusCountConfig": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "icon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "colour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "penaltyRule": {
      "Item1": "PenaltyRule",
      "Item2": false,
      "Item3": ""
    },
    "penalty": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "onAcquire": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    }
  },
  "PenaltyRule": {},
  "StreetTilePreset": {
    "sectionType": {
      "Item1": "StreetSection",
      "Item2": false,
      "Item3": ""
    },
    "prefabList": {
      "Item1": "StreetSectionModel",
      "Item2": true,
      "Item3": ""
    }
  },
  "StreetSectionModel": {
    "prefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "normalMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": "When raindrops are disabled, use this material..."
    },
    "rainMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": "When raindrops are enabled, use this material..."
    }
  },
  "StreetSection": {},
  "SubObjectClassPreset": {
    "limitCountPerObject": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "maxPerObject": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": "If true only one of these types will be spawned per object"
    },
    "perObjectSpawnChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The chance of spawning here on a per-object basis"
    },
    "perInstanceSpawnChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The chance of spawning here on a per-instance basis"
    },
    "perInstanceModifiers": {
      "Item1": "TraitPickRule",
      "Item2": true,
      "Item3": "Added to the perInstanceSpawnChance as modifiers, uses test type found on the furniture preset"
    },
    "typeLimit": {
      "Item1": "PlacementTypeLimit",
      "Item2": false,
      "Item3": ""
    }
  },
  "PlacementTypeLimit": {},
  "SyncDiskPreset": {
    "disabled": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Disable this in-game completely."
    },
    "syncDiskNumber": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "interactable": {
      "Item1": "InteractablePreset",
      "Item2": false,
      "Item3": ""
    },
    "rarity": {
      "Item1": "Rarity",
      "Item2": false,
      "Item3": ""
    },
    "manufacturer": {
      "Item1": "Manufacturer",
      "Item2": false,
      "Item3": ""
    },
    "canBeSideJobReward": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect1Name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect1Description": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect1": {
      "Item1": "Effect",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect1Value": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect1Icon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect2Name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect2Description": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect2": {
      "Item1": "Effect",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect2Value": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect2Icon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect3Name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect3Description": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect3": {
      "Item1": "Effect",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect3Value": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "mainEffect3Icon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "option1UpgradeNameReferences": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "option1UpgradeEffects": {
      "Item1": "UpgradeEffect",
      "Item2": true,
      "Item3": ""
    },
    "option1UpgradeValues": {
      "Item1": "Single",
      "Item2": true,
      "Item3": ""
    },
    "option2UpgradeNameReferences": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "option2UpgradeEffects": {
      "Item1": "UpgradeEffect",
      "Item2": true,
      "Item3": ""
    },
    "option2UpgradeValues": {
      "Item1": "Single",
      "Item2": true,
      "Item3": ""
    },
    "option3UpgradeNameReferences": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "option3UpgradeEffects": {
      "Item1": "UpgradeEffect",
      "Item2": true,
      "Item3": ""
    },
    "option3UpgradeValues": {
      "Item1": "Single",
      "Item2": true,
      "Item3": ""
    },
    "sideEffectDescription": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "sideEffect": {
      "Item1": "Effect",
      "Item2": false,
      "Item3": ""
    },
    "sideEffectValue": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "price": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "uninstallCost": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "minimumWealthLevel": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "traitWeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "traits": {
      "Item1": "TraitPick",
      "Item2": true,
      "Item3": ""
    },
    "occupationWeight": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "occupation": {
      "Item1": "OccupationPreset",
      "Item2": true,
      "Item3": ""
    },
    "copyFrom": {
      "Item1": "SyncDiskPreset",
      "Item2": false,
      "Item3": ""
    }
  },
  "Rarity": {},
  "Manufacturer": {},
  "Effect": {},
  "UpgradeEffect": {},
  "WallFrontageClass": {},
  "WallFrontagePreset": {
    "gameObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "allowStaticBatching": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will seach for identical furniture in a room to batch with"
    },
    "isRainyWindow": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Can this feature a rainy window texture?"
    },
    "regularGlass": {
      "Item1": "Material",
      "Item2": false,
      "Item3": "The non-rainy window material"
    },
    "rainyGlass": {
      "Item1": "Material",
      "Item2": false,
      "Item3": "The rainy window material"
    },
    "universalDesignStyle": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true use across all design styles"
    },
    "designStyles": {
      "Item1": "DesignStylePreset",
      "Item2": true,
      "Item3": ""
    },
    "inheritColouringFromDecor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shareColours": {
      "Item1": "ShareColours",
      "Item2": false,
      "Item3": "If true the same material colours will be shared over all instances of this furniture for the room"
    },
    "variations": {
      "Item1": "MaterialVariation",
      "Item2": true,
      "Item3": ""
    },
    "integratedInteractables": {
      "Item1": "IntegratedInteractable",
      "Item2": true,
      "Item3": "What interatables will be instanced on this? These won't be spawned but created and searched for within the furniture prefab"
    },
    "classes": {
      "Item1": "WallFrontageClass",
      "Item2": true,
      "Item3": ""
    }
  },
  "WindowStylePreset": {
    "closable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "pinnable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "forceWorldInteraction": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "If true this will always and only be able to be a world interaction"
    },
    "useWindowFocusMode": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use window focus mode (black screen behind the window)"
    },
    "resizable": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "defaultSize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "minSize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "maxSize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "DDSadditionalSize": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    },
    "overrideIcon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "tabs": {
      "Item1": "WindowTabPreset",
      "Item2": true,
      "Item3": ""
    }
  },
  "WindowTabPreset": {
    "tabName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "colour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "contentPrefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "contentType": {
      "Item1": "TabContentType",
      "Item2": false,
      "Item3": ""
    },
    "scalableContent": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fitToScaleX": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fitToScaleY": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "zoomWithMouseWheel": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "scrollBars": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "scrollRestrcition": {
      "Item1": "MovementType",
      "Item2": false,
      "Item3": ""
    },
    "displayContentWithTag": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "TabContentType": {},
  "LimbPos": {
    "anchor": {
      "Item1": "CharacterAnchor",
      "Item2": false,
      "Item3": ""
    },
    "localPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "localRotation": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    }
  },
  "ManualAnimation": {
    "timeline": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "limbData": {
      "Item1": "LimbPos",
      "Item2": true,
      "Item3": ""
    }
  },
  "StartingInventory": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "presets": {
      "Item1": "InteractablePreset",
      "Item2": true,
      "Item3": ""
    },
    "baseChance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "modifiers": {
      "Item1": "MurdererModifierRule",
      "Item2": true,
      "Item3": ""
    }
  },
  "WindowColour": {},
  "NeonMaterial": {
    "neonColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "altColour2": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "altColour3": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "regularMat": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "flickingMat": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "flickerAudio": {
      "Item1": "AudioEvent",
      "Item2": false,
      "Item3": ""
    },
    "flicker": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Does this light flicker?"
    },
    "flickerColourMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "When flickering, use this multiplier on the flicker colour to determin the actual colour (basically a darker version of flicker colour)"
    },
    "pulseSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "flickerState": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "flickerSwitch": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "flickerInterval": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "interval": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "intervalTime": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "brightness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "colourTag": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "CitySize": {
    "size": {
      "Item1": "Size",
      "Item2": false,
      "Item3": ""
    },
    "v2": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    }
  },
  "Size": {},
  "PPProfile": {
    "profile": {
      "Item1": "SceneProfile",
      "Item2": false,
      "Item3": ""
    },
    "volume": {
      "Item1": "Volume",
      "Item2": false,
      "Item3": ""
    },
    "objectRef": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    }
  },
  "StreetCable": {
    "prefab": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "maximumWidth": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "frequency": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "maximumCableAngle": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "The maximum angle deviation for cables. 0 is only straight."
    },
    "minimumHeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "maximumHeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "onlyFromZoneType": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "zone": {
      "Item1": "ZoneType",
      "Item2": false,
      "Item3": ""
    },
    "disitrctFrequencyModifier": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "districts": {
      "Item1": "DistrictPreset",
      "Item2": true,
      "Item3": ""
    },
    "frequencyModifier": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "alterAreaLighting": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Change area colours"
    },
    "possibleColours": {
      "Item1": "Color",
      "Item2": true,
      "Item3": ""
    },
    "lightOperation": {
      "Item1": "AffectStreetAreaLights",
      "Item2": false,
      "Item3": "This is used in combination with the following to adjust street area lighting"
    },
    "lightAmount": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "brightnessModifier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "This is added to brightness"
    }
  },
  "DataKeySettings": {
    "key": {
      "Item1": "DataKey",
      "Item2": false,
      "Item3": ""
    },
    "uniqueKey": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Is this a unique identifier?"
    },
    "countTowardsProfile": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "SyncDiskColour": {
    "category": {
      "Item1": "Manufacturer",
      "Item2": false,
      "Item3": ""
    },
    "mainColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "colour1": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "colour2": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "colour3": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    }
  },
  "Icon": {},
  "IconConfig": {
    "iconType": {
      "Item1": "Icon",
      "Item2": false,
      "Item3": ""
    },
    "sprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    }
  },
  "EvidenceColours": {},
  "PinColours": {
    "colour": {
      "Item1": "EvidenceColours",
      "Item2": false,
      "Item3": ""
    },
    "actualColour": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    }
  },
  "AirDuctOffset": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "offsets": {
      "Item1": "Vector3",
      "Item2": true,
      "Item3": ""
    },
    "rotation": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "prefabs": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "maps": {
      "Item1": "Texture2D",
      "Item2": true,
      "Item3": ""
    }
  },
  "SocialCreditBuff": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "description": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "effect": {
      "Item1": "Effect",
      "Item2": false,
      "Item3": ""
    },
    "value": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "randomGrouping": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "EthnicityFrequency": {
    "ethnicity": {
      "Item1": "EthnicGroup",
      "Item2": false,
      "Item3": ""
    },
    "frequency": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "HairSetting": {
    "colour": {
      "Item1": "HairColour",
      "Item2": false,
      "Item3": ""
    },
    "hairColourRange1": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "hairColourRange2": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    }
  },
  "EthnicityStats": {
    "group": {
      "Item1": "EthnicGroup",
      "Item2": false,
      "Item3": ""
    },
    "skinColourRange1": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "skinColourRange2": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "blackHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "brownHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "blondeHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "gingerHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "RedHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "blueHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "greenHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "purpleHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "pinkHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "greyHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "whiteHairRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "baldHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "shortHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "longHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "baldHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "shortHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "longHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "straightHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "curlyHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "balingHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "messyHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "styledHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "mohawkHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "afroHairRatioMale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "straightHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "curlyHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "balingHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "messyHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "styledHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "mohawkHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "afroHairRatioFemale": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "blueEyesRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "brownEyesRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "greenEyesRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "greyEyesRatio": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "overrideFirst": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overrideNameFirst": {
      "Item1": "EthnicGroup",
      "Item2": false,
      "Item3": ""
    },
    "overrideSur": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "overrideNameSur": {
      "Item1": "EthnicGroup",
      "Item2": false,
      "Item3": ""
    },
    "culturalSimilarities": {
      "Item1": "EthnicGroup",
      "Item2": true,
      "Item3": ""
    },
    "ethTraits": {
      "Item1": "CharacterTrait",
      "Item2": true,
      "Item3": ""
    }
  },
  "Casing": {},
  "LinkSetting": {},
  "MouseLook": {
    "clampVerticalRotation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "MinimumX": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "MaximumX": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "lockCursor": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "charMovementThisFrame": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    },
    "camMovementThisFrame": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    },
    "m_CharacterTargetRot": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    },
    "m_CameraTargetRot": {
      "Item1": "Quaternion",
      "Item2": false,
      "Item3": ""
    },
    "_controllerInputX": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_controllerInputY": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_controllerXRot": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_invertY": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "MovementSettings": {
    "ForwardSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "BackwardSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "StrafeSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "RunMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "RunKey": {
      "Item1": "KeyCode",
      "Item2": false,
      "Item3": ""
    },
    "JumpForce": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "SlopeCurveModifier": {
      "Item1": "AnimationCurve",
      "Item2": false,
      "Item3": ""
    },
    "CurrentTargetSpeed": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "m_Running": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "Running": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "AdvancedSettings": {
    "groundCheckDistance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "stickToGroundHelperDistance": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "slowDownRate": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "airControl": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "shellOffset": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "set it to 0.1 or more if you get stuck in wall"
    }
  },
  "PointerEventType": {},
  "PlayerSetting": {
    "playerId": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "playerMice": {
      "Item1": "PlayerMouse",
      "Item2": true,
      "Item3": ""
    }
  },
  "ButtonIdentifier": {},
  "BreakPoint": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "screenAspectRatio": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "referenceResolution": {
      "Item1": "Vector2",
      "Item2": false,
      "Item3": ""
    }
  },
  "MappingSet": {
    "_mapCategoryId": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "_actionListMode": {
      "Item1": "ActionListMode",
      "Item2": false,
      "Item3": ""
    },
    "_actionCategoryIds": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "_actionIds": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "_actionCategoryIdsReadOnly": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "_actionIdsReadOnly": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "mapCategoryId": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "actionListMode": {
      "Item1": "ActionListMode",
      "Item2": false,
      "Item3": ""
    },
    "actionCategoryIds": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "actionIds": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "isValid": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "Default": {
      "Item1": "MappingSet",
      "Item2": false,
      "Item3": ""
    }
  },
  "ActionListMode": {},
  "InputBehaviorSettings": {
    "_inputBehaviorId": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "_showJoystickAxisSensitivity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "_showMouseXYAxisSensitivity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "_labelLanguageKey": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_joystickAxisSensitivityLabelLanguageKey": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_mouseXYAxisSensitivityLabelLanguageKey": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_joystickAxisSensitivityIcon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "_mouseXYAxisSensitivityIcon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "_joystickAxisSensitivityMin": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_joystickAxisSensitivityMax": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_mouseXYAxisSensitivityMin": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_mouseXYAxisSensitivityMax": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "inputBehaviorId": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "showJoystickAxisSensitivity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "showMouseXYAxisSensitivity": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "labelLanguageKey": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "joystickAxisSensitivityLabelLanguageKey": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mouseXYAxisSensitivityLabelLanguageKey": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "joystickAxisSensitivityIcon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "mouseXYAxisSensitivityIcon": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "joystickAxisSensitivityMin": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "joystickAxisSensitivityMax": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "mouseXYAxisSensitivityMin": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "mouseXYAxisSensitivityMax": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isValid": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "Prefabs": {
    "_button": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_fitButton": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridLabel": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridHeaderLabel": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridFieldButton": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridFieldInvertToggle": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_window": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_windowTitleText": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_windowContentText": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_fader": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_calibrationWindow": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_inputBehaviorsWindow": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_centerStickGraphic": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "_moveStickGraphic": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "button": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "fitButton": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "inputGridLabel": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "inputGridHeaderLabel": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "inputGridFieldButton": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "inputGridFieldInvertToggle": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "window": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "windowTitleText": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "windowContentText": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "fader": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "calibrationWindow": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "inputBehaviorsWindow": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "centerStickGraphic": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "moveStickGraphic": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    }
  },
  "References": {
    "_canvas": {
      "Item1": "Canvas",
      "Item2": false,
      "Item3": ""
    },
    "_mainCanvasGroup": {
      "Item1": "CanvasGroup",
      "Item2": false,
      "Item3": ""
    },
    "_mainContent": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_mainContentInner": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_playersGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "_controllerGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_controllerGroupLabelGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_controllerSettingsGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "_assignedControllersGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "_settingsAndMapCategoriesGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_settingsGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "_mapCategoriesGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridContainer": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridHeadersGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridVScrollbar": {
      "Item1": "Scrollbar",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridScrollRect": {
      "Item1": "ScrollRect",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridInnerGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_controllerNameLabel": {
      "Item1": "TMP_Text",
      "Item2": false,
      "Item3": ""
    },
    "_removeControllerButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "_assignControllerButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateControllerButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "_doneButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "_restoreDefaultsButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "_defaultSelection": {
      "Item1": "Selectable",
      "Item2": false,
      "Item3": ""
    },
    "_fixedSelectableUIElements": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "_mainBackgroundImage": {
      "Item1": "Image",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridLayoutElement_k__BackingField": {
      "Item1": "LayoutElement",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridActionColumn_k__BackingField": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridKeyboardColumn_k__BackingField": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridMouseColumn_k__BackingField": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridControllerColumn_k__BackingField": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridHeader1_k__BackingField": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridHeader2_k__BackingField": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridHeader3_k__BackingField": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridHeader4_k__BackingField": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "canvas": {
      "Item1": "Canvas",
      "Item2": false,
      "Item3": ""
    },
    "mainCanvasGroup": {
      "Item1": "CanvasGroup",
      "Item2": false,
      "Item3": ""
    },
    "mainContent": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "mainContentInner": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "playersGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "controllerGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "controllerGroupLabelGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "controllerSettingsGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "assignedControllersGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "settingsAndMapCategoriesGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "settingsGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "mapCategoriesGroup": {
      "Item1": "UIGroup",
      "Item2": false,
      "Item3": ""
    },
    "inputGridGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridContainer": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridHeadersGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridVScrollbar": {
      "Item1": "Scrollbar",
      "Item2": false,
      "Item3": ""
    },
    "inputGridScrollRect": {
      "Item1": "ScrollRect",
      "Item2": false,
      "Item3": ""
    },
    "inputGridInnerGroup": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "controllerNameLabel": {
      "Item1": "TMP_Text",
      "Item2": false,
      "Item3": ""
    },
    "removeControllerButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "assignControllerButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "calibrateControllerButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "doneButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "restoreDefaultsButton": {
      "Item1": "Button",
      "Item2": false,
      "Item3": ""
    },
    "defaultSelection": {
      "Item1": "Selectable",
      "Item2": false,
      "Item3": ""
    },
    "fixedSelectableUIElements": {
      "Item1": "GameObject",
      "Item2": true,
      "Item3": ""
    },
    "mainBackgroundImage": {
      "Item1": "Image",
      "Item2": false,
      "Item3": ""
    },
    "inputGridLayoutElement": {
      "Item1": "LayoutElement",
      "Item2": false,
      "Item3": ""
    },
    "inputGridActionColumn": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridKeyboardColumn": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridMouseColumn": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridControllerColumn": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridHeader1": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridHeader2": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridHeader3": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    },
    "inputGridHeader4": {
      "Item1": "Transform",
      "Item2": false,
      "Item3": ""
    }
  },
  "LayoutElementSizeType": {},
  "WindowType": {},
  "PropertyType": {},
  "LanguageData": {
    "_yes": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_no": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_add": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_replace": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_remove": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_swap": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_cancel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_none": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_okay": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_done": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_default": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_assignControllerWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_assignControllerWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_controllerAssignmentConflictWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_controllerAssignmentConflictWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_elementAssignmentPrePollingWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_joystickElementAssignmentPollingWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_joystickElementAssignmentPollingWindowMessage_fullAxisFieldOnly": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_keyboardElementAssignmentPollingWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_mouseElementAssignmentPollingWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_mouseElementAssignmentPollingWindowMessage_fullAxisFieldOnly": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_elementAssignmentConflictWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_elementAlreadyInUseBlocked": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_elementAlreadyInUseCanReplace": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_elementAlreadyInUseCanReplace_conflictAllowed": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_mouseAssignmentConflictWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_mouseAssignmentConflictWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateControllerWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateAxisStep1WindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateAxisStep1WindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateAxisStep2WindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateAxisStep2WindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_inputBehaviorSettingsWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_restoreDefaultsWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_restoreDefaultsWindowMessage_onePlayer": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_restoreDefaultsWindowMessage_multiPlayer": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_actionColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_keyboardColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_mouseColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_controllerColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_removeControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_assignControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_inputBehaviorSettingsButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_doneButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_restoreDefaultsButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_playersGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_controllerSettingsGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_assignedControllersGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_settingsGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_mapCategoriesGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateWindow_deadZoneSliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateWindow_zeroSliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateWindow_sensitivitySliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateWindow_invertToggleLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_calibrateWindow_calibrateButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_modifierKeys": {
      "Item1": "ModifierKeys",
      "Item2": false,
      "Item3": ""
    },
    "_customEntries": {
      "Item1": "CustomEntry",
      "Item2": true,
      "Item3": ""
    },
    "_initialized": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "customDict": {
      "Item1": "String",
      "Item2": true,
      "Item3": ""
    },
    "yes": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "no": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "add": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "replace": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "remove": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "swap": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "cancel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "none": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "okay": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "done": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "default_": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "assignControllerWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "assignControllerWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "controllerAssignmentConflictWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "elementAssignmentPrePollingWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "elementAssignmentConflictWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mouseAssignmentConflictWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateControllerWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateAxisStep1WindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateAxisStep2WindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "inputBehaviorSettingsWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "restoreDefaultsWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "actionColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "keyboardColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mouseColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "controllerColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "removeControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "assignControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "inputBehaviorSettingsButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "doneButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "restoreDefaultsButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "controllerSettingsGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "playersGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "assignedControllersGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "settingsGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mapCategoriesGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "restoreDefaultsWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_deadZoneSliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_zeroSliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_sensitivitySliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_invertToggleLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_calibrateButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "CustomEntry": {
    "key": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "value": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "ModifierKeys": {
    "control": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "alt": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "shift": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "command": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "separator": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "LanguageDataBase": {
    "yes": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "no": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "add": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "replace": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "remove": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "swap": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "cancel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "none": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "okay": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "done": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "default_": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "assignControllerWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "assignControllerWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "controllerAssignmentConflictWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "elementAssignmentPrePollingWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "elementAssignmentConflictWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mouseAssignmentConflictWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateControllerWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateAxisStep1WindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateAxisStep2WindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "inputBehaviorSettingsWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "restoreDefaultsWindowTitle": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "actionColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "keyboardColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mouseColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "controllerColumnLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "removeControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "assignControllerButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "inputBehaviorSettingsButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "doneButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "restoreDefaultsButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "controllerSettingsGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "playersGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "assignedControllersGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "settingsGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "mapCategoriesGroupLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "restoreDefaultsWindowMessage": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_deadZoneSliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_zeroSliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_sensitivitySliderLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_invertToggleLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "calibrateWindow_calibrateButtonLabel": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "ElementInfo": {
    "_themeClass": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "_component": {
      "Item1": "Component",
      "Item2": false,
      "Item3": ""
    },
    "themeClass": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "component": {
      "Item1": "Component",
      "Item2": false,
      "Item3": ""
    }
  },
  "ThemeSettings": {
    "_mainWindowBackground": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_popupWindowBackground": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_areaBackground": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_selectableSettings": {
      "Item1": "SelectableSettings",
      "Item2": false,
      "Item3": ""
    },
    "_buttonSettings": {
      "Item1": "SelectableSettings",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridFieldSettings": {
      "Item1": "SelectableSettings",
      "Item2": false,
      "Item3": ""
    },
    "_scrollbarSettings": {
      "Item1": "ScrollbarSettings",
      "Item2": false,
      "Item3": ""
    },
    "_sliderSettings": {
      "Item1": "SliderSettings",
      "Item2": false,
      "Item3": ""
    },
    "_invertToggle": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_invertToggleDisabledColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "_calibrationBackground": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_calibrationValueMarker": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_calibrationRawValueMarker": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_calibrationZeroMarker": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_calibrationCalibratedZeroMarker": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_calibrationDeadzone": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_textSettings": {
      "Item1": "TextSettings",
      "Item2": false,
      "Item3": ""
    },
    "_buttonTextSettings": {
      "Item1": "TextSettings",
      "Item2": false,
      "Item3": ""
    },
    "_inputGridFieldTextSettings": {
      "Item1": "TextSettings",
      "Item2": false,
      "Item3": ""
    }
  },
  "SelectableSettings_Base": {
    "_transition": {
      "Item1": "Transition",
      "Item2": false,
      "Item3": ""
    },
    "_colors": {
      "Item1": "CustomColorBlock",
      "Item2": false,
      "Item3": ""
    },
    "_spriteState": {
      "Item1": "CustomSpriteState",
      "Item2": false,
      "Item3": ""
    },
    "_animationTriggers": {
      "Item1": "CustomAnimationTriggers",
      "Item2": false,
      "Item3": ""
    },
    "transition": {
      "Item1": "Transition",
      "Item2": false,
      "Item3": ""
    },
    "selectableColors": {
      "Item1": "CustomColorBlock",
      "Item2": false,
      "Item3": ""
    },
    "spriteState": {
      "Item1": "CustomSpriteState",
      "Item2": false,
      "Item3": ""
    },
    "animationTriggers": {
      "Item1": "CustomAnimationTriggers",
      "Item2": false,
      "Item3": ""
    }
  },
  "SelectableSettings": {
    "_imageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "imageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    }
  },
  "SliderSettings": {
    "_handleImageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_fillImageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_backgroundImageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "handleImageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "fillImageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "backgroundImageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    }
  },
  "ScrollbarSettings": {
    "_handleImageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "_backgroundImageSettings": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "handle": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    },
    "background": {
      "Item1": "ImageSettings",
      "Item2": false,
      "Item3": ""
    }
  },
  "ImageSettings": {
    "_color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "_sprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "_materal": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "_type": {
      "Item1": "Type",
      "Item2": false,
      "Item3": ""
    },
    "_preserveAspect": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "_fillCenter": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "_fillMethod": {
      "Item1": "FillMethod",
      "Item2": false,
      "Item3": ""
    },
    "_fillAmout": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_fillClockwise": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "_fillOrigin": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "sprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "materal": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "type": {
      "Item1": "Type",
      "Item2": false,
      "Item3": ""
    },
    "preserveAspect": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fillCenter": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fillMethod": {
      "Item1": "FillMethod",
      "Item2": false,
      "Item3": ""
    },
    "fillAmout": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "fillClockwise": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "fillOrigin": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "CustomColorBlock": {
    "colorMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "disabledColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "fadeDuration": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "highlightedColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "normalColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "pressedColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "selectedColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "disabledHighlightedColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    }
  },
  "CustomSpriteState": {
    "m_DisabledSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "m_HighlightedSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "m_PressedSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "m_SelectedSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "m_DisabledHighlightedSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "disabledSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "highlightedSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "pressedSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "selectedSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    },
    "disabledHighlightedSprite": {
      "Item1": "Sprite",
      "Item2": false,
      "Item3": ""
    }
  },
  "CustomAnimationTriggers": {
    "m_DisabledTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "m_HighlightedTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "m_NormalTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "m_PressedTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "m_SelectedTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "m_DisabledHighlightedTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "disabledTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "highlightedTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "normalTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "pressedTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "selectedTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "disabledHighlightedTrigger": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "TextSettings": {
    "_color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "_font": {
      "Item1": "TMP_FontAsset",
      "Item2": false,
      "Item3": ""
    },
    "_style": {
      "Item1": "FontStyleOverride",
      "Item2": false,
      "Item3": ""
    },
    "_sizeMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_lineSpacing": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_characterSpacing": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "_wordSpacing": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "font": {
      "Item1": "TMP_FontAsset",
      "Item2": false,
      "Item3": ""
    },
    "style": {
      "Item1": "FontStyleOverride",
      "Item2": false,
      "Item3": ""
    },
    "sizeMultiplier": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "lineSpacing": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "chracterSpacing": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "wordSpacing": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "FontStyleOverride": {},
  "State": {},
  "DialogType": {},
  "QueueActionType": {},
  "ElementAssignmentChangeType": {},
  "UserResponse": {},
  "Row": {
    "action": {
      "Item1": "InputAction",
      "Item2": false,
      "Item3": ""
    },
    "actionRange": {
      "Item1": "AxisRange",
      "Item2": false,
      "Item3": ""
    },
    "button": {
      "Item1": "RemapController",
      "Item2": false,
      "Item3": ""
    }
  },
  "DiffuseColorSpace": {},
  "CompressionType": {},
  "CompressionQuality": {},
  "Resolution": {},
  "TextureArrayUserSettings": {
    "resolution": {
      "Item1": "Resolution",
      "Item2": false,
      "Item3": ""
    },
    "filteringMode": {
      "Item1": "FilterMode",
      "Item2": false,
      "Item3": ""
    },
    "compressionType": {
      "Item1": "CompressionType",
      "Item2": false,
      "Item3": ""
    },
    "compressionQuality": {
      "Item1": "CompressionQuality",
      "Item2": false,
      "Item3": ""
    },
    "anisotropicFilteringLevel": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "choiceResolutionW": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "choiceResolutionH": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "choiceFilteringMode": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "choiceCompressionQuality": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "choiceCompressionType": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "TextureArrayGroup": {
    "diffuseArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "metallicArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "specularArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "normalArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "heightArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "occlusionArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "emissiveArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "detailMaskArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "detailAlbedoArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    },
    "detailNormalArraySettings": {
      "Item1": "TextureArrayUserSettings",
      "Item2": false,
      "Item3": ""
    }
  },
  "MaterialProperties": {
    "texArrIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "matIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "materialName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "originalMaterial": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "albedoTint": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "uvTileOffset": {
      "Item1": "Vector4",
      "Item2": false,
      "Item3": ""
    },
    "normalIntensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "occlusionIntensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "smoothnessIntensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "glossMapScale": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "metalIntensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "emissionColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "detailUVTileOffset": {
      "Item1": "Vector4",
      "Item2": false,
      "Item3": ""
    },
    "alphaCutoff": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "specularColor": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "detailNormalScale": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "heightIntensity": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "uvSec": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "MeshData": {
    "meshFilters": {
      "Item1": "MeshFilter",
      "Item2": true,
      "Item3": ""
    },
    "meshRenderers": {
      "Item1": "MeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "skinnedMeshRenderers": {
      "Item1": "SkinnedMeshRenderer",
      "Item2": true,
      "Item3": ""
    },
    "originalMaterials": {
      "Item1": "Material",
      "Item2": true,
      "Item3": ""
    },
    "outputMeshes": {
      "Item1": "Mesh",
      "Item2": true,
      "Item3": ""
    },
    "outputMatrices": {
      "Item1": "Matrix4x4",
      "Item2": true,
      "Item3": ""
    }
  },
  "CombineMetaData": {
    "material": {
      "Item1": "Material",
      "Item2": false,
      "Item3": ""
    },
    "materialProperties": {
      "Item1": "MaterialProperties",
      "Item2": false,
      "Item3": ""
    },
    "tempMaterialProperties": {
      "Item1": "MaterialProperties",
      "Item2": false,
      "Item3": ""
    },
    "meshesData": {
      "Item1": "MeshData",
      "Item2": true,
      "Item3": ""
    }
  },
  "MaterialEntity": {
    "combinedMats": {
      "Item1": "CombineMetaData",
      "Item2": true,
      "Item3": ""
    },
    "textArrIndex": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "diffuseMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "metallicMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "specularMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "normalMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "heightMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "occlusionMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "emissionMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "detailMaskMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "detailAlbedoMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    },
    "detailNormalMap": {
      "Item1": "Texture2D",
      "Item2": false,
      "Item3": ""
    }
  },
  "SerializableDictionary`2": {
    "_Buckets": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "_HashCodes": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "_Next": {
      "Item1": "Int32",
      "Item2": true,
      "Item3": ""
    },
    "_Count": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "_Version": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "_FreeList": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "_FreeCount": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "_Keys": {
      "Item1": "TKey",
      "Item2": true,
      "Item3": ""
    },
    "_Values": {
      "Item1": "TValue",
      "Item2": true,
      "Item3": ""
    },
    "_Comparer": {
      "Item1": "TKey",
      "Item2": true,
      "Item3": ""
    },
    "AsDictionary": {
      "Item1": "TKey",
      "Item2": true,
      "Item3": ""
    },
    "Count": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "Item": {
      "Item1": "TValue",
      "Item2": false,
      "Item3": ""
    },
    "Keys": {
      "Item1": "TKey",
      "Item2": true,
      "Item3": ""
    },
    "Values": {
      "Item1": "TValue",
      "Item2": true,
      "Item3": ""
    },
    "IsReadOnly": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ToleranceSphere": {
    "worldPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "diameter": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "preservationStrength": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isHidden": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "ToleranceSphereJson": {
    "worldPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "diameter": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "color": {
      "Item1": "Color",
      "Item2": false,
      "Item3": ""
    },
    "preservationStrength": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "isHidden": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "RegexPatterns": {
    "netError": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "nullOrEmpty": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "generalError": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "apiMistmatch": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "parametersMismatch": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "nothing": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    }
  },
  "HTTPMethods": {},
  "ImageFormat": {},
  "MtlBlendMode": {},
  "ImportOptions": {
    "zUp": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "load the OBJ file assuming its vertical axis is Z instead of Y"
    },
    "litDiffuse": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Consider diffuse map as already lit (disable lighting) if no other texture is present"
    },
    "convertToDoubleSided": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Consider to double-sided (duplicate and flip faces and normals"
    },
    "modelScaling": {
      "Item1": "Single",
      "Item2": false,
      "Item3": "Rescaling for the model (1 = no rescaling)"
    },
    "reuseLoaded": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Reuse a model in memory if already loaded"
    },
    "inheritLayer": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Inherit parent layer"
    },
    "buildColliders": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Generate mesh colliders"
    },
    "colliderConvex": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Generate convex mesh colliders (only active if buildColliders = true)\nNote: it could not work for meshes with too many smooth surface regions."
    },
    "colliderTrigger": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Mesh colliders as trigger (only active if colliderConvex = true)"
    },
    "use32bitIndices": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Use 32 bit indices when needed, if available"
    },
    "hideWhileLoading": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Hide the loaded object during the loading process"
    },
    "localPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Position of the object"
    },
    "localEulerAngles": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Rotation of the object\n(Euler angles)"
    },
    "localScale": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": "Scaling of the object\n([1,1,1] = no rescaling)"
    }
  },
  "ModelImportInfo": {
    "name": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Name for the game object created\n(leave it blank to use its file name)"
    },
    "path": {
      "Item1": "String",
      "Item2": false,
      "Item3": "Path relative to the project folder"
    },
    "skip": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": "Check this to skip this model"
    },
    "loaderOptions": {
      "Item1": "ImportOptions",
      "Item2": false,
      "Item3": ""
    }
  },
  "ImportPhase": {},
  "RootPathEnum": {},
  "BlendShape": {
    "ShapeName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "Frames": {
      "Item1": "BlendShapeFrame",
      "Item2": true,
      "Item3": ""
    }
  },
  "BlendShapeFrame": {
    "shapeName": {
      "Item1": "String",
      "Item2": false,
      "Item3": ""
    },
    "frameWeight": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "deltaVertices": {
      "Item1": "Vector3",
      "Item2": true,
      "Item3": ""
    },
    "deltaNormals": {
      "Item1": "Vector3",
      "Item2": true,
      "Item3": ""
    },
    "deltaTangents": {
      "Item1": "Vector3",
      "Item2": true,
      "Item3": ""
    },
    "vertexOffset": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    }
  },
  "ObjectMeshPairs": {},
  "MeshCombineTarget": {},
  "MeshRendererPair": {
    "attachedToMeshFilter": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "mesh": {
      "Item1": "Mesh",
      "Item2": false,
      "Item3": ""
    }
  },
  "CustomMeshActionStructure": {
    "meshRendererPair": {
      "Item1": "MeshRendererPair",
      "Item2": false,
      "Item3": ""
    },
    "gameObject": {
      "Item1": "GameObject",
      "Item2": false,
      "Item3": ""
    },
    "action": {
      "Item1": "Action",
      "Item2": false,
      "Item3": ""
    }
  },
  "SimplificationOptions": {
    "simplificationStrength": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "simplifyMeshLossless": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "enableSmartlinking": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "recalculateNormals": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "preserveUVSeamEdges": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "preserveUVFoldoverEdges": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "preserveBorderEdges": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "regardPreservationSpheres": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "preservationSpheres": {
      "Item1": "PreservationSphere",
      "Item2": true,
      "Item3": ""
    },
    "regardCurvature": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "maxIterations": {
      "Item1": "Int32",
      "Item2": false,
      "Item3": ""
    },
    "aggressiveness": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "useEdgeSort": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "PreservationSphere": {
    "worldPosition": {
      "Item1": "Vector3",
      "Item2": false,
      "Item3": ""
    },
    "diameter": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    },
    "preservationStrength": {
      "Item1": "Single",
      "Item2": false,
      "Item3": ""
    }
  },
  "OBJImportOptions": {},
  "OBJExportOptions": {
    "applyPosition": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "applyRotation": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "applyScale": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "generateMaterials": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    },
    "exportTextures": {
      "Item1": "Boolean",
      "Item2": false,
      "Item3": ""
    }
  },
  "LightningBoltAnimationMode": {}
}